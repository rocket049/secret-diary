// +build !minimal

#pragma once

#ifndef GO_QTCHARTS_H
#define GO_QTCHARTS_H

#include <stdint.h>

#ifdef __cplusplus
int QAbstractAxis_QAbstractAxis_QRegisterMetaType();
int QAbstractBarSeries_QAbstractBarSeries_QRegisterMetaType();
int QAbstractSeries_QAbstractSeries_QRegisterMetaType();
int QAreaLegendMarker_QAreaLegendMarker_QRegisterMetaType();
int QAreaSeries_QAreaSeries_QRegisterMetaType();
int QBarCategoryAxis_QBarCategoryAxis_QRegisterMetaType();
int QBarLegendMarker_QBarLegendMarker_QRegisterMetaType();
int QBarSeries_QBarSeries_QRegisterMetaType();
int QBarSet_QBarSet_QRegisterMetaType();
int QBoxPlotLegendMarker_QBoxPlotLegendMarker_QRegisterMetaType();
int QBoxPlotSeries_QBoxPlotSeries_QRegisterMetaType();
int QBoxSet_QBoxSet_QRegisterMetaType();
int QCandlestickLegendMarker_QCandlestickLegendMarker_QRegisterMetaType();
int QCandlestickModelMapper_QCandlestickModelMapper_QRegisterMetaType();
int QCandlestickSeries_QCandlestickSeries_QRegisterMetaType();
int QCandlestickSet_QCandlestickSet_QRegisterMetaType();
int QCategoryAxis_QCategoryAxis_QRegisterMetaType();
int QChart_QChart_QRegisterMetaType();
int QChartView_QChartView_QRegisterMetaType();
int QDateTimeAxis_QDateTimeAxis_QRegisterMetaType();
int QHBarModelMapper_QHBarModelMapper_QRegisterMetaType();
int QHBoxPlotModelMapper_QHBoxPlotModelMapper_QRegisterMetaType();
int QHCandlestickModelMapper_QHCandlestickModelMapper_QRegisterMetaType();
int QHPieModelMapper_QHPieModelMapper_QRegisterMetaType();
int QHXYModelMapper_QHXYModelMapper_QRegisterMetaType();
int QHorizontalBarSeries_QHorizontalBarSeries_QRegisterMetaType();
int QHorizontalPercentBarSeries_QHorizontalPercentBarSeries_QRegisterMetaType();
int QHorizontalStackedBarSeries_QHorizontalStackedBarSeries_QRegisterMetaType();
int QLegend_QLegend_QRegisterMetaType();
int QLegendMarker_QLegendMarker_QRegisterMetaType();
int QLineSeries_QLineSeries_QRegisterMetaType();
int QLogValueAxis_QLogValueAxis_QRegisterMetaType();
int QPercentBarSeries_QPercentBarSeries_QRegisterMetaType();
int QPieLegendMarker_QPieLegendMarker_QRegisterMetaType();
int QPieSeries_QPieSeries_QRegisterMetaType();
int QPieSlice_QPieSlice_QRegisterMetaType();
int QPolarChart_QPolarChart_QRegisterMetaType();
int QScatterSeries_QScatterSeries_QRegisterMetaType();
int QSplineSeries_QSplineSeries_QRegisterMetaType();
int QStackedBarSeries_QStackedBarSeries_QRegisterMetaType();
int QVBarModelMapper_QVBarModelMapper_QRegisterMetaType();
int QVBoxPlotModelMapper_QVBoxPlotModelMapper_QRegisterMetaType();
int QVCandlestickModelMapper_QVCandlestickModelMapper_QRegisterMetaType();
int QVPieModelMapper_QVPieModelMapper_QRegisterMetaType();
int QVXYModelMapper_QVXYModelMapper_QRegisterMetaType();
int QValueAxis_QValueAxis_QRegisterMetaType();
int QXYLegendMarker_QXYLegendMarker_QRegisterMetaType();
int QXYSeries_QXYSeries_QRegisterMetaType();
extern "C" {
#endif

struct QtCharts_PackedString { char* data; long long len; void* ptr; };
struct QtCharts_PackedList { void* data; long long len; };
long long QAbstractAxis_Alignment(void* ptr);
void QAbstractAxis_ConnectColorChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectColorChanged(void* ptr);
void QAbstractAxis_ColorChanged(void* ptr, void* color);
void* QAbstractAxis_GridLineColor(void* ptr);
void QAbstractAxis_ConnectGridLineColorChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectGridLineColorChanged(void* ptr);
void QAbstractAxis_GridLineColorChanged(void* ptr, void* color);
void* QAbstractAxis_GridLinePen(void* ptr);
void QAbstractAxis_ConnectGridLinePenChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectGridLinePenChanged(void* ptr);
void QAbstractAxis_GridLinePenChanged(void* ptr, void* pen);
void QAbstractAxis_ConnectGridVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectGridVisibleChanged(void* ptr);
void QAbstractAxis_GridVisibleChanged(void* ptr, char visible);
void QAbstractAxis_Hide(void* ptr);
char QAbstractAxis_IsGridLineVisible(void* ptr);
char QAbstractAxis_IsLineVisible(void* ptr);
char QAbstractAxis_IsMinorGridLineVisible(void* ptr);
char QAbstractAxis_IsReverse(void* ptr);
char QAbstractAxis_IsTitleVisible(void* ptr);
char QAbstractAxis_IsVisible(void* ptr);
int QAbstractAxis_LabelsAngle(void* ptr);
void QAbstractAxis_ConnectLabelsAngleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLabelsAngleChanged(void* ptr);
void QAbstractAxis_LabelsAngleChanged(void* ptr, int angle);
void* QAbstractAxis_LabelsBrush(void* ptr);
void QAbstractAxis_ConnectLabelsBrushChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLabelsBrushChanged(void* ptr);
void QAbstractAxis_LabelsBrushChanged(void* ptr, void* brush);
void* QAbstractAxis_LabelsColor(void* ptr);
void QAbstractAxis_ConnectLabelsColorChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLabelsColorChanged(void* ptr);
void QAbstractAxis_LabelsColorChanged(void* ptr, void* color);
char QAbstractAxis_LabelsEditable(void* ptr);
void QAbstractAxis_ConnectLabelsEditableChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLabelsEditableChanged(void* ptr);
void QAbstractAxis_LabelsEditableChanged(void* ptr, char editable);
void* QAbstractAxis_LabelsFont(void* ptr);
void QAbstractAxis_ConnectLabelsFontChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLabelsFontChanged(void* ptr);
void QAbstractAxis_LabelsFontChanged(void* ptr, void* font);
char QAbstractAxis_LabelsVisible(void* ptr);
void QAbstractAxis_ConnectLabelsVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLabelsVisibleChanged(void* ptr);
void QAbstractAxis_LabelsVisibleChanged(void* ptr, char visible);
void* QAbstractAxis_LinePen(void* ptr);
void QAbstractAxis_ConnectLinePenChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLinePenChanged(void* ptr);
void QAbstractAxis_LinePenChanged(void* ptr, void* pen);
void* QAbstractAxis_LinePenColor(void* ptr);
void QAbstractAxis_ConnectLineVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectLineVisibleChanged(void* ptr);
void QAbstractAxis_LineVisibleChanged(void* ptr, char visible);
void* QAbstractAxis_MinorGridLineColor(void* ptr);
void QAbstractAxis_ConnectMinorGridLineColorChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectMinorGridLineColorChanged(void* ptr);
void QAbstractAxis_MinorGridLineColorChanged(void* ptr, void* color);
void* QAbstractAxis_MinorGridLinePen(void* ptr);
void QAbstractAxis_ConnectMinorGridLinePenChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectMinorGridLinePenChanged(void* ptr);
void QAbstractAxis_MinorGridLinePenChanged(void* ptr, void* pen);
void QAbstractAxis_ConnectMinorGridVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectMinorGridVisibleChanged(void* ptr);
void QAbstractAxis_MinorGridVisibleChanged(void* ptr, char visible);
long long QAbstractAxis_Orientation(void* ptr);
void QAbstractAxis_ConnectReverseChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectReverseChanged(void* ptr);
void QAbstractAxis_ReverseChanged(void* ptr, char reverse);
void QAbstractAxis_SetGridLineColor(void* ptr, void* color);
void QAbstractAxis_SetGridLinePen(void* ptr, void* pen);
void QAbstractAxis_SetGridLineVisible(void* ptr, char visible);
void QAbstractAxis_SetLabelsAngle(void* ptr, int angle);
void QAbstractAxis_SetLabelsBrush(void* ptr, void* brush);
void QAbstractAxis_SetLabelsColor(void* ptr, void* color);
void QAbstractAxis_SetLabelsEditable(void* ptr, char editable);
void QAbstractAxis_SetLabelsFont(void* ptr, void* font);
void QAbstractAxis_SetLabelsVisible(void* ptr, char visible);
void QAbstractAxis_SetLinePen(void* ptr, void* pen);
void QAbstractAxis_SetLinePenColor(void* ptr, void* color);
void QAbstractAxis_SetLineVisible(void* ptr, char visible);
void QAbstractAxis_SetMax(void* ptr, void* max);
void QAbstractAxis_SetMin(void* ptr, void* min);
void QAbstractAxis_SetMinorGridLineColor(void* ptr, void* color);
void QAbstractAxis_SetMinorGridLinePen(void* ptr, void* pen);
void QAbstractAxis_SetMinorGridLineVisible(void* ptr, char visible);
void QAbstractAxis_SetRange(void* ptr, void* min, void* max);
void QAbstractAxis_SetReverse(void* ptr, char reverse);
void QAbstractAxis_SetShadesBorderColor(void* ptr, void* color);
void QAbstractAxis_SetShadesBrush(void* ptr, void* brush);
void QAbstractAxis_SetShadesColor(void* ptr, void* color);
void QAbstractAxis_SetShadesPen(void* ptr, void* pen);
void QAbstractAxis_SetShadesVisible(void* ptr, char visible);
void QAbstractAxis_SetTitleBrush(void* ptr, void* brush);
void QAbstractAxis_SetTitleFont(void* ptr, void* font);
void QAbstractAxis_SetTitleText(void* ptr, struct QtCharts_PackedString title);
void QAbstractAxis_SetTitleVisible(void* ptr, char visible);
void QAbstractAxis_SetVisible(void* ptr, char visible);
void* QAbstractAxis_ShadesBorderColor(void* ptr);
void QAbstractAxis_ConnectShadesBorderColorChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectShadesBorderColorChanged(void* ptr);
void QAbstractAxis_ShadesBorderColorChanged(void* ptr, void* color);
void* QAbstractAxis_ShadesBrush(void* ptr);
void QAbstractAxis_ConnectShadesBrushChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectShadesBrushChanged(void* ptr);
void QAbstractAxis_ShadesBrushChanged(void* ptr, void* brush);
void* QAbstractAxis_ShadesColor(void* ptr);
void QAbstractAxis_ConnectShadesColorChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectShadesColorChanged(void* ptr);
void QAbstractAxis_ShadesColorChanged(void* ptr, void* color);
void* QAbstractAxis_ShadesPen(void* ptr);
void QAbstractAxis_ConnectShadesPenChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectShadesPenChanged(void* ptr);
void QAbstractAxis_ShadesPenChanged(void* ptr, void* pen);
char QAbstractAxis_ShadesVisible(void* ptr);
void QAbstractAxis_ConnectShadesVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectShadesVisibleChanged(void* ptr);
void QAbstractAxis_ShadesVisibleChanged(void* ptr, char visible);
void QAbstractAxis_Show(void* ptr);
void* QAbstractAxis_TitleBrush(void* ptr);
void QAbstractAxis_ConnectTitleBrushChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectTitleBrushChanged(void* ptr);
void QAbstractAxis_TitleBrushChanged(void* ptr, void* brush);
void* QAbstractAxis_TitleFont(void* ptr);
void QAbstractAxis_ConnectTitleFontChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectTitleFontChanged(void* ptr);
void QAbstractAxis_TitleFontChanged(void* ptr, void* font);
struct QtCharts_PackedString QAbstractAxis_TitleText(void* ptr);
void QAbstractAxis_ConnectTitleTextChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectTitleTextChanged(void* ptr);
void QAbstractAxis_TitleTextChanged(void* ptr, struct QtCharts_PackedString text);
void QAbstractAxis_ConnectTitleVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectTitleVisibleChanged(void* ptr);
void QAbstractAxis_TitleVisibleChanged(void* ptr, char visible);
long long QAbstractAxis_Type(void* ptr);
void QAbstractAxis_ConnectVisibleChanged(void* ptr, long long t);
void QAbstractAxis_DisconnectVisibleChanged(void* ptr);
void QAbstractAxis_VisibleChanged(void* ptr, char visible);
void QAbstractAxis_DestroyQAbstractAxis(void* ptr);
void QAbstractAxis_DestroyQAbstractAxisDefault(void* ptr);
void* QAbstractAxis___children_atList(void* ptr, int i);
void QAbstractAxis___children_setList(void* ptr, void* i);
void* QAbstractAxis___children_newList(void* ptr);
void* QAbstractAxis___dynamicPropertyNames_atList(void* ptr, int i);
void QAbstractAxis___dynamicPropertyNames_setList(void* ptr, void* i);
void* QAbstractAxis___dynamicPropertyNames_newList(void* ptr);
void* QAbstractAxis___findChildren_atList(void* ptr, int i);
void QAbstractAxis___findChildren_setList(void* ptr, void* i);
void* QAbstractAxis___findChildren_newList(void* ptr);
void* QAbstractAxis___findChildren_atList3(void* ptr, int i);
void QAbstractAxis___findChildren_setList3(void* ptr, void* i);
void* QAbstractAxis___findChildren_newList3(void* ptr);
void QAbstractAxis_ChildEventDefault(void* ptr, void* event);
void QAbstractAxis_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractAxis_CustomEventDefault(void* ptr, void* event);
void QAbstractAxis_DeleteLaterDefault(void* ptr);
void QAbstractAxis_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractAxis_EventDefault(void* ptr, void* e);
char QAbstractAxis_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractAxis_MetaObjectDefault(void* ptr);
void QAbstractAxis_TimerEventDefault(void* ptr, void* event);
char QAbstractBarSeries_Append(void* ptr, void* set);
char QAbstractBarSeries_Append2(void* ptr, void* sets);
struct QtCharts_PackedList QAbstractBarSeries_BarSets(void* ptr);
double QAbstractBarSeries_BarWidth(void* ptr);
void QAbstractBarSeries_ConnectBarsetsAdded(void* ptr, long long t);
void QAbstractBarSeries_DisconnectBarsetsAdded(void* ptr);
void QAbstractBarSeries_BarsetsAdded(void* ptr, void* sets);
void QAbstractBarSeries_ConnectBarsetsRemoved(void* ptr, long long t);
void QAbstractBarSeries_DisconnectBarsetsRemoved(void* ptr);
void QAbstractBarSeries_BarsetsRemoved(void* ptr, void* sets);
void QAbstractBarSeries_Clear(void* ptr);
void QAbstractBarSeries_ConnectClicked(void* ptr, long long t);
void QAbstractBarSeries_DisconnectClicked(void* ptr);
void QAbstractBarSeries_Clicked(void* ptr, int index, void* barset);
int QAbstractBarSeries_Count(void* ptr);
void QAbstractBarSeries_ConnectCountChanged(void* ptr, long long t);
void QAbstractBarSeries_DisconnectCountChanged(void* ptr);
void QAbstractBarSeries_CountChanged(void* ptr);
void QAbstractBarSeries_ConnectDoubleClicked(void* ptr, long long t);
void QAbstractBarSeries_DisconnectDoubleClicked(void* ptr);
void QAbstractBarSeries_DoubleClicked(void* ptr, int index, void* barset);
void QAbstractBarSeries_ConnectHovered(void* ptr, long long t);
void QAbstractBarSeries_DisconnectHovered(void* ptr);
void QAbstractBarSeries_Hovered(void* ptr, char status, int index, void* barset);
char QAbstractBarSeries_Insert(void* ptr, int index, void* set);
char QAbstractBarSeries_IsLabelsVisible(void* ptr);
double QAbstractBarSeries_LabelsAngle(void* ptr);
void QAbstractBarSeries_ConnectLabelsAngleChanged(void* ptr, long long t);
void QAbstractBarSeries_DisconnectLabelsAngleChanged(void* ptr);
void QAbstractBarSeries_LabelsAngleChanged(void* ptr, double angle);
struct QtCharts_PackedString QAbstractBarSeries_LabelsFormat(void* ptr);
void QAbstractBarSeries_ConnectLabelsFormatChanged(void* ptr, long long t);
void QAbstractBarSeries_DisconnectLabelsFormatChanged(void* ptr);
void QAbstractBarSeries_LabelsFormatChanged(void* ptr, struct QtCharts_PackedString format);
long long QAbstractBarSeries_LabelsPosition(void* ptr);
void QAbstractBarSeries_ConnectLabelsPositionChanged(void* ptr, long long t);
void QAbstractBarSeries_DisconnectLabelsPositionChanged(void* ptr);
void QAbstractBarSeries_LabelsPositionChanged(void* ptr, long long position);
int QAbstractBarSeries_LabelsPrecision(void* ptr);
void QAbstractBarSeries_ConnectLabelsPrecisionChanged(void* ptr, long long t);
void QAbstractBarSeries_DisconnectLabelsPrecisionChanged(void* ptr);
void QAbstractBarSeries_LabelsPrecisionChanged(void* ptr, int precision);
void QAbstractBarSeries_ConnectLabelsVisibleChanged(void* ptr, long long t);
void QAbstractBarSeries_DisconnectLabelsVisibleChanged(void* ptr);
void QAbstractBarSeries_LabelsVisibleChanged(void* ptr);
void QAbstractBarSeries_ConnectPressed(void* ptr, long long t);
void QAbstractBarSeries_DisconnectPressed(void* ptr);
void QAbstractBarSeries_Pressed(void* ptr, int index, void* barset);
void QAbstractBarSeries_ConnectReleased(void* ptr, long long t);
void QAbstractBarSeries_DisconnectReleased(void* ptr);
void QAbstractBarSeries_Released(void* ptr, int index, void* barset);
char QAbstractBarSeries_Remove(void* ptr, void* set);
void QAbstractBarSeries_SetBarWidth(void* ptr, double width);
void QAbstractBarSeries_SetLabelsAngle(void* ptr, double angle);
void QAbstractBarSeries_SetLabelsFormat(void* ptr, struct QtCharts_PackedString format);
void QAbstractBarSeries_SetLabelsPosition(void* ptr, long long position);
void QAbstractBarSeries_SetLabelsPrecision(void* ptr, int precision);
void QAbstractBarSeries_SetLabelsVisible(void* ptr, char visible);
char QAbstractBarSeries_Take(void* ptr, void* set);
void QAbstractBarSeries_DestroyQAbstractBarSeries(void* ptr);
void QAbstractBarSeries_DestroyQAbstractBarSeriesDefault(void* ptr);
void* QAbstractBarSeries___append_sets_atList2(void* ptr, int i);
void QAbstractBarSeries___append_sets_setList2(void* ptr, void* i);
void* QAbstractBarSeries___append_sets_newList2(void* ptr);
void* QAbstractBarSeries___barSets_atList(void* ptr, int i);
void QAbstractBarSeries___barSets_setList(void* ptr, void* i);
void* QAbstractBarSeries___barSets_newList(void* ptr);
void* QAbstractBarSeries___barsetsAdded_sets_atList(void* ptr, int i);
void QAbstractBarSeries___barsetsAdded_sets_setList(void* ptr, void* i);
void* QAbstractBarSeries___barsetsAdded_sets_newList(void* ptr);
void* QAbstractBarSeries___barsetsRemoved_sets_atList(void* ptr, int i);
void QAbstractBarSeries___barsetsRemoved_sets_setList(void* ptr, void* i);
void* QAbstractBarSeries___barsetsRemoved_sets_newList(void* ptr);
long long QAbstractBarSeries_Type(void* ptr);
long long QAbstractBarSeries_TypeDefault(void* ptr);
char QAbstractSeries_AttachAxis(void* ptr, void* axis);
struct QtCharts_PackedList QAbstractSeries_AttachedAxes(void* ptr);
void* QAbstractSeries_Chart(void* ptr);
char QAbstractSeries_DetachAxis(void* ptr, void* axis);
void QAbstractSeries_Hide(void* ptr);
char QAbstractSeries_IsVisible(void* ptr);
struct QtCharts_PackedString QAbstractSeries_Name(void* ptr);
void QAbstractSeries_ConnectNameChanged(void* ptr, long long t);
void QAbstractSeries_DisconnectNameChanged(void* ptr);
void QAbstractSeries_NameChanged(void* ptr);
double QAbstractSeries_Opacity(void* ptr);
void QAbstractSeries_ConnectOpacityChanged(void* ptr, long long t);
void QAbstractSeries_DisconnectOpacityChanged(void* ptr);
void QAbstractSeries_OpacityChanged(void* ptr);
void QAbstractSeries_SetName(void* ptr, struct QtCharts_PackedString name);
void QAbstractSeries_SetOpacity(void* ptr, double opacity);
void QAbstractSeries_SetUseOpenGL(void* ptr, char enable);
void QAbstractSeries_SetVisible(void* ptr, char visible);
void QAbstractSeries_Show(void* ptr);
long long QAbstractSeries_Type(void* ptr);
char QAbstractSeries_UseOpenGL(void* ptr);
void QAbstractSeries_ConnectUseOpenGLChanged(void* ptr, long long t);
void QAbstractSeries_DisconnectUseOpenGLChanged(void* ptr);
void QAbstractSeries_UseOpenGLChanged(void* ptr);
void QAbstractSeries_ConnectVisibleChanged(void* ptr, long long t);
void QAbstractSeries_DisconnectVisibleChanged(void* ptr);
void QAbstractSeries_VisibleChanged(void* ptr);
void QAbstractSeries_DestroyQAbstractSeries(void* ptr);
void QAbstractSeries_DestroyQAbstractSeriesDefault(void* ptr);
void* QAbstractSeries___attachedAxes_atList(void* ptr, int i);
void QAbstractSeries___attachedAxes_setList(void* ptr, void* i);
void* QAbstractSeries___attachedAxes_newList(void* ptr);
void* QAbstractSeries___children_atList(void* ptr, int i);
void QAbstractSeries___children_setList(void* ptr, void* i);
void* QAbstractSeries___children_newList(void* ptr);
void* QAbstractSeries___dynamicPropertyNames_atList(void* ptr, int i);
void QAbstractSeries___dynamicPropertyNames_setList(void* ptr, void* i);
void* QAbstractSeries___dynamicPropertyNames_newList(void* ptr);
void* QAbstractSeries___findChildren_atList(void* ptr, int i);
void QAbstractSeries___findChildren_setList(void* ptr, void* i);
void* QAbstractSeries___findChildren_newList(void* ptr);
void* QAbstractSeries___findChildren_atList3(void* ptr, int i);
void QAbstractSeries___findChildren_setList3(void* ptr, void* i);
void* QAbstractSeries___findChildren_newList3(void* ptr);
void QAbstractSeries_ChildEventDefault(void* ptr, void* event);
void QAbstractSeries_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractSeries_CustomEventDefault(void* ptr, void* event);
void QAbstractSeries_DeleteLaterDefault(void* ptr);
void QAbstractSeries_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractSeries_EventDefault(void* ptr, void* e);
char QAbstractSeries_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractSeries_MetaObjectDefault(void* ptr);
void QAbstractSeries_TimerEventDefault(void* ptr, void* event);
void* QAreaLegendMarker_Series(void* ptr);
void* QAreaLegendMarker_SeriesDefault(void* ptr);
long long QAreaLegendMarker_Type(void* ptr);
long long QAreaLegendMarker_TypeDefault(void* ptr);
void QAreaLegendMarker_DestroyQAreaLegendMarker(void* ptr);
void QAreaLegendMarker_DestroyQAreaLegendMarkerDefault(void* ptr);
void* QAreaSeries_NewQAreaSeries(void* parent);
void* QAreaSeries_NewQAreaSeries2(void* upperSeries, void* lowerSeries);
void* QAreaSeries_BorderColor(void* ptr);
void QAreaSeries_ConnectBorderColorChanged(void* ptr, long long t);
void QAreaSeries_DisconnectBorderColorChanged(void* ptr);
void QAreaSeries_BorderColorChanged(void* ptr, void* color);
void* QAreaSeries_Brush(void* ptr);
void QAreaSeries_ConnectClicked(void* ptr, long long t);
void QAreaSeries_DisconnectClicked(void* ptr);
void QAreaSeries_Clicked(void* ptr, void* point);
void* QAreaSeries_Color(void* ptr);
void QAreaSeries_ConnectColorChanged(void* ptr, long long t);
void QAreaSeries_DisconnectColorChanged(void* ptr);
void QAreaSeries_ColorChanged(void* ptr, void* color);
void QAreaSeries_ConnectDoubleClicked(void* ptr, long long t);
void QAreaSeries_DisconnectDoubleClicked(void* ptr);
void QAreaSeries_DoubleClicked(void* ptr, void* point);
void QAreaSeries_ConnectHovered(void* ptr, long long t);
void QAreaSeries_DisconnectHovered(void* ptr);
void QAreaSeries_Hovered(void* ptr, void* point, char state);
void* QAreaSeries_LowerSeries(void* ptr);
void* QAreaSeries_Pen(void* ptr);
char QAreaSeries_PointLabelsClipping(void* ptr);
void QAreaSeries_ConnectPointLabelsClippingChanged(void* ptr, long long t);
void QAreaSeries_DisconnectPointLabelsClippingChanged(void* ptr);
void QAreaSeries_PointLabelsClippingChanged(void* ptr, char clipping);
void* QAreaSeries_PointLabelsColor(void* ptr);
void QAreaSeries_ConnectPointLabelsColorChanged(void* ptr, long long t);
void QAreaSeries_DisconnectPointLabelsColorChanged(void* ptr);
void QAreaSeries_PointLabelsColorChanged(void* ptr, void* color);
void* QAreaSeries_PointLabelsFont(void* ptr);
void QAreaSeries_ConnectPointLabelsFontChanged(void* ptr, long long t);
void QAreaSeries_DisconnectPointLabelsFontChanged(void* ptr);
void QAreaSeries_PointLabelsFontChanged(void* ptr, void* font);
struct QtCharts_PackedString QAreaSeries_PointLabelsFormat(void* ptr);
void QAreaSeries_ConnectPointLabelsFormatChanged(void* ptr, long long t);
void QAreaSeries_DisconnectPointLabelsFormatChanged(void* ptr);
void QAreaSeries_PointLabelsFormatChanged(void* ptr, struct QtCharts_PackedString format);
void QAreaSeries_ConnectPointLabelsVisibilityChanged(void* ptr, long long t);
void QAreaSeries_DisconnectPointLabelsVisibilityChanged(void* ptr);
void QAreaSeries_PointLabelsVisibilityChanged(void* ptr, char visible);
char QAreaSeries_PointLabelsVisible(void* ptr);
char QAreaSeries_PointsVisible(void* ptr);
void QAreaSeries_ConnectPressed(void* ptr, long long t);
void QAreaSeries_DisconnectPressed(void* ptr);
void QAreaSeries_Pressed(void* ptr, void* point);
void QAreaSeries_ConnectReleased(void* ptr, long long t);
void QAreaSeries_DisconnectReleased(void* ptr);
void QAreaSeries_Released(void* ptr, void* point);
void QAreaSeries_SetBorderColor(void* ptr, void* color);
void QAreaSeries_SetBrush(void* ptr, void* brush);
void QAreaSeries_SetColor(void* ptr, void* color);
void QAreaSeries_SetLowerSeries(void* ptr, void* series);
void QAreaSeries_SetPen(void* ptr, void* pen);
void QAreaSeries_SetPointLabelsClipping(void* ptr, char enabled);
void QAreaSeries_SetPointLabelsColor(void* ptr, void* color);
void QAreaSeries_SetPointLabelsFont(void* ptr, void* font);
void QAreaSeries_SetPointLabelsFormat(void* ptr, struct QtCharts_PackedString format);
void QAreaSeries_SetPointLabelsVisible(void* ptr, char visible);
void QAreaSeries_SetPointsVisible(void* ptr, char visible);
void QAreaSeries_SetUpperSeries(void* ptr, void* series);
long long QAreaSeries_Type(void* ptr);
long long QAreaSeries_TypeDefault(void* ptr);
void* QAreaSeries_UpperSeries(void* ptr);
void QAreaSeries_DestroyQAreaSeries(void* ptr);
void QAreaSeries_DestroyQAreaSeriesDefault(void* ptr);
void* QBarCategoryAxis_NewQBarCategoryAxis(void* parent);
void QBarCategoryAxis_Append(void* ptr, struct QtCharts_PackedString categories);
void QBarCategoryAxis_Append2(void* ptr, struct QtCharts_PackedString category);
struct QtCharts_PackedString QBarCategoryAxis_At(void* ptr, int index);
struct QtCharts_PackedString QBarCategoryAxis_Categories(void* ptr);
void QBarCategoryAxis_ConnectCategoriesChanged(void* ptr, long long t);
void QBarCategoryAxis_DisconnectCategoriesChanged(void* ptr);
void QBarCategoryAxis_CategoriesChanged(void* ptr);
void QBarCategoryAxis_Clear(void* ptr);
int QBarCategoryAxis_Count(void* ptr);
void QBarCategoryAxis_ConnectCountChanged(void* ptr, long long t);
void QBarCategoryAxis_DisconnectCountChanged(void* ptr);
void QBarCategoryAxis_CountChanged(void* ptr);
void QBarCategoryAxis_Insert(void* ptr, int index, struct QtCharts_PackedString category);
struct QtCharts_PackedString QBarCategoryAxis_Max(void* ptr);
void QBarCategoryAxis_ConnectMaxChanged(void* ptr, long long t);
void QBarCategoryAxis_DisconnectMaxChanged(void* ptr);
void QBarCategoryAxis_MaxChanged(void* ptr, struct QtCharts_PackedString max);
struct QtCharts_PackedString QBarCategoryAxis_Min(void* ptr);
void QBarCategoryAxis_ConnectMinChanged(void* ptr, long long t);
void QBarCategoryAxis_DisconnectMinChanged(void* ptr);
void QBarCategoryAxis_MinChanged(void* ptr, struct QtCharts_PackedString min);
void QBarCategoryAxis_ConnectRangeChanged(void* ptr, long long t);
void QBarCategoryAxis_DisconnectRangeChanged(void* ptr);
void QBarCategoryAxis_RangeChanged(void* ptr, struct QtCharts_PackedString min, struct QtCharts_PackedString max);
void QBarCategoryAxis_Remove(void* ptr, struct QtCharts_PackedString category);
void QBarCategoryAxis_Replace(void* ptr, struct QtCharts_PackedString oldCategory, struct QtCharts_PackedString newCategory);
void QBarCategoryAxis_SetCategories(void* ptr, struct QtCharts_PackedString categories);
void QBarCategoryAxis_SetMax(void* ptr, struct QtCharts_PackedString max);
void QBarCategoryAxis_SetMin(void* ptr, struct QtCharts_PackedString min);
void QBarCategoryAxis_SetRange(void* ptr, struct QtCharts_PackedString minCategory, struct QtCharts_PackedString maxCategory);
long long QBarCategoryAxis_Type(void* ptr);
long long QBarCategoryAxis_TypeDefault(void* ptr);
void QBarCategoryAxis_DestroyQBarCategoryAxis(void* ptr);
void QBarCategoryAxis_DestroyQBarCategoryAxisDefault(void* ptr);
void* QBarLegendMarker_Barset(void* ptr);
void* QBarLegendMarker_Series(void* ptr);
void* QBarLegendMarker_SeriesDefault(void* ptr);
long long QBarLegendMarker_Type(void* ptr);
long long QBarLegendMarker_TypeDefault(void* ptr);
void QBarLegendMarker_DestroyQBarLegendMarker(void* ptr);
void QBarLegendMarker_DestroyQBarLegendMarkerDefault(void* ptr);
void* QBarSeries_NewQBarSeries(void* parent);
long long QBarSeries_Type(void* ptr);
long long QBarSeries_TypeDefault(void* ptr);
void QBarSeries_DestroyQBarSeries(void* ptr);
void QBarSeries_DestroyQBarSeriesDefault(void* ptr);
void* QBarSet_NewQBarSet(struct QtCharts_PackedString label, void* parent);
void QBarSet_Append(void* ptr, double value);
void QBarSet_Append2(void* ptr, void* values);
double QBarSet_At(void* ptr, int index);
void* QBarSet_BorderColor(void* ptr);
void QBarSet_ConnectBorderColorChanged(void* ptr, long long t);
void QBarSet_DisconnectBorderColorChanged(void* ptr);
void QBarSet_BorderColorChanged(void* ptr, void* color);
void* QBarSet_Brush(void* ptr);
void QBarSet_ConnectBrushChanged(void* ptr, long long t);
void QBarSet_DisconnectBrushChanged(void* ptr);
void QBarSet_BrushChanged(void* ptr);
void QBarSet_ConnectClicked(void* ptr, long long t);
void QBarSet_DisconnectClicked(void* ptr);
void QBarSet_Clicked(void* ptr, int index);
void* QBarSet_Color(void* ptr);
void QBarSet_ConnectColorChanged(void* ptr, long long t);
void QBarSet_DisconnectColorChanged(void* ptr);
void QBarSet_ColorChanged(void* ptr, void* color);
int QBarSet_Count(void* ptr);
void QBarSet_ConnectDoubleClicked(void* ptr, long long t);
void QBarSet_DisconnectDoubleClicked(void* ptr);
void QBarSet_DoubleClicked(void* ptr, int index);
void QBarSet_ConnectHovered(void* ptr, long long t);
void QBarSet_DisconnectHovered(void* ptr);
void QBarSet_Hovered(void* ptr, char status, int index);
void QBarSet_Insert(void* ptr, int index, double value);
struct QtCharts_PackedString QBarSet_Label(void* ptr);
void* QBarSet_LabelBrush(void* ptr);
void QBarSet_ConnectLabelBrushChanged(void* ptr, long long t);
void QBarSet_DisconnectLabelBrushChanged(void* ptr);
void QBarSet_LabelBrushChanged(void* ptr);
void QBarSet_ConnectLabelChanged(void* ptr, long long t);
void QBarSet_DisconnectLabelChanged(void* ptr);
void QBarSet_LabelChanged(void* ptr);
void* QBarSet_LabelColor(void* ptr);
void QBarSet_ConnectLabelColorChanged(void* ptr, long long t);
void QBarSet_DisconnectLabelColorChanged(void* ptr);
void QBarSet_LabelColorChanged(void* ptr, void* color);
void* QBarSet_LabelFont(void* ptr);
void QBarSet_ConnectLabelFontChanged(void* ptr, long long t);
void QBarSet_DisconnectLabelFontChanged(void* ptr);
void QBarSet_LabelFontChanged(void* ptr);
void* QBarSet_Pen(void* ptr);
void QBarSet_ConnectPenChanged(void* ptr, long long t);
void QBarSet_DisconnectPenChanged(void* ptr);
void QBarSet_PenChanged(void* ptr);
void QBarSet_ConnectPressed(void* ptr, long long t);
void QBarSet_DisconnectPressed(void* ptr);
void QBarSet_Pressed(void* ptr, int index);
void QBarSet_ConnectReleased(void* ptr, long long t);
void QBarSet_DisconnectReleased(void* ptr);
void QBarSet_Released(void* ptr, int index);
void QBarSet_Remove(void* ptr, int index, int count);
void QBarSet_Replace(void* ptr, int index, double value);
void QBarSet_SetBorderColor(void* ptr, void* color);
void QBarSet_SetBrush(void* ptr, void* brush);
void QBarSet_SetColor(void* ptr, void* color);
void QBarSet_SetLabel(void* ptr, struct QtCharts_PackedString label);
void QBarSet_SetLabelBrush(void* ptr, void* brush);
void QBarSet_SetLabelColor(void* ptr, void* color);
void QBarSet_SetLabelFont(void* ptr, void* font);
void QBarSet_SetPen(void* ptr, void* pen);
double QBarSet_Sum(void* ptr);
void QBarSet_ConnectValueChanged(void* ptr, long long t);
void QBarSet_DisconnectValueChanged(void* ptr);
void QBarSet_ValueChanged(void* ptr, int index);
void QBarSet_ConnectValuesAdded(void* ptr, long long t);
void QBarSet_DisconnectValuesAdded(void* ptr);
void QBarSet_ValuesAdded(void* ptr, int index, int count);
void QBarSet_ConnectValuesRemoved(void* ptr, long long t);
void QBarSet_DisconnectValuesRemoved(void* ptr);
void QBarSet_ValuesRemoved(void* ptr, int index, int count);
void QBarSet_DestroyQBarSet(void* ptr);
void QBarSet_DestroyQBarSetDefault(void* ptr);
double QBarSet___append_values_atList2(void* ptr, int i);
void QBarSet___append_values_setList2(void* ptr, double i);
void* QBarSet___append_values_newList2(void* ptr);
void* QBarSet___children_atList(void* ptr, int i);
void QBarSet___children_setList(void* ptr, void* i);
void* QBarSet___children_newList(void* ptr);
void* QBarSet___dynamicPropertyNames_atList(void* ptr, int i);
void QBarSet___dynamicPropertyNames_setList(void* ptr, void* i);
void* QBarSet___dynamicPropertyNames_newList(void* ptr);
void* QBarSet___findChildren_atList(void* ptr, int i);
void QBarSet___findChildren_setList(void* ptr, void* i);
void* QBarSet___findChildren_newList(void* ptr);
void* QBarSet___findChildren_atList3(void* ptr, int i);
void QBarSet___findChildren_setList3(void* ptr, void* i);
void* QBarSet___findChildren_newList3(void* ptr);
void QBarSet_ChildEventDefault(void* ptr, void* event);
void QBarSet_ConnectNotifyDefault(void* ptr, void* sign);
void QBarSet_CustomEventDefault(void* ptr, void* event);
void QBarSet_DeleteLaterDefault(void* ptr);
void QBarSet_DisconnectNotifyDefault(void* ptr, void* sign);
char QBarSet_EventDefault(void* ptr, void* e);
char QBarSet_EventFilterDefault(void* ptr, void* watched, void* event);
void* QBarSet_MetaObjectDefault(void* ptr);
void QBarSet_TimerEventDefault(void* ptr, void* event);
void* QBoxPlotLegendMarker_Series(void* ptr);
void* QBoxPlotLegendMarker_SeriesDefault(void* ptr);
long long QBoxPlotLegendMarker_Type(void* ptr);
long long QBoxPlotLegendMarker_TypeDefault(void* ptr);
void QBoxPlotLegendMarker_DestroyQBoxPlotLegendMarker(void* ptr);
void QBoxPlotLegendMarker_DestroyQBoxPlotLegendMarkerDefault(void* ptr);
void* QBoxPlotSeries_NewQBoxPlotSeries(void* parent);
char QBoxPlotSeries_Append(void* ptr, void* set);
char QBoxPlotSeries_Append2(void* ptr, void* sets);
void QBoxPlotSeries_ConnectBoxOutlineVisibilityChanged(void* ptr, long long t);
void QBoxPlotSeries_DisconnectBoxOutlineVisibilityChanged(void* ptr);
void QBoxPlotSeries_BoxOutlineVisibilityChanged(void* ptr);
char QBoxPlotSeries_BoxOutlineVisible(void* ptr);
struct QtCharts_PackedList QBoxPlotSeries_BoxSets(void* ptr);
double QBoxPlotSeries_BoxWidth(void* ptr);
void QBoxPlotSeries_ConnectBoxWidthChanged(void* ptr, long long t);
void QBoxPlotSeries_DisconnectBoxWidthChanged(void* ptr);
void QBoxPlotSeries_BoxWidthChanged(void* ptr);
void QBoxPlotSeries_ConnectBoxsetsAdded(void* ptr, long long t);
void QBoxPlotSeries_DisconnectBoxsetsAdded(void* ptr);
void QBoxPlotSeries_BoxsetsAdded(void* ptr, void* sets);
void QBoxPlotSeries_ConnectBoxsetsRemoved(void* ptr, long long t);
void QBoxPlotSeries_DisconnectBoxsetsRemoved(void* ptr);
void QBoxPlotSeries_BoxsetsRemoved(void* ptr, void* sets);
void* QBoxPlotSeries_Brush(void* ptr);
void QBoxPlotSeries_ConnectBrushChanged(void* ptr, long long t);
void QBoxPlotSeries_DisconnectBrushChanged(void* ptr);
void QBoxPlotSeries_BrushChanged(void* ptr);
void QBoxPlotSeries_Clear(void* ptr);
void QBoxPlotSeries_ConnectClicked(void* ptr, long long t);
void QBoxPlotSeries_DisconnectClicked(void* ptr);
void QBoxPlotSeries_Clicked(void* ptr, void* boxset);
int QBoxPlotSeries_Count(void* ptr);
void QBoxPlotSeries_ConnectCountChanged(void* ptr, long long t);
void QBoxPlotSeries_DisconnectCountChanged(void* ptr);
void QBoxPlotSeries_CountChanged(void* ptr);
void QBoxPlotSeries_ConnectDoubleClicked(void* ptr, long long t);
void QBoxPlotSeries_DisconnectDoubleClicked(void* ptr);
void QBoxPlotSeries_DoubleClicked(void* ptr, void* boxset);
void QBoxPlotSeries_ConnectHovered(void* ptr, long long t);
void QBoxPlotSeries_DisconnectHovered(void* ptr);
void QBoxPlotSeries_Hovered(void* ptr, char status, void* boxset);
char QBoxPlotSeries_Insert(void* ptr, int index, void* set);
void* QBoxPlotSeries_Pen(void* ptr);
void QBoxPlotSeries_ConnectPenChanged(void* ptr, long long t);
void QBoxPlotSeries_DisconnectPenChanged(void* ptr);
void QBoxPlotSeries_PenChanged(void* ptr);
void QBoxPlotSeries_ConnectPressed(void* ptr, long long t);
void QBoxPlotSeries_DisconnectPressed(void* ptr);
void QBoxPlotSeries_Pressed(void* ptr, void* boxset);
void QBoxPlotSeries_ConnectReleased(void* ptr, long long t);
void QBoxPlotSeries_DisconnectReleased(void* ptr);
void QBoxPlotSeries_Released(void* ptr, void* boxset);
char QBoxPlotSeries_Remove(void* ptr, void* set);
void QBoxPlotSeries_SetBoxOutlineVisible(void* ptr, char visible);
void QBoxPlotSeries_SetBoxWidth(void* ptr, double width);
void QBoxPlotSeries_SetBrush(void* ptr, void* brush);
void QBoxPlotSeries_SetPen(void* ptr, void* pen);
char QBoxPlotSeries_Take(void* ptr, void* set);
long long QBoxPlotSeries_Type(void* ptr);
long long QBoxPlotSeries_TypeDefault(void* ptr);
void QBoxPlotSeries_DestroyQBoxPlotSeries(void* ptr);
void QBoxPlotSeries_DestroyQBoxPlotSeriesDefault(void* ptr);
void* QBoxPlotSeries___append_sets_atList2(void* ptr, int i);
void QBoxPlotSeries___append_sets_setList2(void* ptr, void* i);
void* QBoxPlotSeries___append_sets_newList2(void* ptr);
void* QBoxPlotSeries___boxSets_atList(void* ptr, int i);
void QBoxPlotSeries___boxSets_setList(void* ptr, void* i);
void* QBoxPlotSeries___boxSets_newList(void* ptr);
void* QBoxPlotSeries___boxsetsAdded_sets_atList(void* ptr, int i);
void QBoxPlotSeries___boxsetsAdded_sets_setList(void* ptr, void* i);
void* QBoxPlotSeries___boxsetsAdded_sets_newList(void* ptr);
void* QBoxPlotSeries___boxsetsRemoved_sets_atList(void* ptr, int i);
void QBoxPlotSeries___boxsetsRemoved_sets_setList(void* ptr, void* i);
void* QBoxPlotSeries___boxsetsRemoved_sets_newList(void* ptr);
void* QBoxSet_NewQBoxSet(struct QtCharts_PackedString label, void* parent);
void* QBoxSet_NewQBoxSet2(double le, double lq, double m, double uq, double ue, struct QtCharts_PackedString label, void* parent);
void QBoxSet_Append(void* ptr, double value);
void QBoxSet_Append2(void* ptr, void* values);
double QBoxSet_At(void* ptr, int index);
void* QBoxSet_Brush(void* ptr);
void QBoxSet_ConnectBrushChanged(void* ptr, long long t);
void QBoxSet_DisconnectBrushChanged(void* ptr);
void QBoxSet_BrushChanged(void* ptr);
void QBoxSet_Clear(void* ptr);
void QBoxSet_ConnectCleared(void* ptr, long long t);
void QBoxSet_DisconnectCleared(void* ptr);
void QBoxSet_Cleared(void* ptr);
void QBoxSet_ConnectClicked(void* ptr, long long t);
void QBoxSet_DisconnectClicked(void* ptr);
void QBoxSet_Clicked(void* ptr);
int QBoxSet_Count(void* ptr);
void QBoxSet_ConnectDoubleClicked(void* ptr, long long t);
void QBoxSet_DisconnectDoubleClicked(void* ptr);
void QBoxSet_DoubleClicked(void* ptr);
void QBoxSet_ConnectHovered(void* ptr, long long t);
void QBoxSet_DisconnectHovered(void* ptr);
void QBoxSet_Hovered(void* ptr, char status);
struct QtCharts_PackedString QBoxSet_Label(void* ptr);
void* QBoxSet_Pen(void* ptr);
void QBoxSet_ConnectPenChanged(void* ptr, long long t);
void QBoxSet_DisconnectPenChanged(void* ptr);
void QBoxSet_PenChanged(void* ptr);
void QBoxSet_ConnectPressed(void* ptr, long long t);
void QBoxSet_DisconnectPressed(void* ptr);
void QBoxSet_Pressed(void* ptr);
void QBoxSet_ConnectReleased(void* ptr, long long t);
void QBoxSet_DisconnectReleased(void* ptr);
void QBoxSet_Released(void* ptr);
void QBoxSet_SetBrush(void* ptr, void* brush);
void QBoxSet_SetLabel(void* ptr, struct QtCharts_PackedString label);
void QBoxSet_SetPen(void* ptr, void* pen);
void QBoxSet_SetValue(void* ptr, int index, double value);
void QBoxSet_ConnectValueChanged(void* ptr, long long t);
void QBoxSet_DisconnectValueChanged(void* ptr);
void QBoxSet_ValueChanged(void* ptr, int index);
void QBoxSet_ConnectValuesChanged(void* ptr, long long t);
void QBoxSet_DisconnectValuesChanged(void* ptr);
void QBoxSet_ValuesChanged(void* ptr);
void QBoxSet_DestroyQBoxSet(void* ptr);
void QBoxSet_DestroyQBoxSetDefault(void* ptr);
double QBoxSet___append_values_atList2(void* ptr, int i);
void QBoxSet___append_values_setList2(void* ptr, double i);
void* QBoxSet___append_values_newList2(void* ptr);
void* QBoxSet___children_atList(void* ptr, int i);
void QBoxSet___children_setList(void* ptr, void* i);
void* QBoxSet___children_newList(void* ptr);
void* QBoxSet___dynamicPropertyNames_atList(void* ptr, int i);
void QBoxSet___dynamicPropertyNames_setList(void* ptr, void* i);
void* QBoxSet___dynamicPropertyNames_newList(void* ptr);
void* QBoxSet___findChildren_atList(void* ptr, int i);
void QBoxSet___findChildren_setList(void* ptr, void* i);
void* QBoxSet___findChildren_newList(void* ptr);
void* QBoxSet___findChildren_atList3(void* ptr, int i);
void QBoxSet___findChildren_setList3(void* ptr, void* i);
void* QBoxSet___findChildren_newList3(void* ptr);
void QBoxSet_ChildEventDefault(void* ptr, void* event);
void QBoxSet_ConnectNotifyDefault(void* ptr, void* sign);
void QBoxSet_CustomEventDefault(void* ptr, void* event);
void QBoxSet_DeleteLaterDefault(void* ptr);
void QBoxSet_DisconnectNotifyDefault(void* ptr, void* sign);
char QBoxSet_EventDefault(void* ptr, void* e);
char QBoxSet_EventFilterDefault(void* ptr, void* watched, void* event);
void* QBoxSet_MetaObjectDefault(void* ptr);
void QBoxSet_TimerEventDefault(void* ptr, void* event);
void* QCandlestickLegendMarker_Series(void* ptr);
void* QCandlestickLegendMarker_SeriesDefault(void* ptr);
long long QCandlestickLegendMarker_Type(void* ptr);
long long QCandlestickLegendMarker_TypeDefault(void* ptr);
void* QCandlestickModelMapper_NewQCandlestickModelMapper(void* parent);
int QCandlestickModelMapper_Close(void* ptr);
int QCandlestickModelMapper_FirstSetSection(void* ptr);
int QCandlestickModelMapper_High(void* ptr);
int QCandlestickModelMapper_LastSetSection(void* ptr);
int QCandlestickModelMapper_Low(void* ptr);
void* QCandlestickModelMapper_Model(void* ptr);
void QCandlestickModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QCandlestickModelMapper_DisconnectModelReplaced(void* ptr);
void QCandlestickModelMapper_ModelReplaced(void* ptr);
int QCandlestickModelMapper_Open(void* ptr);
long long QCandlestickModelMapper_Orientation(void* ptr);
void* QCandlestickModelMapper_Series(void* ptr);
void QCandlestickModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QCandlestickModelMapper_DisconnectSeriesReplaced(void* ptr);
void QCandlestickModelMapper_SeriesReplaced(void* ptr);
void QCandlestickModelMapper_SetClose(void* ptr, int close);
void QCandlestickModelMapper_SetFirstSetSection(void* ptr, int firstSetSection);
void QCandlestickModelMapper_SetHigh(void* ptr, int high);
void QCandlestickModelMapper_SetLastSetSection(void* ptr, int lastSetSection);
void QCandlestickModelMapper_SetLow(void* ptr, int low);
void QCandlestickModelMapper_SetModel(void* ptr, void* model);
void QCandlestickModelMapper_SetOpen(void* ptr, int open);
void QCandlestickModelMapper_SetSeries(void* ptr, void* series);
void QCandlestickModelMapper_SetTimestamp(void* ptr, int timestamp);
int QCandlestickModelMapper_Timestamp(void* ptr);
void* QCandlestickModelMapper___children_atList(void* ptr, int i);
void QCandlestickModelMapper___children_setList(void* ptr, void* i);
void* QCandlestickModelMapper___children_newList(void* ptr);
void* QCandlestickModelMapper___dynamicPropertyNames_atList(void* ptr, int i);
void QCandlestickModelMapper___dynamicPropertyNames_setList(void* ptr, void* i);
void* QCandlestickModelMapper___dynamicPropertyNames_newList(void* ptr);
void* QCandlestickModelMapper___findChildren_atList(void* ptr, int i);
void QCandlestickModelMapper___findChildren_setList(void* ptr, void* i);
void* QCandlestickModelMapper___findChildren_newList(void* ptr);
void* QCandlestickModelMapper___findChildren_atList3(void* ptr, int i);
void QCandlestickModelMapper___findChildren_setList3(void* ptr, void* i);
void* QCandlestickModelMapper___findChildren_newList3(void* ptr);
void QCandlestickModelMapper_ChildEventDefault(void* ptr, void* event);
void QCandlestickModelMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QCandlestickModelMapper_CustomEventDefault(void* ptr, void* event);
void QCandlestickModelMapper_DeleteLaterDefault(void* ptr);
void QCandlestickModelMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QCandlestickModelMapper_EventDefault(void* ptr, void* e);
char QCandlestickModelMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QCandlestickModelMapper_MetaObjectDefault(void* ptr);
void QCandlestickModelMapper_TimerEventDefault(void* ptr, void* event);
void* QCandlestickSeries_NewQCandlestickSeries(void* parent);
char QCandlestickSeries_Append(void* ptr, void* set);
char QCandlestickSeries_Append2(void* ptr, void* sets);
void QCandlestickSeries_ConnectBodyOutlineVisibilityChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectBodyOutlineVisibilityChanged(void* ptr);
void QCandlestickSeries_BodyOutlineVisibilityChanged(void* ptr);
char QCandlestickSeries_BodyOutlineVisible(void* ptr);
double QCandlestickSeries_BodyWidth(void* ptr);
void QCandlestickSeries_ConnectBodyWidthChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectBodyWidthChanged(void* ptr);
void QCandlestickSeries_BodyWidthChanged(void* ptr);
void* QCandlestickSeries_Brush(void* ptr);
void QCandlestickSeries_ConnectBrushChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectBrushChanged(void* ptr);
void QCandlestickSeries_BrushChanged(void* ptr);
void QCandlestickSeries_ConnectCandlestickSetsAdded(void* ptr, long long t);
void QCandlestickSeries_DisconnectCandlestickSetsAdded(void* ptr);
void QCandlestickSeries_CandlestickSetsAdded(void* ptr, void* sets);
void QCandlestickSeries_ConnectCandlestickSetsRemoved(void* ptr, long long t);
void QCandlestickSeries_DisconnectCandlestickSetsRemoved(void* ptr);
void QCandlestickSeries_CandlestickSetsRemoved(void* ptr, void* sets);
void QCandlestickSeries_ConnectCapsVisibilityChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectCapsVisibilityChanged(void* ptr);
void QCandlestickSeries_CapsVisibilityChanged(void* ptr);
char QCandlestickSeries_CapsVisible(void* ptr);
double QCandlestickSeries_CapsWidth(void* ptr);
void QCandlestickSeries_ConnectCapsWidthChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectCapsWidthChanged(void* ptr);
void QCandlestickSeries_CapsWidthChanged(void* ptr);
void QCandlestickSeries_Clear(void* ptr);
void QCandlestickSeries_ConnectClicked(void* ptr, long long t);
void QCandlestickSeries_DisconnectClicked(void* ptr);
void QCandlestickSeries_Clicked(void* ptr, void* set);
int QCandlestickSeries_Count(void* ptr);
void QCandlestickSeries_ConnectCountChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectCountChanged(void* ptr);
void QCandlestickSeries_CountChanged(void* ptr);
void* QCandlestickSeries_DecreasingColor(void* ptr);
void QCandlestickSeries_ConnectDecreasingColorChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectDecreasingColorChanged(void* ptr);
void QCandlestickSeries_DecreasingColorChanged(void* ptr);
void QCandlestickSeries_ConnectDoubleClicked(void* ptr, long long t);
void QCandlestickSeries_DisconnectDoubleClicked(void* ptr);
void QCandlestickSeries_DoubleClicked(void* ptr, void* set);
void QCandlestickSeries_ConnectHovered(void* ptr, long long t);
void QCandlestickSeries_DisconnectHovered(void* ptr);
void QCandlestickSeries_Hovered(void* ptr, char status, void* set);
void* QCandlestickSeries_IncreasingColor(void* ptr);
void QCandlestickSeries_ConnectIncreasingColorChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectIncreasingColorChanged(void* ptr);
void QCandlestickSeries_IncreasingColorChanged(void* ptr);
char QCandlestickSeries_Insert(void* ptr, int index, void* set);
double QCandlestickSeries_MaximumColumnWidth(void* ptr);
void QCandlestickSeries_ConnectMaximumColumnWidthChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectMaximumColumnWidthChanged(void* ptr);
void QCandlestickSeries_MaximumColumnWidthChanged(void* ptr);
double QCandlestickSeries_MinimumColumnWidth(void* ptr);
void QCandlestickSeries_ConnectMinimumColumnWidthChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectMinimumColumnWidthChanged(void* ptr);
void QCandlestickSeries_MinimumColumnWidthChanged(void* ptr);
void* QCandlestickSeries_Pen(void* ptr);
void QCandlestickSeries_ConnectPenChanged(void* ptr, long long t);
void QCandlestickSeries_DisconnectPenChanged(void* ptr);
void QCandlestickSeries_PenChanged(void* ptr);
void QCandlestickSeries_ConnectPressed(void* ptr, long long t);
void QCandlestickSeries_DisconnectPressed(void* ptr);
void QCandlestickSeries_Pressed(void* ptr, void* set);
void QCandlestickSeries_ConnectReleased(void* ptr, long long t);
void QCandlestickSeries_DisconnectReleased(void* ptr);
void QCandlestickSeries_Released(void* ptr, void* set);
char QCandlestickSeries_Remove(void* ptr, void* set);
char QCandlestickSeries_Remove2(void* ptr, void* sets);
void QCandlestickSeries_SetBodyOutlineVisible(void* ptr, char bodyOutlineVisible);
void QCandlestickSeries_SetBodyWidth(void* ptr, double bodyWidth);
void QCandlestickSeries_SetBrush(void* ptr, void* brush);
void QCandlestickSeries_SetCapsVisible(void* ptr, char capsVisible);
void QCandlestickSeries_SetCapsWidth(void* ptr, double capsWidth);
void QCandlestickSeries_SetDecreasingColor(void* ptr, void* decreasingColor);
void QCandlestickSeries_SetIncreasingColor(void* ptr, void* increasingColor);
void QCandlestickSeries_SetMaximumColumnWidth(void* ptr, double maximumColumnWidth);
void QCandlestickSeries_SetMinimumColumnWidth(void* ptr, double minimumColumnWidth);
void QCandlestickSeries_SetPen(void* ptr, void* pen);
struct QtCharts_PackedList QCandlestickSeries_Sets(void* ptr);
char QCandlestickSeries_Take(void* ptr, void* set);
long long QCandlestickSeries_Type(void* ptr);
long long QCandlestickSeries_TypeDefault(void* ptr);
void QCandlestickSeries_DestroyQCandlestickSeries(void* ptr);
void QCandlestickSeries_DestroyQCandlestickSeriesDefault(void* ptr);
void* QCandlestickSeries___append_sets_atList2(void* ptr, int i);
void QCandlestickSeries___append_sets_setList2(void* ptr, void* i);
void* QCandlestickSeries___append_sets_newList2(void* ptr);
void* QCandlestickSeries___candlestickSetsAdded_sets_atList(void* ptr, int i);
void QCandlestickSeries___candlestickSetsAdded_sets_setList(void* ptr, void* i);
void* QCandlestickSeries___candlestickSetsAdded_sets_newList(void* ptr);
void* QCandlestickSeries___candlestickSetsRemoved_sets_atList(void* ptr, int i);
void QCandlestickSeries___candlestickSetsRemoved_sets_setList(void* ptr, void* i);
void* QCandlestickSeries___candlestickSetsRemoved_sets_newList(void* ptr);
void* QCandlestickSeries___remove_sets_atList2(void* ptr, int i);
void QCandlestickSeries___remove_sets_setList2(void* ptr, void* i);
void* QCandlestickSeries___remove_sets_newList2(void* ptr);
void* QCandlestickSeries___sets_atList(void* ptr, int i);
void QCandlestickSeries___sets_setList(void* ptr, void* i);
void* QCandlestickSeries___sets_newList(void* ptr);
void* QCandlestickSet_NewQCandlestickSet(double timestamp, void* parent);
void* QCandlestickSet_NewQCandlestickSet2(double open, double high, double low, double close, double timestamp, void* parent);
void* QCandlestickSet_Brush(void* ptr);
void QCandlestickSet_ConnectBrushChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectBrushChanged(void* ptr);
void QCandlestickSet_BrushChanged(void* ptr);
void QCandlestickSet_ConnectClicked(void* ptr, long long t);
void QCandlestickSet_DisconnectClicked(void* ptr);
void QCandlestickSet_Clicked(void* ptr);
double QCandlestickSet_Close(void* ptr);
void QCandlestickSet_ConnectCloseChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectCloseChanged(void* ptr);
void QCandlestickSet_CloseChanged(void* ptr);
void QCandlestickSet_ConnectDoubleClicked(void* ptr, long long t);
void QCandlestickSet_DisconnectDoubleClicked(void* ptr);
void QCandlestickSet_DoubleClicked(void* ptr);
double QCandlestickSet_High(void* ptr);
void QCandlestickSet_ConnectHighChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectHighChanged(void* ptr);
void QCandlestickSet_HighChanged(void* ptr);
void QCandlestickSet_ConnectHovered(void* ptr, long long t);
void QCandlestickSet_DisconnectHovered(void* ptr);
void QCandlestickSet_Hovered(void* ptr, char status);
double QCandlestickSet_Low(void* ptr);
void QCandlestickSet_ConnectLowChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectLowChanged(void* ptr);
void QCandlestickSet_LowChanged(void* ptr);
double QCandlestickSet_Open(void* ptr);
void QCandlestickSet_ConnectOpenChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectOpenChanged(void* ptr);
void QCandlestickSet_OpenChanged(void* ptr);
void* QCandlestickSet_Pen(void* ptr);
void QCandlestickSet_ConnectPenChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectPenChanged(void* ptr);
void QCandlestickSet_PenChanged(void* ptr);
void QCandlestickSet_ConnectPressed(void* ptr, long long t);
void QCandlestickSet_DisconnectPressed(void* ptr);
void QCandlestickSet_Pressed(void* ptr);
void QCandlestickSet_ConnectReleased(void* ptr, long long t);
void QCandlestickSet_DisconnectReleased(void* ptr);
void QCandlestickSet_Released(void* ptr);
void QCandlestickSet_SetBrush(void* ptr, void* brush);
void QCandlestickSet_SetClose(void* ptr, double close);
void QCandlestickSet_SetHigh(void* ptr, double high);
void QCandlestickSet_SetLow(void* ptr, double low);
void QCandlestickSet_SetOpen(void* ptr, double open);
void QCandlestickSet_SetPen(void* ptr, void* pen);
void QCandlestickSet_SetTimestamp(void* ptr, double timestamp);
double QCandlestickSet_Timestamp(void* ptr);
void QCandlestickSet_ConnectTimestampChanged(void* ptr, long long t);
void QCandlestickSet_DisconnectTimestampChanged(void* ptr);
void QCandlestickSet_TimestampChanged(void* ptr);
void QCandlestickSet_DestroyQCandlestickSet(void* ptr);
void QCandlestickSet_DestroyQCandlestickSetDefault(void* ptr);
void* QCandlestickSet___children_atList(void* ptr, int i);
void QCandlestickSet___children_setList(void* ptr, void* i);
void* QCandlestickSet___children_newList(void* ptr);
void* QCandlestickSet___dynamicPropertyNames_atList(void* ptr, int i);
void QCandlestickSet___dynamicPropertyNames_setList(void* ptr, void* i);
void* QCandlestickSet___dynamicPropertyNames_newList(void* ptr);
void* QCandlestickSet___findChildren_atList(void* ptr, int i);
void QCandlestickSet___findChildren_setList(void* ptr, void* i);
void* QCandlestickSet___findChildren_newList(void* ptr);
void* QCandlestickSet___findChildren_atList3(void* ptr, int i);
void QCandlestickSet___findChildren_setList3(void* ptr, void* i);
void* QCandlestickSet___findChildren_newList3(void* ptr);
void QCandlestickSet_ChildEventDefault(void* ptr, void* event);
void QCandlestickSet_ConnectNotifyDefault(void* ptr, void* sign);
void QCandlestickSet_CustomEventDefault(void* ptr, void* event);
void QCandlestickSet_DeleteLaterDefault(void* ptr);
void QCandlestickSet_DisconnectNotifyDefault(void* ptr, void* sign);
char QCandlestickSet_EventDefault(void* ptr, void* e);
char QCandlestickSet_EventFilterDefault(void* ptr, void* watched, void* event);
void* QCandlestickSet_MetaObjectDefault(void* ptr);
void QCandlestickSet_TimerEventDefault(void* ptr, void* event);
void* QCategoryAxis_NewQCategoryAxis(void* parent);
void QCategoryAxis_Append(void* ptr, struct QtCharts_PackedString categoryLabel, double categoryEndValue);
void QCategoryAxis_ConnectCategoriesChanged(void* ptr, long long t);
void QCategoryAxis_DisconnectCategoriesChanged(void* ptr);
void QCategoryAxis_CategoriesChanged(void* ptr);
struct QtCharts_PackedString QCategoryAxis_CategoriesLabels(void* ptr);
int QCategoryAxis_Count(void* ptr);
double QCategoryAxis_EndValue(void* ptr, struct QtCharts_PackedString categoryLabel);
long long QCategoryAxis_LabelsPosition(void* ptr);
void QCategoryAxis_ConnectLabelsPositionChanged(void* ptr, long long t);
void QCategoryAxis_DisconnectLabelsPositionChanged(void* ptr);
void QCategoryAxis_LabelsPositionChanged(void* ptr, long long position);
void QCategoryAxis_Remove(void* ptr, struct QtCharts_PackedString categoryLabel);
void QCategoryAxis_ReplaceLabel(void* ptr, struct QtCharts_PackedString oldLabel, struct QtCharts_PackedString newLabel);
void QCategoryAxis_SetLabelsPosition(void* ptr, long long position);
void QCategoryAxis_SetStartValue(void* ptr, double min);
double QCategoryAxis_StartValue(void* ptr, struct QtCharts_PackedString categoryLabel);
void QCategoryAxis_DestroyQCategoryAxis(void* ptr);
void QCategoryAxis_DestroyQCategoryAxisDefault(void* ptr);
void* QChart_NewQChart(void* parent, long long wFlags);
void QChart_AddAxis(void* ptr, void* axis, long long alignment);
void QChart_AddSeries(void* ptr, void* series);
int QChart_AnimationDuration(void* ptr);
void* QChart_AnimationEasingCurve(void* ptr);
long long QChart_AnimationOptions(void* ptr);
struct QtCharts_PackedList QChart_Axes(void* ptr, long long orientation, void* series);
void* QChart_BackgroundBrush(void* ptr);
void* QChart_BackgroundPen(void* ptr);
double QChart_BackgroundRoundness(void* ptr);
long long QChart_ChartType(void* ptr);
void QChart_CreateDefaultAxes(void* ptr);
char QChart_IsBackgroundVisible(void* ptr);
char QChart_IsDropShadowEnabled(void* ptr);
char QChart_IsPlotAreaBackgroundVisible(void* ptr);
char QChart_IsZoomed(void* ptr);
void* QChart_Legend(void* ptr);
void* QChart_Locale(void* ptr);
char QChart_LocalizeNumbers(void* ptr);
void* QChart_MapToPosition(void* ptr, void* value, void* series);
void* QChart_MapToValue(void* ptr, void* position, void* series);
void* QChart_Margins(void* ptr);
void* QChart_PlotArea(void* ptr);
void* QChart_PlotAreaBackgroundBrush(void* ptr);
void* QChart_PlotAreaBackgroundPen(void* ptr);
void QChart_ConnectPlotAreaChanged(void* ptr, long long t);
void QChart_DisconnectPlotAreaChanged(void* ptr);
void QChart_PlotAreaChanged(void* ptr, void* plotArea);
void QChart_RemoveAllSeries(void* ptr);
void QChart_RemoveAxis(void* ptr, void* axis);
void QChart_RemoveSeries(void* ptr, void* series);
void QChart_Scroll(void* ptr, double dx, double dy);
struct QtCharts_PackedList QChart_Series(void* ptr);
void QChart_SetAnimationDuration(void* ptr, int msecs);
void QChart_SetAnimationEasingCurve(void* ptr, void* curve);
void QChart_SetAnimationOptions(void* ptr, long long options);
void QChart_SetBackgroundBrush(void* ptr, void* brush);
void QChart_SetBackgroundPen(void* ptr, void* pen);
void QChart_SetBackgroundRoundness(void* ptr, double diameter);
void QChart_SetBackgroundVisible(void* ptr, char visible);
void QChart_SetDropShadowEnabled(void* ptr, char enabled);
void QChart_SetLocale(void* ptr, void* locale);
void QChart_SetLocalizeNumbers(void* ptr, char localize);
void QChart_SetMargins(void* ptr, void* margins);
void QChart_SetPlotArea(void* ptr, void* rect);
void QChart_SetPlotAreaBackgroundBrush(void* ptr, void* brush);
void QChart_SetPlotAreaBackgroundPen(void* ptr, void* pen);
void QChart_SetPlotAreaBackgroundVisible(void* ptr, char visible);
void QChart_SetTheme(void* ptr, long long theme);
void QChart_SetTitle(void* ptr, struct QtCharts_PackedString title);
void QChart_SetTitleBrush(void* ptr, void* brush);
void QChart_SetTitleFont(void* ptr, void* font);
long long QChart_Theme(void* ptr);
struct QtCharts_PackedString QChart_Title(void* ptr);
void* QChart_TitleBrush(void* ptr);
void* QChart_TitleFont(void* ptr);
void QChart_Zoom(void* ptr, double factor);
void QChart_ZoomIn(void* ptr);
void QChart_ZoomIn2(void* ptr, void* rect);
void QChart_ZoomOut(void* ptr);
void QChart_ZoomReset(void* ptr);
void QChart_DestroyQChart(void* ptr);
void QChart_DestroyQChartDefault(void* ptr);
void* QChart___axes_atList(void* ptr, int i);
void QChart___axes_setList(void* ptr, void* i);
void* QChart___axes_newList(void* ptr);
void* QChart___series_atList(void* ptr, int i);
void QChart___series_setList(void* ptr, void* i);
void* QChart___series_newList(void* ptr);
void* QChart___actions_atList(void* ptr, int i);
void QChart___actions_setList(void* ptr, void* i);
void* QChart___actions_newList(void* ptr);
void* QChart___addActions_actions_atList(void* ptr, int i);
void QChart___addActions_actions_setList(void* ptr, void* i);
void* QChart___addActions_actions_newList(void* ptr);
void* QChart___insertActions_actions_atList(void* ptr, int i);
void QChart___insertActions_actions_setList(void* ptr, void* i);
void* QChart___insertActions_actions_newList(void* ptr);
void* QChart___children_atList(void* ptr, int i);
void QChart___children_setList(void* ptr, void* i);
void* QChart___children_newList(void* ptr);
void* QChart___dynamicPropertyNames_atList(void* ptr, int i);
void QChart___dynamicPropertyNames_setList(void* ptr, void* i);
void* QChart___dynamicPropertyNames_newList(void* ptr);
void* QChart___findChildren_atList(void* ptr, int i);
void QChart___findChildren_setList(void* ptr, void* i);
void* QChart___findChildren_newList(void* ptr);
void* QChart___findChildren_atList3(void* ptr, int i);
void QChart___findChildren_setList3(void* ptr, void* i);
void* QChart___findChildren_newList3(void* ptr);
void* QChart___childItems_atList(void* ptr, int i);
void QChart___childItems_setList(void* ptr, void* i);
void* QChart___childItems_newList(void* ptr);
void* QChart___collidingItems_atList(void* ptr, int i);
void QChart___collidingItems_setList(void* ptr, void* i);
void* QChart___collidingItems_newList(void* ptr);
void* QChart___setTransformations_transformations_atList(void* ptr, int i);
void QChart___setTransformations_transformations_setList(void* ptr, void* i);
void* QChart___setTransformations_transformations_newList(void* ptr);
void* QChart___transformations_atList(void* ptr, int i);
void QChart___transformations_setList(void* ptr, void* i);
void* QChart___transformations_newList(void* ptr);
void* QChart_BoundingRectDefault(void* ptr);
void QChart_ChangeEventDefault(void* ptr, void* event);
char QChart_CloseDefault(void* ptr);
void QChart_CloseEventDefault(void* ptr, void* event);
char QChart_EventDefault(void* ptr, void* event);
void QChart_FocusInEventDefault(void* ptr, void* event);
char QChart_FocusNextPrevChildDefault(void* ptr, char next);
void QChart_FocusOutEventDefault(void* ptr, void* event);
void QChart_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QChart_GrabKeyboardEventDefault(void* ptr, void* event);
void QChart_GrabMouseEventDefault(void* ptr, void* event);
void QChart_HideEventDefault(void* ptr, void* event);
void QChart_HoverLeaveEventDefault(void* ptr, void* event);
void QChart_HoverMoveEventDefault(void* ptr, void* event);
void QChart_InitStyleOptionDefault(void* ptr, void* option);
void* QChart_ItemChangeDefault(void* ptr, long long change, void* value);
void QChart_MoveEventDefault(void* ptr, void* event);
void QChart_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QChart_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QChart_PolishEventDefault(void* ptr);
void QChart_ResizeEventDefault(void* ptr, void* event);
char QChart_SceneEventDefault(void* ptr, void* event);
void QChart_SetGeometryDefault(void* ptr, void* rect);
void* QChart_ShapeDefault(void* ptr);
void QChart_ShowEventDefault(void* ptr, void* event);
void* QChart_SizeHintDefault(void* ptr, long long which, void* constraint);
int QChart_TypeDefault(void* ptr);
void QChart_UngrabKeyboardEventDefault(void* ptr, void* event);
void QChart_UngrabMouseEventDefault(void* ptr, void* event);
void QChart_UpdateGeometryDefault(void* ptr);
char QChart_WindowFrameEventDefault(void* ptr, void* event);
long long QChart_WindowFrameSectionAtDefault(void* ptr, void* pos);
void QChart_UpdateMicroFocusDefault(void* ptr);
void QChart_ChildEventDefault(void* ptr, void* event);
void QChart_ConnectNotifyDefault(void* ptr, void* sign);
void QChart_CustomEventDefault(void* ptr, void* event);
void QChart_DeleteLaterDefault(void* ptr);
void QChart_DisconnectNotifyDefault(void* ptr, void* sign);
char QChart_EventFilterDefault(void* ptr, void* watched, void* event);
void* QChart_MetaObjectDefault(void* ptr);
void QChart_TimerEventDefault(void* ptr, void* event);
void QChart_AdvanceDefault(void* ptr, int phase);
char QChart_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QChart_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QChart_ContainsDefault(void* ptr, void* point);
void QChart_ContextMenuEventDefault(void* ptr, void* event);
void QChart_DragEnterEventDefault(void* ptr, void* event);
void QChart_DragLeaveEventDefault(void* ptr, void* event);
void QChart_DragMoveEventDefault(void* ptr, void* event);
void QChart_DropEventDefault(void* ptr, void* event);
void QChart_HoverEnterEventDefault(void* ptr, void* event);
void QChart_InputMethodEventDefault(void* ptr, void* event);
void* QChart_InputMethodQueryDefault(void* ptr, long long query);
char QChart_IsObscuredByDefault(void* ptr, void* item);
void QChart_KeyPressEventDefault(void* ptr, void* event);
void QChart_KeyReleaseEventDefault(void* ptr, void* event);
void QChart_MouseDoubleClickEventDefault(void* ptr, void* event);
void QChart_MouseMoveEventDefault(void* ptr, void* event);
void QChart_MousePressEventDefault(void* ptr, void* event);
void QChart_MouseReleaseEventDefault(void* ptr, void* event);
void* QChart_OpaqueAreaDefault(void* ptr);
char QChart_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QChart_WheelEventDefault(void* ptr, void* event);
void* QChartView_NewQChartView(void* parent);
void* QChartView_NewQChartView2(void* chart, void* parent);
void* QChartView_Chart(void* ptr);
void QChartView_MouseMoveEventDefault(void* ptr, void* event);
void QChartView_MousePressEventDefault(void* ptr, void* event);
void QChartView_MouseReleaseEventDefault(void* ptr, void* event);
void QChartView_ResizeEventDefault(void* ptr, void* event);
long long QChartView_RubberBand(void* ptr);
void QChartView_SetChart(void* ptr, void* chart);
void QChartView_SetRubberBand(void* ptr, long long rubberBand);
void QChartView_DestroyQChartView(void* ptr);
void QChartView_DestroyQChartViewDefault(void* ptr);
void* QChartView___items_atList(void* ptr, int i);
void QChartView___items_setList(void* ptr, void* i);
void* QChartView___items_newList(void* ptr);
void* QChartView___items_atList2(void* ptr, int i);
void QChartView___items_setList2(void* ptr, void* i);
void* QChartView___items_newList2(void* ptr);
void* QChartView___items_atList3(void* ptr, int i);
void QChartView___items_setList3(void* ptr, void* i);
void* QChartView___items_newList3(void* ptr);
void* QChartView___items_atList4(void* ptr, int i);
void QChartView___items_setList4(void* ptr, void* i);
void* QChartView___items_newList4(void* ptr);
void* QChartView___items_atList5(void* ptr, int i);
void QChartView___items_setList5(void* ptr, void* i);
void* QChartView___items_newList5(void* ptr);
void* QChartView___items_atList6(void* ptr, int i);
void QChartView___items_setList6(void* ptr, void* i);
void* QChartView___items_newList6(void* ptr);
void* QChartView___items_atList7(void* ptr, int i);
void QChartView___items_setList7(void* ptr, void* i);
void* QChartView___items_newList7(void* ptr);
void* QChartView___updateScene_rects_atList(void* ptr, int i);
void QChartView___updateScene_rects_setList(void* ptr, void* i);
void* QChartView___updateScene_rects_newList(void* ptr);
void* QChartView___scrollBarWidgets_atList(void* ptr, int i);
void QChartView___scrollBarWidgets_setList(void* ptr, void* i);
void* QChartView___scrollBarWidgets_newList(void* ptr);
void* QChartView___actions_atList(void* ptr, int i);
void QChartView___actions_setList(void* ptr, void* i);
void* QChartView___actions_newList(void* ptr);
void* QChartView___addActions_actions_atList(void* ptr, int i);
void QChartView___addActions_actions_setList(void* ptr, void* i);
void* QChartView___addActions_actions_newList(void* ptr);
void* QChartView___insertActions_actions_atList(void* ptr, int i);
void QChartView___insertActions_actions_setList(void* ptr, void* i);
void* QChartView___insertActions_actions_newList(void* ptr);
void* QChartView___children_atList(void* ptr, int i);
void QChartView___children_setList(void* ptr, void* i);
void* QChartView___children_newList(void* ptr);
void* QChartView___dynamicPropertyNames_atList(void* ptr, int i);
void QChartView___dynamicPropertyNames_setList(void* ptr, void* i);
void* QChartView___dynamicPropertyNames_newList(void* ptr);
void* QChartView___findChildren_atList(void* ptr, int i);
void QChartView___findChildren_setList(void* ptr, void* i);
void* QChartView___findChildren_newList(void* ptr);
void* QChartView___findChildren_atList3(void* ptr, int i);
void QChartView___findChildren_setList3(void* ptr, void* i);
void* QChartView___findChildren_newList3(void* ptr);
void QChartView_ContextMenuEventDefault(void* ptr, void* event);
void QChartView_DragEnterEventDefault(void* ptr, void* event);
void QChartView_DragLeaveEventDefault(void* ptr, void* event);
void QChartView_DragMoveEventDefault(void* ptr, void* event);
void QChartView_DrawBackgroundDefault(void* ptr, void* painter, void* rect);
void QChartView_DrawForegroundDefault(void* ptr, void* painter, void* rect);
void QChartView_DropEventDefault(void* ptr, void* event);
char QChartView_EventDefault(void* ptr, void* event);
void QChartView_FocusInEventDefault(void* ptr, void* event);
char QChartView_FocusNextPrevChildDefault(void* ptr, char next);
void QChartView_FocusOutEventDefault(void* ptr, void* event);
void QChartView_InputMethodEventDefault(void* ptr, void* event);
void* QChartView_InputMethodQueryDefault(void* ptr, long long query);
void QChartView_InvalidateSceneDefault(void* ptr, void* rect, long long layers);
void QChartView_KeyPressEventDefault(void* ptr, void* event);
void QChartView_KeyReleaseEventDefault(void* ptr, void* event);
void QChartView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QChartView_PaintEventDefault(void* ptr, void* event);
void QChartView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QChartView_SetupViewportDefault(void* ptr, void* widget);
void QChartView_ShowEventDefault(void* ptr, void* event);
void* QChartView_SizeHintDefault(void* ptr);
void QChartView_UpdateSceneDefault(void* ptr, void* rects);
void QChartView_UpdateSceneRectDefault(void* ptr, void* rect);
char QChartView_ViewportEventDefault(void* ptr, void* event);
void QChartView_WheelEventDefault(void* ptr, void* event);
void* QChartView_MinimumSizeHintDefault(void* ptr);
void* QChartView_ViewportSizeHintDefault(void* ptr);
void QChartView_ChangeEventDefault(void* ptr, void* ev);
void QChartView_ActionEventDefault(void* ptr, void* event);
char QChartView_CloseDefault(void* ptr);
void QChartView_CloseEventDefault(void* ptr, void* event);
void QChartView_EnterEventDefault(void* ptr, void* event);
char QChartView_HasHeightForWidthDefault(void* ptr);
int QChartView_HeightForWidthDefault(void* ptr, int w);
void QChartView_HideDefault(void* ptr);
void QChartView_HideEventDefault(void* ptr, void* event);
void QChartView_InitPainterDefault(void* ptr, void* painter);
void QChartView_LeaveEventDefault(void* ptr, void* event);
void QChartView_LowerDefault(void* ptr);
int QChartView_MetricDefault(void* ptr, long long m);
void QChartView_MoveEventDefault(void* ptr, void* event);
char QChartView_NativeEventDefault(void* ptr, void* eventType, void* message, long* result);
void* QChartView_PaintEngineDefault(void* ptr);
void QChartView_RaiseDefault(void* ptr);
void QChartView_RepaintDefault(void* ptr);
void QChartView_SetDisabledDefault(void* ptr, char disable);
void QChartView_SetEnabledDefault(void* ptr, char vbo);
void QChartView_SetFocus2Default(void* ptr);
void QChartView_SetHiddenDefault(void* ptr, char hidden);
void QChartView_SetStyleSheetDefault(void* ptr, struct QtCharts_PackedString styleSheet);
void QChartView_SetVisibleDefault(void* ptr, char visible);
void QChartView_SetWindowModifiedDefault(void* ptr, char vbo);
void QChartView_SetWindowTitleDefault(void* ptr, struct QtCharts_PackedString vqs);
void QChartView_ShowDefault(void* ptr);
void QChartView_ShowFullScreenDefault(void* ptr);
void QChartView_ShowMaximizedDefault(void* ptr);
void QChartView_ShowMinimizedDefault(void* ptr);
void QChartView_ShowNormalDefault(void* ptr);
void QChartView_TabletEventDefault(void* ptr, void* event);
void QChartView_UpdateDefault(void* ptr);
void QChartView_UpdateMicroFocusDefault(void* ptr);
void QChartView_ChildEventDefault(void* ptr, void* event);
void QChartView_ConnectNotifyDefault(void* ptr, void* sign);
void QChartView_CustomEventDefault(void* ptr, void* event);
void QChartView_DeleteLaterDefault(void* ptr);
void QChartView_DisconnectNotifyDefault(void* ptr, void* sign);
char QChartView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QChartView_MetaObjectDefault(void* ptr);
void QChartView_TimerEventDefault(void* ptr, void* event);
void* QDateTimeAxis_NewQDateTimeAxis(void* parent);
struct QtCharts_PackedString QDateTimeAxis_Format(void* ptr);
void QDateTimeAxis_ConnectFormatChanged(void* ptr, long long t);
void QDateTimeAxis_DisconnectFormatChanged(void* ptr);
void QDateTimeAxis_FormatChanged(void* ptr, struct QtCharts_PackedString format);
void* QDateTimeAxis_Max(void* ptr);
void QDateTimeAxis_ConnectMaxChanged(void* ptr, long long t);
void QDateTimeAxis_DisconnectMaxChanged(void* ptr);
void QDateTimeAxis_MaxChanged(void* ptr, void* max);
void* QDateTimeAxis_Min(void* ptr);
void QDateTimeAxis_ConnectMinChanged(void* ptr, long long t);
void QDateTimeAxis_DisconnectMinChanged(void* ptr);
void QDateTimeAxis_MinChanged(void* ptr, void* min);
void QDateTimeAxis_ConnectRangeChanged(void* ptr, long long t);
void QDateTimeAxis_DisconnectRangeChanged(void* ptr);
void QDateTimeAxis_RangeChanged(void* ptr, void* min, void* max);
void QDateTimeAxis_SetFormat(void* ptr, struct QtCharts_PackedString format);
void QDateTimeAxis_SetMax(void* ptr, void* max);
void QDateTimeAxis_SetMin(void* ptr, void* min);
void QDateTimeAxis_SetRange(void* ptr, void* min, void* max);
void QDateTimeAxis_SetTickCount(void* ptr, int count);
int QDateTimeAxis_TickCount(void* ptr);
void QDateTimeAxis_ConnectTickCountChanged(void* ptr, long long t);
void QDateTimeAxis_DisconnectTickCountChanged(void* ptr);
void QDateTimeAxis_TickCountChanged(void* ptr, int tickCount);
long long QDateTimeAxis_Type(void* ptr);
long long QDateTimeAxis_TypeDefault(void* ptr);
void QDateTimeAxis_DestroyQDateTimeAxis(void* ptr);
void QDateTimeAxis_DestroyQDateTimeAxisDefault(void* ptr);
void* QHBarModelMapper_NewQHBarModelMapper(void* parent);
int QHBarModelMapper_ColumnCount(void* ptr);
void QHBarModelMapper_ConnectColumnCountChanged(void* ptr, long long t);
void QHBarModelMapper_DisconnectColumnCountChanged(void* ptr);
void QHBarModelMapper_ColumnCountChanged(void* ptr);
int QHBarModelMapper_FirstBarSetRow(void* ptr);
void QHBarModelMapper_ConnectFirstBarSetRowChanged(void* ptr, long long t);
void QHBarModelMapper_DisconnectFirstBarSetRowChanged(void* ptr);
void QHBarModelMapper_FirstBarSetRowChanged(void* ptr);
int QHBarModelMapper_FirstColumn(void* ptr);
void QHBarModelMapper_ConnectFirstColumnChanged(void* ptr, long long t);
void QHBarModelMapper_DisconnectFirstColumnChanged(void* ptr);
void QHBarModelMapper_FirstColumnChanged(void* ptr);
int QHBarModelMapper_LastBarSetRow(void* ptr);
void QHBarModelMapper_ConnectLastBarSetRowChanged(void* ptr, long long t);
void QHBarModelMapper_DisconnectLastBarSetRowChanged(void* ptr);
void QHBarModelMapper_LastBarSetRowChanged(void* ptr);
void* QHBarModelMapper_Model(void* ptr);
void QHBarModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QHBarModelMapper_DisconnectModelReplaced(void* ptr);
void QHBarModelMapper_ModelReplaced(void* ptr);
void* QHBarModelMapper_Series(void* ptr);
void QHBarModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QHBarModelMapper_DisconnectSeriesReplaced(void* ptr);
void QHBarModelMapper_SeriesReplaced(void* ptr);
void QHBarModelMapper_SetColumnCount(void* ptr, int columnCount);
void QHBarModelMapper_SetFirstBarSetRow(void* ptr, int firstBarSetRow);
void QHBarModelMapper_SetFirstColumn(void* ptr, int firstColumn);
void QHBarModelMapper_SetLastBarSetRow(void* ptr, int lastBarSetRow);
void QHBarModelMapper_SetModel(void* ptr, void* model);
void QHBarModelMapper_SetSeries(void* ptr, void* series);
void* QHBarModelMapper___children_atList(void* ptr, int i);
void QHBarModelMapper___children_setList(void* ptr, void* i);
void* QHBarModelMapper___children_newList(void* ptr);
void* QHBarModelMapper___dynamicPropertyNames_atList(void* ptr, int i);
void QHBarModelMapper___dynamicPropertyNames_setList(void* ptr, void* i);
void* QHBarModelMapper___dynamicPropertyNames_newList(void* ptr);
void* QHBarModelMapper___findChildren_atList(void* ptr, int i);
void QHBarModelMapper___findChildren_setList(void* ptr, void* i);
void* QHBarModelMapper___findChildren_newList(void* ptr);
void* QHBarModelMapper___findChildren_atList3(void* ptr, int i);
void QHBarModelMapper___findChildren_setList3(void* ptr, void* i);
void* QHBarModelMapper___findChildren_newList3(void* ptr);
void QHBarModelMapper_ChildEventDefault(void* ptr, void* event);
void QHBarModelMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QHBarModelMapper_CustomEventDefault(void* ptr, void* event);
void QHBarModelMapper_DeleteLaterDefault(void* ptr);
void QHBarModelMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QHBarModelMapper_EventDefault(void* ptr, void* e);
char QHBarModelMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QHBarModelMapper_MetaObjectDefault(void* ptr);
void QHBarModelMapper_TimerEventDefault(void* ptr, void* event);
void* QHBoxPlotModelMapper_NewQHBoxPlotModelMapper(void* parent);
int QHBoxPlotModelMapper_ColumnCount(void* ptr);
void QHBoxPlotModelMapper_ConnectColumnCountChanged(void* ptr, long long t);
void QHBoxPlotModelMapper_DisconnectColumnCountChanged(void* ptr);
void QHBoxPlotModelMapper_ColumnCountChanged(void* ptr);
int QHBoxPlotModelMapper_FirstBoxSetRow(void* ptr);
void QHBoxPlotModelMapper_ConnectFirstBoxSetRowChanged(void* ptr, long long t);
void QHBoxPlotModelMapper_DisconnectFirstBoxSetRowChanged(void* ptr);
void QHBoxPlotModelMapper_FirstBoxSetRowChanged(void* ptr);
int QHBoxPlotModelMapper_FirstColumn(void* ptr);
void QHBoxPlotModelMapper_ConnectFirstColumnChanged(void* ptr, long long t);
void QHBoxPlotModelMapper_DisconnectFirstColumnChanged(void* ptr);
void QHBoxPlotModelMapper_FirstColumnChanged(void* ptr);
int QHBoxPlotModelMapper_LastBoxSetRow(void* ptr);
void QHBoxPlotModelMapper_ConnectLastBoxSetRowChanged(void* ptr, long long t);
void QHBoxPlotModelMapper_DisconnectLastBoxSetRowChanged(void* ptr);
void QHBoxPlotModelMapper_LastBoxSetRowChanged(void* ptr);
void* QHBoxPlotModelMapper_Model(void* ptr);
void QHBoxPlotModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QHBoxPlotModelMapper_DisconnectModelReplaced(void* ptr);
void QHBoxPlotModelMapper_ModelReplaced(void* ptr);
void* QHBoxPlotModelMapper_Series(void* ptr);
void QHBoxPlotModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QHBoxPlotModelMapper_DisconnectSeriesReplaced(void* ptr);
void QHBoxPlotModelMapper_SeriesReplaced(void* ptr);
void QHBoxPlotModelMapper_SetColumnCount(void* ptr, int rowCount);
void QHBoxPlotModelMapper_SetFirstBoxSetRow(void* ptr, int firstBoxSetRow);
void QHBoxPlotModelMapper_SetFirstColumn(void* ptr, int firstColumn);
void QHBoxPlotModelMapper_SetLastBoxSetRow(void* ptr, int lastBoxSetRow);
void QHBoxPlotModelMapper_SetModel(void* ptr, void* model);
void QHBoxPlotModelMapper_SetSeries(void* ptr, void* series);
void* QHBoxPlotModelMapper___children_atList(void* ptr, int i);
void QHBoxPlotModelMapper___children_setList(void* ptr, void* i);
void* QHBoxPlotModelMapper___children_newList(void* ptr);
void* QHBoxPlotModelMapper___dynamicPropertyNames_atList(void* ptr, int i);
void QHBoxPlotModelMapper___dynamicPropertyNames_setList(void* ptr, void* i);
void* QHBoxPlotModelMapper___dynamicPropertyNames_newList(void* ptr);
void* QHBoxPlotModelMapper___findChildren_atList(void* ptr, int i);
void QHBoxPlotModelMapper___findChildren_setList(void* ptr, void* i);
void* QHBoxPlotModelMapper___findChildren_newList(void* ptr);
void* QHBoxPlotModelMapper___findChildren_atList3(void* ptr, int i);
void QHBoxPlotModelMapper___findChildren_setList3(void* ptr, void* i);
void* QHBoxPlotModelMapper___findChildren_newList3(void* ptr);
void QHBoxPlotModelMapper_ChildEventDefault(void* ptr, void* event);
void QHBoxPlotModelMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QHBoxPlotModelMapper_CustomEventDefault(void* ptr, void* event);
void QHBoxPlotModelMapper_DeleteLaterDefault(void* ptr);
void QHBoxPlotModelMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QHBoxPlotModelMapper_EventDefault(void* ptr, void* e);
char QHBoxPlotModelMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QHBoxPlotModelMapper_MetaObjectDefault(void* ptr);
void QHBoxPlotModelMapper_TimerEventDefault(void* ptr, void* event);
void* QHCandlestickModelMapper_NewQHCandlestickModelMapper(void* parent);
int QHCandlestickModelMapper_CloseColumn(void* ptr);
void QHCandlestickModelMapper_ConnectCloseColumnChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectCloseColumnChanged(void* ptr);
void QHCandlestickModelMapper_CloseColumnChanged(void* ptr);
int QHCandlestickModelMapper_FirstSetRow(void* ptr);
void QHCandlestickModelMapper_ConnectFirstSetRowChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectFirstSetRowChanged(void* ptr);
void QHCandlestickModelMapper_FirstSetRowChanged(void* ptr);
int QHCandlestickModelMapper_HighColumn(void* ptr);
void QHCandlestickModelMapper_ConnectHighColumnChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectHighColumnChanged(void* ptr);
void QHCandlestickModelMapper_HighColumnChanged(void* ptr);
int QHCandlestickModelMapper_LastSetRow(void* ptr);
void QHCandlestickModelMapper_ConnectLastSetRowChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectLastSetRowChanged(void* ptr);
void QHCandlestickModelMapper_LastSetRowChanged(void* ptr);
int QHCandlestickModelMapper_LowColumn(void* ptr);
void QHCandlestickModelMapper_ConnectLowColumnChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectLowColumnChanged(void* ptr);
void QHCandlestickModelMapper_LowColumnChanged(void* ptr);
int QHCandlestickModelMapper_OpenColumn(void* ptr);
void QHCandlestickModelMapper_ConnectOpenColumnChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectOpenColumnChanged(void* ptr);
void QHCandlestickModelMapper_OpenColumnChanged(void* ptr);
long long QHCandlestickModelMapper_Orientation(void* ptr);
long long QHCandlestickModelMapper_OrientationDefault(void* ptr);
void QHCandlestickModelMapper_SetCloseColumn(void* ptr, int closeColumn);
void QHCandlestickModelMapper_SetFirstSetRow(void* ptr, int firstSetRow);
void QHCandlestickModelMapper_SetHighColumn(void* ptr, int highColumn);
void QHCandlestickModelMapper_SetLastSetRow(void* ptr, int lastSetRow);
void QHCandlestickModelMapper_SetLowColumn(void* ptr, int lowColumn);
void QHCandlestickModelMapper_SetOpenColumn(void* ptr, int openColumn);
void QHCandlestickModelMapper_SetTimestampColumn(void* ptr, int timestampColumn);
int QHCandlestickModelMapper_TimestampColumn(void* ptr);
void QHCandlestickModelMapper_ConnectTimestampColumnChanged(void* ptr, long long t);
void QHCandlestickModelMapper_DisconnectTimestampColumnChanged(void* ptr);
void QHCandlestickModelMapper_TimestampColumnChanged(void* ptr);
void* QHPieModelMapper_NewQHPieModelMapper(void* parent);
int QHPieModelMapper_ColumnCount(void* ptr);
void QHPieModelMapper_ConnectColumnCountChanged(void* ptr, long long t);
void QHPieModelMapper_DisconnectColumnCountChanged(void* ptr);
void QHPieModelMapper_ColumnCountChanged(void* ptr);
int QHPieModelMapper_FirstColumn(void* ptr);
void QHPieModelMapper_ConnectFirstColumnChanged(void* ptr, long long t);
void QHPieModelMapper_DisconnectFirstColumnChanged(void* ptr);
void QHPieModelMapper_FirstColumnChanged(void* ptr);
int QHPieModelMapper_LabelsRow(void* ptr);
void QHPieModelMapper_ConnectLabelsRowChanged(void* ptr, long long t);
void QHPieModelMapper_DisconnectLabelsRowChanged(void* ptr);
void QHPieModelMapper_LabelsRowChanged(void* ptr);
void* QHPieModelMapper_Model(void* ptr);
void QHPieModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QHPieModelMapper_DisconnectModelReplaced(void* ptr);
void QHPieModelMapper_ModelReplaced(void* ptr);
void* QHPieModelMapper_Series(void* ptr);
void QHPieModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QHPieModelMapper_DisconnectSeriesReplaced(void* ptr);
void QHPieModelMapper_SeriesReplaced(void* ptr);
void QHPieModelMapper_SetColumnCount(void* ptr, int columnCount);
void QHPieModelMapper_SetFirstColumn(void* ptr, int firstColumn);
void QHPieModelMapper_SetLabelsRow(void* ptr, int labelsRow);
void QHPieModelMapper_SetModel(void* ptr, void* model);
void QHPieModelMapper_SetSeries(void* ptr, void* series);
void QHPieModelMapper_SetValuesRow(void* ptr, int valuesRow);
int QHPieModelMapper_ValuesRow(void* ptr);
void QHPieModelMapper_ConnectValuesRowChanged(void* ptr, long long t);
void QHPieModelMapper_DisconnectValuesRowChanged(void* ptr);
void QHPieModelMapper_ValuesRowChanged(void* ptr);
void* QHXYModelMapper_NewQHXYModelMapper(void* parent);
int QHXYModelMapper_ColumnCount(void* ptr);
void QHXYModelMapper_ConnectColumnCountChanged(void* ptr, long long t);
void QHXYModelMapper_DisconnectColumnCountChanged(void* ptr);
void QHXYModelMapper_ColumnCountChanged(void* ptr);
int QHXYModelMapper_FirstColumn(void* ptr);
void QHXYModelMapper_ConnectFirstColumnChanged(void* ptr, long long t);
void QHXYModelMapper_DisconnectFirstColumnChanged(void* ptr);
void QHXYModelMapper_FirstColumnChanged(void* ptr);
void* QHXYModelMapper_Model(void* ptr);
void QHXYModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QHXYModelMapper_DisconnectModelReplaced(void* ptr);
void QHXYModelMapper_ModelReplaced(void* ptr);
void* QHXYModelMapper_Series(void* ptr);
void QHXYModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QHXYModelMapper_DisconnectSeriesReplaced(void* ptr);
void QHXYModelMapper_SeriesReplaced(void* ptr);
void QHXYModelMapper_SetColumnCount(void* ptr, int columnCount);
void QHXYModelMapper_SetFirstColumn(void* ptr, int firstColumn);
void QHXYModelMapper_SetModel(void* ptr, void* model);
void QHXYModelMapper_SetSeries(void* ptr, void* series);
void QHXYModelMapper_SetXRow(void* ptr, int xRow);
void QHXYModelMapper_SetYRow(void* ptr, int yRow);
int QHXYModelMapper_XRow(void* ptr);
void QHXYModelMapper_ConnectXRowChanged(void* ptr, long long t);
void QHXYModelMapper_DisconnectXRowChanged(void* ptr);
void QHXYModelMapper_XRowChanged(void* ptr);
int QHXYModelMapper_YRow(void* ptr);
void QHXYModelMapper_ConnectYRowChanged(void* ptr, long long t);
void QHXYModelMapper_DisconnectYRowChanged(void* ptr);
void QHXYModelMapper_YRowChanged(void* ptr);
void* QHorizontalBarSeries_NewQHorizontalBarSeries(void* parent);
long long QHorizontalBarSeries_Type(void* ptr);
long long QHorizontalBarSeries_TypeDefault(void* ptr);
void QHorizontalBarSeries_DestroyQHorizontalBarSeries(void* ptr);
void QHorizontalBarSeries_DestroyQHorizontalBarSeriesDefault(void* ptr);
void* QHorizontalPercentBarSeries_NewQHorizontalPercentBarSeries(void* parent);
long long QHorizontalPercentBarSeries_Type(void* ptr);
long long QHorizontalPercentBarSeries_TypeDefault(void* ptr);
void QHorizontalPercentBarSeries_DestroyQHorizontalPercentBarSeries(void* ptr);
void QHorizontalPercentBarSeries_DestroyQHorizontalPercentBarSeriesDefault(void* ptr);
void* QHorizontalStackedBarSeries_NewQHorizontalStackedBarSeries(void* parent);
long long QHorizontalStackedBarSeries_Type(void* ptr);
long long QHorizontalStackedBarSeries_TypeDefault(void* ptr);
void QHorizontalStackedBarSeries_DestroyQHorizontalStackedBarSeries(void* ptr);
void QHorizontalStackedBarSeries_DestroyQHorizontalStackedBarSeriesDefault(void* ptr);
long long QLegend_Alignment(void* ptr);
void QLegend_AttachToChart(void* ptr);
void QLegend_ConnectBackgroundVisibleChanged(void* ptr, long long t);
void QLegend_DisconnectBackgroundVisibleChanged(void* ptr);
void QLegend_BackgroundVisibleChanged(void* ptr, char visible);
void* QLegend_BorderColor(void* ptr);
void QLegend_ConnectBorderColorChanged(void* ptr, long long t);
void QLegend_DisconnectBorderColorChanged(void* ptr);
void QLegend_BorderColorChanged(void* ptr, void* color);
void* QLegend_Brush(void* ptr);
void* QLegend_Color(void* ptr);
void QLegend_ConnectColorChanged(void* ptr, long long t);
void QLegend_DisconnectColorChanged(void* ptr);
void QLegend_ColorChanged(void* ptr, void* color);
void QLegend_DetachFromChart(void* ptr);
void QLegend_ConnectFontChanged(void* ptr, long long t);
void QLegend_DisconnectFontChanged(void* ptr);
void QLegend_FontChanged(void* ptr, void* font);
char QLegend_IsAttachedToChart(void* ptr);
char QLegend_IsBackgroundVisible(void* ptr);
void* QLegend_LabelBrush(void* ptr);
void* QLegend_LabelColor(void* ptr);
void QLegend_ConnectLabelColorChanged(void* ptr, long long t);
void QLegend_DisconnectLabelColorChanged(void* ptr);
void QLegend_LabelColorChanged(void* ptr, void* color);
long long QLegend_MarkerShape(void* ptr);
void QLegend_ConnectMarkerShapeChanged(void* ptr, long long t);
void QLegend_DisconnectMarkerShapeChanged(void* ptr);
void QLegend_MarkerShapeChanged(void* ptr, long long shape);
struct QtCharts_PackedList QLegend_Markers(void* ptr, void* series);
void* QLegend_Pen(void* ptr);
char QLegend_ReverseMarkers(void* ptr);
void QLegend_ConnectReverseMarkersChanged(void* ptr, long long t);
void QLegend_DisconnectReverseMarkersChanged(void* ptr);
void QLegend_ReverseMarkersChanged(void* ptr, char reverseMarkers);
void QLegend_SetAlignment(void* ptr, long long alignment);
void QLegend_SetBackgroundVisible(void* ptr, char visible);
void QLegend_SetBorderColor(void* ptr, void* color);
void QLegend_SetBrush(void* ptr, void* brush);
void QLegend_SetColor(void* ptr, void* color);
void QLegend_SetLabelBrush(void* ptr, void* brush);
void QLegend_SetLabelColor(void* ptr, void* color);
void QLegend_SetMarkerShape(void* ptr, long long shape);
void QLegend_SetPen(void* ptr, void* pen);
void QLegend_SetReverseMarkers(void* ptr, char reverseMarkers);
void QLegend_SetShowToolTips(void* ptr, char show);
char QLegend_ShowToolTips(void* ptr);
void QLegend_ConnectShowToolTipsChanged(void* ptr, long long t);
void QLegend_DisconnectShowToolTipsChanged(void* ptr);
void QLegend_ShowToolTipsChanged(void* ptr, char showToolTips);
void QLegend_DestroyQLegend(void* ptr);
void QLegend_DestroyQLegendDefault(void* ptr);
void* QLegend___markers_atList(void* ptr, int i);
void QLegend___markers_setList(void* ptr, void* i);
void* QLegend___markers_newList(void* ptr);
void* QLegend___actions_atList(void* ptr, int i);
void QLegend___actions_setList(void* ptr, void* i);
void* QLegend___actions_newList(void* ptr);
void* QLegend___addActions_actions_atList(void* ptr, int i);
void QLegend___addActions_actions_setList(void* ptr, void* i);
void* QLegend___addActions_actions_newList(void* ptr);
void* QLegend___insertActions_actions_atList(void* ptr, int i);
void QLegend___insertActions_actions_setList(void* ptr, void* i);
void* QLegend___insertActions_actions_newList(void* ptr);
void* QLegend___children_atList(void* ptr, int i);
void QLegend___children_setList(void* ptr, void* i);
void* QLegend___children_newList(void* ptr);
void* QLegend___dynamicPropertyNames_atList(void* ptr, int i);
void QLegend___dynamicPropertyNames_setList(void* ptr, void* i);
void* QLegend___dynamicPropertyNames_newList(void* ptr);
void* QLegend___findChildren_atList(void* ptr, int i);
void QLegend___findChildren_setList(void* ptr, void* i);
void* QLegend___findChildren_newList(void* ptr);
void* QLegend___findChildren_atList3(void* ptr, int i);
void QLegend___findChildren_setList3(void* ptr, void* i);
void* QLegend___findChildren_newList3(void* ptr);
void* QLegend___childItems_atList(void* ptr, int i);
void QLegend___childItems_setList(void* ptr, void* i);
void* QLegend___childItems_newList(void* ptr);
void* QLegend___collidingItems_atList(void* ptr, int i);
void QLegend___collidingItems_setList(void* ptr, void* i);
void* QLegend___collidingItems_newList(void* ptr);
void* QLegend___setTransformations_transformations_atList(void* ptr, int i);
void QLegend___setTransformations_transformations_setList(void* ptr, void* i);
void* QLegend___setTransformations_transformations_newList(void* ptr);
void* QLegend___transformations_atList(void* ptr, int i);
void QLegend___transformations_setList(void* ptr, void* i);
void* QLegend___transformations_newList(void* ptr);
void* QLegend_BoundingRectDefault(void* ptr);
void QLegend_ChangeEventDefault(void* ptr, void* event);
char QLegend_CloseDefault(void* ptr);
void QLegend_CloseEventDefault(void* ptr, void* event);
char QLegend_EventDefault(void* ptr, void* event);
void QLegend_FocusInEventDefault(void* ptr, void* event);
char QLegend_FocusNextPrevChildDefault(void* ptr, char next);
void QLegend_FocusOutEventDefault(void* ptr, void* event);
void QLegend_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QLegend_GrabKeyboardEventDefault(void* ptr, void* event);
void QLegend_GrabMouseEventDefault(void* ptr, void* event);
void QLegend_HideEventDefault(void* ptr, void* event);
void QLegend_HoverLeaveEventDefault(void* ptr, void* event);
void QLegend_HoverMoveEventDefault(void* ptr, void* event);
void QLegend_InitStyleOptionDefault(void* ptr, void* option);
void* QLegend_ItemChangeDefault(void* ptr, long long change, void* value);
void QLegend_MoveEventDefault(void* ptr, void* event);
void QLegend_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QLegend_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QLegend_PolishEventDefault(void* ptr);
void QLegend_ResizeEventDefault(void* ptr, void* event);
char QLegend_SceneEventDefault(void* ptr, void* event);
void QLegend_SetGeometryDefault(void* ptr, void* rect);
void* QLegend_ShapeDefault(void* ptr);
void QLegend_ShowEventDefault(void* ptr, void* event);
void* QLegend_SizeHintDefault(void* ptr, long long which, void* constraint);
int QLegend_TypeDefault(void* ptr);
void QLegend_UngrabKeyboardEventDefault(void* ptr, void* event);
void QLegend_UngrabMouseEventDefault(void* ptr, void* event);
void QLegend_UpdateGeometryDefault(void* ptr);
char QLegend_WindowFrameEventDefault(void* ptr, void* event);
long long QLegend_WindowFrameSectionAtDefault(void* ptr, void* pos);
void QLegend_UpdateMicroFocusDefault(void* ptr);
void QLegend_ChildEventDefault(void* ptr, void* event);
void QLegend_ConnectNotifyDefault(void* ptr, void* sign);
void QLegend_CustomEventDefault(void* ptr, void* event);
void QLegend_DeleteLaterDefault(void* ptr);
void QLegend_DisconnectNotifyDefault(void* ptr, void* sign);
char QLegend_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLegend_MetaObjectDefault(void* ptr);
void QLegend_TimerEventDefault(void* ptr, void* event);
void QLegend_AdvanceDefault(void* ptr, int phase);
char QLegend_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QLegend_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QLegend_ContainsDefault(void* ptr, void* point);
void QLegend_ContextMenuEventDefault(void* ptr, void* event);
void QLegend_DragEnterEventDefault(void* ptr, void* event);
void QLegend_DragLeaveEventDefault(void* ptr, void* event);
void QLegend_DragMoveEventDefault(void* ptr, void* event);
void QLegend_DropEventDefault(void* ptr, void* event);
void QLegend_HoverEnterEventDefault(void* ptr, void* event);
void QLegend_InputMethodEventDefault(void* ptr, void* event);
void* QLegend_InputMethodQueryDefault(void* ptr, long long query);
char QLegend_IsObscuredByDefault(void* ptr, void* item);
void QLegend_KeyPressEventDefault(void* ptr, void* event);
void QLegend_KeyReleaseEventDefault(void* ptr, void* event);
void QLegend_MouseDoubleClickEventDefault(void* ptr, void* event);
void QLegend_MouseMoveEventDefault(void* ptr, void* event);
void QLegend_MousePressEventDefault(void* ptr, void* event);
void QLegend_MouseReleaseEventDefault(void* ptr, void* event);
void* QLegend_OpaqueAreaDefault(void* ptr);
char QLegend_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QLegend_WheelEventDefault(void* ptr, void* event);
void* QLegendMarker_Brush(void* ptr);
void QLegendMarker_ConnectBrushChanged(void* ptr, long long t);
void QLegendMarker_DisconnectBrushChanged(void* ptr);
void QLegendMarker_BrushChanged(void* ptr);
void QLegendMarker_ConnectClicked(void* ptr, long long t);
void QLegendMarker_DisconnectClicked(void* ptr);
void QLegendMarker_Clicked(void* ptr);
void* QLegendMarker_Font(void* ptr);
void QLegendMarker_ConnectFontChanged(void* ptr, long long t);
void QLegendMarker_DisconnectFontChanged(void* ptr);
void QLegendMarker_FontChanged(void* ptr);
void QLegendMarker_ConnectHovered(void* ptr, long long t);
void QLegendMarker_DisconnectHovered(void* ptr);
void QLegendMarker_Hovered(void* ptr, char status);
char QLegendMarker_IsVisible(void* ptr);
struct QtCharts_PackedString QLegendMarker_Label(void* ptr);
void* QLegendMarker_LabelBrush(void* ptr);
void QLegendMarker_ConnectLabelBrushChanged(void* ptr, long long t);
void QLegendMarker_DisconnectLabelBrushChanged(void* ptr);
void QLegendMarker_LabelBrushChanged(void* ptr);
void QLegendMarker_ConnectLabelChanged(void* ptr, long long t);
void QLegendMarker_DisconnectLabelChanged(void* ptr);
void QLegendMarker_LabelChanged(void* ptr);
void* QLegendMarker_Pen(void* ptr);
void QLegendMarker_ConnectPenChanged(void* ptr, long long t);
void QLegendMarker_DisconnectPenChanged(void* ptr);
void QLegendMarker_PenChanged(void* ptr);
void* QLegendMarker_Series(void* ptr);
void QLegendMarker_SetBrush(void* ptr, void* brush);
void QLegendMarker_SetFont(void* ptr, void* font);
void QLegendMarker_SetLabel(void* ptr, struct QtCharts_PackedString label);
void QLegendMarker_SetLabelBrush(void* ptr, void* brush);
void QLegendMarker_SetPen(void* ptr, void* pen);
void QLegendMarker_SetShape(void* ptr, long long shape);
void QLegendMarker_SetVisible(void* ptr, char visible);
long long QLegendMarker_Shape(void* ptr);
void QLegendMarker_ConnectShapeChanged(void* ptr, long long t);
void QLegendMarker_DisconnectShapeChanged(void* ptr);
void QLegendMarker_ShapeChanged(void* ptr);
long long QLegendMarker_Type(void* ptr);
void QLegendMarker_ConnectVisibleChanged(void* ptr, long long t);
void QLegendMarker_DisconnectVisibleChanged(void* ptr);
void QLegendMarker_VisibleChanged(void* ptr);
void QLegendMarker_DestroyQLegendMarker(void* ptr);
void QLegendMarker_DestroyQLegendMarkerDefault(void* ptr);
void* QLegendMarker___children_atList(void* ptr, int i);
void QLegendMarker___children_setList(void* ptr, void* i);
void* QLegendMarker___children_newList(void* ptr);
void* QLegendMarker___dynamicPropertyNames_atList(void* ptr, int i);
void QLegendMarker___dynamicPropertyNames_setList(void* ptr, void* i);
void* QLegendMarker___dynamicPropertyNames_newList(void* ptr);
void* QLegendMarker___findChildren_atList(void* ptr, int i);
void QLegendMarker___findChildren_setList(void* ptr, void* i);
void* QLegendMarker___findChildren_newList(void* ptr);
void* QLegendMarker___findChildren_atList3(void* ptr, int i);
void QLegendMarker___findChildren_setList3(void* ptr, void* i);
void* QLegendMarker___findChildren_newList3(void* ptr);
void QLegendMarker_ChildEventDefault(void* ptr, void* event);
void QLegendMarker_ConnectNotifyDefault(void* ptr, void* sign);
void QLegendMarker_CustomEventDefault(void* ptr, void* event);
void QLegendMarker_DeleteLaterDefault(void* ptr);
void QLegendMarker_DisconnectNotifyDefault(void* ptr, void* sign);
char QLegendMarker_EventDefault(void* ptr, void* e);
char QLegendMarker_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLegendMarker_MetaObjectDefault(void* ptr);
void QLegendMarker_TimerEventDefault(void* ptr, void* event);
void* QLineSeries_NewQLineSeries(void* parent);
long long QLineSeries_Type(void* ptr);
long long QLineSeries_TypeDefault(void* ptr);
void QLineSeries_DestroyQLineSeries(void* ptr);
void QLineSeries_DestroyQLineSeriesDefault(void* ptr);
void* QLogValueAxis_NewQLogValueAxis(void* parent);
double QLogValueAxis_Base(void* ptr);
void QLogValueAxis_ConnectBaseChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectBaseChanged(void* ptr);
void QLogValueAxis_BaseChanged(void* ptr, double base);
struct QtCharts_PackedString QLogValueAxis_LabelFormat(void* ptr);
void QLogValueAxis_ConnectLabelFormatChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectLabelFormatChanged(void* ptr);
void QLogValueAxis_LabelFormatChanged(void* ptr, struct QtCharts_PackedString format);
double QLogValueAxis_Max(void* ptr);
void QLogValueAxis_ConnectMaxChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectMaxChanged(void* ptr);
void QLogValueAxis_MaxChanged(void* ptr, double max);
double QLogValueAxis_Min(void* ptr);
void QLogValueAxis_ConnectMinChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectMinChanged(void* ptr);
void QLogValueAxis_MinChanged(void* ptr, double min);
int QLogValueAxis_MinorTickCount(void* ptr);
void QLogValueAxis_ConnectMinorTickCountChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectMinorTickCountChanged(void* ptr);
void QLogValueAxis_MinorTickCountChanged(void* ptr, int minorTickCount);
void QLogValueAxis_ConnectRangeChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectRangeChanged(void* ptr);
void QLogValueAxis_RangeChanged(void* ptr, double min, double max);
void QLogValueAxis_SetBase(void* ptr, double base);
void QLogValueAxis_SetLabelFormat(void* ptr, struct QtCharts_PackedString format);
void QLogValueAxis_SetMax(void* ptr, double max);
void QLogValueAxis_SetMin(void* ptr, double min);
void QLogValueAxis_SetMinorTickCount(void* ptr, int minorTickCount);
void QLogValueAxis_SetRange(void* ptr, double min, double max);
int QLogValueAxis_TickCount(void* ptr);
void QLogValueAxis_ConnectTickCountChanged(void* ptr, long long t);
void QLogValueAxis_DisconnectTickCountChanged(void* ptr);
void QLogValueAxis_TickCountChanged(void* ptr, int tickCount);
long long QLogValueAxis_Type(void* ptr);
long long QLogValueAxis_TypeDefault(void* ptr);
void QLogValueAxis_DestroyQLogValueAxis(void* ptr);
void QLogValueAxis_DestroyQLogValueAxisDefault(void* ptr);
void* QPercentBarSeries_NewQPercentBarSeries(void* parent);
long long QPercentBarSeries_Type(void* ptr);
long long QPercentBarSeries_TypeDefault(void* ptr);
void QPercentBarSeries_DestroyQPercentBarSeries(void* ptr);
void QPercentBarSeries_DestroyQPercentBarSeriesDefault(void* ptr);
void* QPieLegendMarker_Series(void* ptr);
void* QPieLegendMarker_SeriesDefault(void* ptr);
void* QPieLegendMarker_Slice(void* ptr);
long long QPieLegendMarker_Type(void* ptr);
long long QPieLegendMarker_TypeDefault(void* ptr);
void QPieLegendMarker_DestroyQPieLegendMarker(void* ptr);
void QPieLegendMarker_DestroyQPieLegendMarkerDefault(void* ptr);
void* QPieSeries_NewQPieSeries(void* parent);
void QPieSeries_ConnectAdded(void* ptr, long long t);
void QPieSeries_DisconnectAdded(void* ptr);
void QPieSeries_Added(void* ptr, void* slices);
char QPieSeries_Append(void* ptr, void* slice);
char QPieSeries_Append2(void* ptr, void* slices);
void* QPieSeries_Append3(void* ptr, struct QtCharts_PackedString label, double value);
void QPieSeries_Clear(void* ptr);
void QPieSeries_ConnectClicked(void* ptr, long long t);
void QPieSeries_DisconnectClicked(void* ptr);
void QPieSeries_Clicked(void* ptr, void* slice);
int QPieSeries_Count(void* ptr);
void QPieSeries_ConnectCountChanged(void* ptr, long long t);
void QPieSeries_DisconnectCountChanged(void* ptr);
void QPieSeries_CountChanged(void* ptr);
void QPieSeries_ConnectDoubleClicked(void* ptr, long long t);
void QPieSeries_DisconnectDoubleClicked(void* ptr);
void QPieSeries_DoubleClicked(void* ptr, void* slice);
double QPieSeries_HoleSize(void* ptr);
double QPieSeries_HorizontalPosition(void* ptr);
void QPieSeries_ConnectHovered(void* ptr, long long t);
void QPieSeries_DisconnectHovered(void* ptr);
void QPieSeries_Hovered(void* ptr, void* slice, char state);
char QPieSeries_Insert(void* ptr, int index, void* slice);
char QPieSeries_IsEmpty(void* ptr);
double QPieSeries_PieEndAngle(void* ptr);
double QPieSeries_PieSize(void* ptr);
double QPieSeries_PieStartAngle(void* ptr);
void QPieSeries_ConnectPressed(void* ptr, long long t);
void QPieSeries_DisconnectPressed(void* ptr);
void QPieSeries_Pressed(void* ptr, void* slice);
void QPieSeries_ConnectReleased(void* ptr, long long t);
void QPieSeries_DisconnectReleased(void* ptr);
void QPieSeries_Released(void* ptr, void* slice);
char QPieSeries_Remove(void* ptr, void* slice);
void QPieSeries_ConnectRemoved(void* ptr, long long t);
void QPieSeries_DisconnectRemoved(void* ptr);
void QPieSeries_Removed(void* ptr, void* slices);
void QPieSeries_SetHoleSize(void* ptr, double holeSize);
void QPieSeries_SetHorizontalPosition(void* ptr, double relativePosition);
void QPieSeries_SetLabelsPosition(void* ptr, long long position);
void QPieSeries_SetLabelsVisible(void* ptr, char visible);
void QPieSeries_SetPieEndAngle(void* ptr, double angle);
void QPieSeries_SetPieSize(void* ptr, double relativeSize);
void QPieSeries_SetPieStartAngle(void* ptr, double startAngle);
void QPieSeries_SetVerticalPosition(void* ptr, double relativePosition);
struct QtCharts_PackedList QPieSeries_Slices(void* ptr);
double QPieSeries_Sum(void* ptr);
void QPieSeries_ConnectSumChanged(void* ptr, long long t);
void QPieSeries_DisconnectSumChanged(void* ptr);
void QPieSeries_SumChanged(void* ptr);
char QPieSeries_Take(void* ptr, void* slice);
long long QPieSeries_Type(void* ptr);
long long QPieSeries_TypeDefault(void* ptr);
double QPieSeries_VerticalPosition(void* ptr);
void QPieSeries_DestroyQPieSeries(void* ptr);
void QPieSeries_DestroyQPieSeriesDefault(void* ptr);
void* QPieSeries___added_slices_atList(void* ptr, int i);
void QPieSeries___added_slices_setList(void* ptr, void* i);
void* QPieSeries___added_slices_newList(void* ptr);
void* QPieSeries___append_slices_atList2(void* ptr, int i);
void QPieSeries___append_slices_setList2(void* ptr, void* i);
void* QPieSeries___append_slices_newList2(void* ptr);
void* QPieSeries___removed_slices_atList(void* ptr, int i);
void QPieSeries___removed_slices_setList(void* ptr, void* i);
void* QPieSeries___removed_slices_newList(void* ptr);
void* QPieSeries___slices_atList(void* ptr, int i);
void QPieSeries___slices_setList(void* ptr, void* i);
void* QPieSeries___slices_newList(void* ptr);
void* QPieSlice_NewQPieSlice(void* parent);
void* QPieSlice_NewQPieSlice2(struct QtCharts_PackedString label, double value, void* parent);
double QPieSlice_AngleSpan(void* ptr);
void QPieSlice_ConnectAngleSpanChanged(void* ptr, long long t);
void QPieSlice_DisconnectAngleSpanChanged(void* ptr);
void QPieSlice_AngleSpanChanged(void* ptr);
void* QPieSlice_BorderColor(void* ptr);
void QPieSlice_ConnectBorderColorChanged(void* ptr, long long t);
void QPieSlice_DisconnectBorderColorChanged(void* ptr);
void QPieSlice_BorderColorChanged(void* ptr);
int QPieSlice_BorderWidth(void* ptr);
void QPieSlice_ConnectBorderWidthChanged(void* ptr, long long t);
void QPieSlice_DisconnectBorderWidthChanged(void* ptr);
void QPieSlice_BorderWidthChanged(void* ptr);
void* QPieSlice_Brush(void* ptr);
void QPieSlice_ConnectBrushChanged(void* ptr, long long t);
void QPieSlice_DisconnectBrushChanged(void* ptr);
void QPieSlice_BrushChanged(void* ptr);
void QPieSlice_ConnectClicked(void* ptr, long long t);
void QPieSlice_DisconnectClicked(void* ptr);
void QPieSlice_Clicked(void* ptr);
void* QPieSlice_Color(void* ptr);
void QPieSlice_ConnectColorChanged(void* ptr, long long t);
void QPieSlice_DisconnectColorChanged(void* ptr);
void QPieSlice_ColorChanged(void* ptr);
void QPieSlice_ConnectDoubleClicked(void* ptr, long long t);
void QPieSlice_DisconnectDoubleClicked(void* ptr);
void QPieSlice_DoubleClicked(void* ptr);
double QPieSlice_ExplodeDistanceFactor(void* ptr);
void QPieSlice_ConnectHovered(void* ptr, long long t);
void QPieSlice_DisconnectHovered(void* ptr);
void QPieSlice_Hovered(void* ptr, char state);
char QPieSlice_IsExploded(void* ptr);
char QPieSlice_IsLabelVisible(void* ptr);
struct QtCharts_PackedString QPieSlice_Label(void* ptr);
double QPieSlice_LabelArmLengthFactor(void* ptr);
void* QPieSlice_LabelBrush(void* ptr);
void QPieSlice_ConnectLabelBrushChanged(void* ptr, long long t);
void QPieSlice_DisconnectLabelBrushChanged(void* ptr);
void QPieSlice_LabelBrushChanged(void* ptr);
void QPieSlice_ConnectLabelChanged(void* ptr, long long t);
void QPieSlice_DisconnectLabelChanged(void* ptr);
void QPieSlice_LabelChanged(void* ptr);
void* QPieSlice_LabelColor(void* ptr);
void QPieSlice_ConnectLabelColorChanged(void* ptr, long long t);
void QPieSlice_DisconnectLabelColorChanged(void* ptr);
void QPieSlice_LabelColorChanged(void* ptr);
void* QPieSlice_LabelFont(void* ptr);
void QPieSlice_ConnectLabelFontChanged(void* ptr, long long t);
void QPieSlice_DisconnectLabelFontChanged(void* ptr);
void QPieSlice_LabelFontChanged(void* ptr);
long long QPieSlice_LabelPosition(void* ptr);
void QPieSlice_ConnectLabelVisibleChanged(void* ptr, long long t);
void QPieSlice_DisconnectLabelVisibleChanged(void* ptr);
void QPieSlice_LabelVisibleChanged(void* ptr);
void* QPieSlice_Pen(void* ptr);
void QPieSlice_ConnectPenChanged(void* ptr, long long t);
void QPieSlice_DisconnectPenChanged(void* ptr);
void QPieSlice_PenChanged(void* ptr);
double QPieSlice_Percentage(void* ptr);
void QPieSlice_ConnectPercentageChanged(void* ptr, long long t);
void QPieSlice_DisconnectPercentageChanged(void* ptr);
void QPieSlice_PercentageChanged(void* ptr);
void QPieSlice_ConnectPressed(void* ptr, long long t);
void QPieSlice_DisconnectPressed(void* ptr);
void QPieSlice_Pressed(void* ptr);
void QPieSlice_ConnectReleased(void* ptr, long long t);
void QPieSlice_DisconnectReleased(void* ptr);
void QPieSlice_Released(void* ptr);
void* QPieSlice_Series(void* ptr);
void QPieSlice_SetBorderColor(void* ptr, void* color);
void QPieSlice_SetBorderWidth(void* ptr, int width);
void QPieSlice_SetBrush(void* ptr, void* brush);
void QPieSlice_SetColor(void* ptr, void* color);
void QPieSlice_SetExplodeDistanceFactor(void* ptr, double factor);
void QPieSlice_SetExploded(void* ptr, char exploded);
void QPieSlice_SetLabel(void* ptr, struct QtCharts_PackedString label);
void QPieSlice_SetLabelArmLengthFactor(void* ptr, double factor);
void QPieSlice_SetLabelBrush(void* ptr, void* brush);
void QPieSlice_SetLabelColor(void* ptr, void* color);
void QPieSlice_SetLabelFont(void* ptr, void* font);
void QPieSlice_SetLabelPosition(void* ptr, long long position);
void QPieSlice_SetLabelVisible(void* ptr, char visible);
void QPieSlice_SetPen(void* ptr, void* pen);
void QPieSlice_SetValue(void* ptr, double value);
double QPieSlice_StartAngle(void* ptr);
void QPieSlice_ConnectStartAngleChanged(void* ptr, long long t);
void QPieSlice_DisconnectStartAngleChanged(void* ptr);
void QPieSlice_StartAngleChanged(void* ptr);
double QPieSlice_Value(void* ptr);
void QPieSlice_ConnectValueChanged(void* ptr, long long t);
void QPieSlice_DisconnectValueChanged(void* ptr);
void QPieSlice_ValueChanged(void* ptr);
void QPieSlice_DestroyQPieSlice(void* ptr);
void QPieSlice_DestroyQPieSliceDefault(void* ptr);
void* QPieSlice___children_atList(void* ptr, int i);
void QPieSlice___children_setList(void* ptr, void* i);
void* QPieSlice___children_newList(void* ptr);
void* QPieSlice___dynamicPropertyNames_atList(void* ptr, int i);
void QPieSlice___dynamicPropertyNames_setList(void* ptr, void* i);
void* QPieSlice___dynamicPropertyNames_newList(void* ptr);
void* QPieSlice___findChildren_atList(void* ptr, int i);
void QPieSlice___findChildren_setList(void* ptr, void* i);
void* QPieSlice___findChildren_newList(void* ptr);
void* QPieSlice___findChildren_atList3(void* ptr, int i);
void QPieSlice___findChildren_setList3(void* ptr, void* i);
void* QPieSlice___findChildren_newList3(void* ptr);
void QPieSlice_ChildEventDefault(void* ptr, void* event);
void QPieSlice_ConnectNotifyDefault(void* ptr, void* sign);
void QPieSlice_CustomEventDefault(void* ptr, void* event);
void QPieSlice_DeleteLaterDefault(void* ptr);
void QPieSlice_DisconnectNotifyDefault(void* ptr, void* sign);
char QPieSlice_EventDefault(void* ptr, void* e);
char QPieSlice_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPieSlice_MetaObjectDefault(void* ptr);
void QPieSlice_TimerEventDefault(void* ptr, void* event);
void* QPolarChart_NewQPolarChart(void* parent, long long wFlags);
void QPolarChart_AddAxis(void* ptr, void* axis, long long polarOrientation);
struct QtCharts_PackedList QPolarChart_Axes(void* ptr, long long polarOrientation, void* series);
long long QPolarChart_QPolarChart_AxisPolarOrientation(void* axis);
void QPolarChart_DestroyQPolarChart(void* ptr);
void QPolarChart_DestroyQPolarChartDefault(void* ptr);
void* QScatterSeries_NewQScatterSeries(void* parent);
void* QScatterSeries_BorderColor(void* ptr);
void QScatterSeries_ConnectBorderColorChanged(void* ptr, long long t);
void QScatterSeries_DisconnectBorderColorChanged(void* ptr);
void QScatterSeries_BorderColorChanged(void* ptr, void* color);
long long QScatterSeries_MarkerShape(void* ptr);
void QScatterSeries_ConnectMarkerShapeChanged(void* ptr, long long t);
void QScatterSeries_DisconnectMarkerShapeChanged(void* ptr);
void QScatterSeries_MarkerShapeChanged(void* ptr, long long shape);
double QScatterSeries_MarkerSize(void* ptr);
void QScatterSeries_ConnectMarkerSizeChanged(void* ptr, long long t);
void QScatterSeries_DisconnectMarkerSizeChanged(void* ptr);
void QScatterSeries_MarkerSizeChanged(void* ptr, double size);
void QScatterSeries_SetBorderColor(void* ptr, void* color);
void QScatterSeries_SetMarkerShape(void* ptr, long long shape);
void QScatterSeries_SetMarkerSize(void* ptr, double size);
long long QScatterSeries_Type(void* ptr);
long long QScatterSeries_TypeDefault(void* ptr);
void QScatterSeries_DestroyQScatterSeries(void* ptr);
void QScatterSeries_DestroyQScatterSeriesDefault(void* ptr);
void* QSplineSeries_NewQSplineSeries(void* parent);
void QSplineSeries_DestroyQSplineSeries(void* ptr);
void QSplineSeries_DestroyQSplineSeriesDefault(void* ptr);
void* QStackedBarSeries_NewQStackedBarSeries(void* parent);
long long QStackedBarSeries_Type(void* ptr);
long long QStackedBarSeries_TypeDefault(void* ptr);
void QStackedBarSeries_DestroyQStackedBarSeries(void* ptr);
void QStackedBarSeries_DestroyQStackedBarSeriesDefault(void* ptr);
void* QVBarModelMapper_NewQVBarModelMapper(void* parent);
int QVBarModelMapper_FirstBarSetColumn(void* ptr);
void QVBarModelMapper_ConnectFirstBarSetColumnChanged(void* ptr, long long t);
void QVBarModelMapper_DisconnectFirstBarSetColumnChanged(void* ptr);
void QVBarModelMapper_FirstBarSetColumnChanged(void* ptr);
int QVBarModelMapper_FirstRow(void* ptr);
void QVBarModelMapper_ConnectFirstRowChanged(void* ptr, long long t);
void QVBarModelMapper_DisconnectFirstRowChanged(void* ptr);
void QVBarModelMapper_FirstRowChanged(void* ptr);
int QVBarModelMapper_LastBarSetColumn(void* ptr);
void QVBarModelMapper_ConnectLastBarSetColumnChanged(void* ptr, long long t);
void QVBarModelMapper_DisconnectLastBarSetColumnChanged(void* ptr);
void QVBarModelMapper_LastBarSetColumnChanged(void* ptr);
void* QVBarModelMapper_Model(void* ptr);
void QVBarModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QVBarModelMapper_DisconnectModelReplaced(void* ptr);
void QVBarModelMapper_ModelReplaced(void* ptr);
int QVBarModelMapper_RowCount(void* ptr);
void QVBarModelMapper_ConnectRowCountChanged(void* ptr, long long t);
void QVBarModelMapper_DisconnectRowCountChanged(void* ptr);
void QVBarModelMapper_RowCountChanged(void* ptr);
void* QVBarModelMapper_Series(void* ptr);
void QVBarModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QVBarModelMapper_DisconnectSeriesReplaced(void* ptr);
void QVBarModelMapper_SeriesReplaced(void* ptr);
void QVBarModelMapper_SetFirstBarSetColumn(void* ptr, int firstBarSetColumn);
void QVBarModelMapper_SetFirstRow(void* ptr, int firstRow);
void QVBarModelMapper_SetLastBarSetColumn(void* ptr, int lastBarSetColumn);
void QVBarModelMapper_SetModel(void* ptr, void* model);
void QVBarModelMapper_SetRowCount(void* ptr, int rowCount);
void QVBarModelMapper_SetSeries(void* ptr, void* series);
void* QVBarModelMapper___children_atList(void* ptr, int i);
void QVBarModelMapper___children_setList(void* ptr, void* i);
void* QVBarModelMapper___children_newList(void* ptr);
void* QVBarModelMapper___dynamicPropertyNames_atList(void* ptr, int i);
void QVBarModelMapper___dynamicPropertyNames_setList(void* ptr, void* i);
void* QVBarModelMapper___dynamicPropertyNames_newList(void* ptr);
void* QVBarModelMapper___findChildren_atList(void* ptr, int i);
void QVBarModelMapper___findChildren_setList(void* ptr, void* i);
void* QVBarModelMapper___findChildren_newList(void* ptr);
void* QVBarModelMapper___findChildren_atList3(void* ptr, int i);
void QVBarModelMapper___findChildren_setList3(void* ptr, void* i);
void* QVBarModelMapper___findChildren_newList3(void* ptr);
void QVBarModelMapper_ChildEventDefault(void* ptr, void* event);
void QVBarModelMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QVBarModelMapper_CustomEventDefault(void* ptr, void* event);
void QVBarModelMapper_DeleteLaterDefault(void* ptr);
void QVBarModelMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QVBarModelMapper_EventDefault(void* ptr, void* e);
char QVBarModelMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QVBarModelMapper_MetaObjectDefault(void* ptr);
void QVBarModelMapper_TimerEventDefault(void* ptr, void* event);
void* QVBoxPlotModelMapper_NewQVBoxPlotModelMapper(void* parent);
int QVBoxPlotModelMapper_FirstBoxSetColumn(void* ptr);
void QVBoxPlotModelMapper_ConnectFirstBoxSetColumnChanged(void* ptr, long long t);
void QVBoxPlotModelMapper_DisconnectFirstBoxSetColumnChanged(void* ptr);
void QVBoxPlotModelMapper_FirstBoxSetColumnChanged(void* ptr);
int QVBoxPlotModelMapper_FirstRow(void* ptr);
void QVBoxPlotModelMapper_ConnectFirstRowChanged(void* ptr, long long t);
void QVBoxPlotModelMapper_DisconnectFirstRowChanged(void* ptr);
void QVBoxPlotModelMapper_FirstRowChanged(void* ptr);
int QVBoxPlotModelMapper_LastBoxSetColumn(void* ptr);
void QVBoxPlotModelMapper_ConnectLastBoxSetColumnChanged(void* ptr, long long t);
void QVBoxPlotModelMapper_DisconnectLastBoxSetColumnChanged(void* ptr);
void QVBoxPlotModelMapper_LastBoxSetColumnChanged(void* ptr);
void* QVBoxPlotModelMapper_Model(void* ptr);
void QVBoxPlotModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QVBoxPlotModelMapper_DisconnectModelReplaced(void* ptr);
void QVBoxPlotModelMapper_ModelReplaced(void* ptr);
int QVBoxPlotModelMapper_RowCount(void* ptr);
void QVBoxPlotModelMapper_ConnectRowCountChanged(void* ptr, long long t);
void QVBoxPlotModelMapper_DisconnectRowCountChanged(void* ptr);
void QVBoxPlotModelMapper_RowCountChanged(void* ptr);
void* QVBoxPlotModelMapper_Series(void* ptr);
void QVBoxPlotModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QVBoxPlotModelMapper_DisconnectSeriesReplaced(void* ptr);
void QVBoxPlotModelMapper_SeriesReplaced(void* ptr);
void QVBoxPlotModelMapper_SetFirstBoxSetColumn(void* ptr, int firstBoxSetColumn);
void QVBoxPlotModelMapper_SetFirstRow(void* ptr, int firstRow);
void QVBoxPlotModelMapper_SetLastBoxSetColumn(void* ptr, int lastBoxSetColumn);
void QVBoxPlotModelMapper_SetModel(void* ptr, void* model);
void QVBoxPlotModelMapper_SetRowCount(void* ptr, int rowCount);
void QVBoxPlotModelMapper_SetSeries(void* ptr, void* series);
void* QVBoxPlotModelMapper___children_atList(void* ptr, int i);
void QVBoxPlotModelMapper___children_setList(void* ptr, void* i);
void* QVBoxPlotModelMapper___children_newList(void* ptr);
void* QVBoxPlotModelMapper___dynamicPropertyNames_atList(void* ptr, int i);
void QVBoxPlotModelMapper___dynamicPropertyNames_setList(void* ptr, void* i);
void* QVBoxPlotModelMapper___dynamicPropertyNames_newList(void* ptr);
void* QVBoxPlotModelMapper___findChildren_atList(void* ptr, int i);
void QVBoxPlotModelMapper___findChildren_setList(void* ptr, void* i);
void* QVBoxPlotModelMapper___findChildren_newList(void* ptr);
void* QVBoxPlotModelMapper___findChildren_atList3(void* ptr, int i);
void QVBoxPlotModelMapper___findChildren_setList3(void* ptr, void* i);
void* QVBoxPlotModelMapper___findChildren_newList3(void* ptr);
void QVBoxPlotModelMapper_ChildEventDefault(void* ptr, void* event);
void QVBoxPlotModelMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QVBoxPlotModelMapper_CustomEventDefault(void* ptr, void* event);
void QVBoxPlotModelMapper_DeleteLaterDefault(void* ptr);
void QVBoxPlotModelMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QVBoxPlotModelMapper_EventDefault(void* ptr, void* e);
char QVBoxPlotModelMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QVBoxPlotModelMapper_MetaObjectDefault(void* ptr);
void QVBoxPlotModelMapper_TimerEventDefault(void* ptr, void* event);
void* QVCandlestickModelMapper_NewQVCandlestickModelMapper(void* parent);
int QVCandlestickModelMapper_CloseRow(void* ptr);
void QVCandlestickModelMapper_ConnectCloseRowChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectCloseRowChanged(void* ptr);
void QVCandlestickModelMapper_CloseRowChanged(void* ptr);
int QVCandlestickModelMapper_FirstSetColumn(void* ptr);
void QVCandlestickModelMapper_ConnectFirstSetColumnChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectFirstSetColumnChanged(void* ptr);
void QVCandlestickModelMapper_FirstSetColumnChanged(void* ptr);
int QVCandlestickModelMapper_HighRow(void* ptr);
void QVCandlestickModelMapper_ConnectHighRowChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectHighRowChanged(void* ptr);
void QVCandlestickModelMapper_HighRowChanged(void* ptr);
int QVCandlestickModelMapper_LastSetColumn(void* ptr);
void QVCandlestickModelMapper_ConnectLastSetColumnChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectLastSetColumnChanged(void* ptr);
void QVCandlestickModelMapper_LastSetColumnChanged(void* ptr);
int QVCandlestickModelMapper_LowRow(void* ptr);
void QVCandlestickModelMapper_ConnectLowRowChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectLowRowChanged(void* ptr);
void QVCandlestickModelMapper_LowRowChanged(void* ptr);
int QVCandlestickModelMapper_OpenRow(void* ptr);
void QVCandlestickModelMapper_ConnectOpenRowChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectOpenRowChanged(void* ptr);
void QVCandlestickModelMapper_OpenRowChanged(void* ptr);
long long QVCandlestickModelMapper_Orientation(void* ptr);
long long QVCandlestickModelMapper_OrientationDefault(void* ptr);
void QVCandlestickModelMapper_SetCloseRow(void* ptr, int closeRow);
void QVCandlestickModelMapper_SetFirstSetColumn(void* ptr, int firstSetColumn);
void QVCandlestickModelMapper_SetHighRow(void* ptr, int highRow);
void QVCandlestickModelMapper_SetLastSetColumn(void* ptr, int lastSetColumn);
void QVCandlestickModelMapper_SetLowRow(void* ptr, int lowRow);
void QVCandlestickModelMapper_SetOpenRow(void* ptr, int openRow);
void QVCandlestickModelMapper_SetTimestampRow(void* ptr, int timestampRow);
int QVCandlestickModelMapper_TimestampRow(void* ptr);
void QVCandlestickModelMapper_ConnectTimestampRowChanged(void* ptr, long long t);
void QVCandlestickModelMapper_DisconnectTimestampRowChanged(void* ptr);
void QVCandlestickModelMapper_TimestampRowChanged(void* ptr);
void* QVPieModelMapper_NewQVPieModelMapper(void* parent);
int QVPieModelMapper_FirstRow(void* ptr);
void QVPieModelMapper_ConnectFirstRowChanged(void* ptr, long long t);
void QVPieModelMapper_DisconnectFirstRowChanged(void* ptr);
void QVPieModelMapper_FirstRowChanged(void* ptr);
int QVPieModelMapper_LabelsColumn(void* ptr);
void QVPieModelMapper_ConnectLabelsColumnChanged(void* ptr, long long t);
void QVPieModelMapper_DisconnectLabelsColumnChanged(void* ptr);
void QVPieModelMapper_LabelsColumnChanged(void* ptr);
void* QVPieModelMapper_Model(void* ptr);
void QVPieModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QVPieModelMapper_DisconnectModelReplaced(void* ptr);
void QVPieModelMapper_ModelReplaced(void* ptr);
int QVPieModelMapper_RowCount(void* ptr);
void QVPieModelMapper_ConnectRowCountChanged(void* ptr, long long t);
void QVPieModelMapper_DisconnectRowCountChanged(void* ptr);
void QVPieModelMapper_RowCountChanged(void* ptr);
void* QVPieModelMapper_Series(void* ptr);
void QVPieModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QVPieModelMapper_DisconnectSeriesReplaced(void* ptr);
void QVPieModelMapper_SeriesReplaced(void* ptr);
void QVPieModelMapper_SetFirstRow(void* ptr, int firstRow);
void QVPieModelMapper_SetLabelsColumn(void* ptr, int labelsColumn);
void QVPieModelMapper_SetModel(void* ptr, void* model);
void QVPieModelMapper_SetRowCount(void* ptr, int rowCount);
void QVPieModelMapper_SetSeries(void* ptr, void* series);
void QVPieModelMapper_SetValuesColumn(void* ptr, int valuesColumn);
int QVPieModelMapper_ValuesColumn(void* ptr);
void QVPieModelMapper_ConnectValuesColumnChanged(void* ptr, long long t);
void QVPieModelMapper_DisconnectValuesColumnChanged(void* ptr);
void QVPieModelMapper_ValuesColumnChanged(void* ptr);
void* QVXYModelMapper_NewQVXYModelMapper(void* parent);
int QVXYModelMapper_FirstRow(void* ptr);
void QVXYModelMapper_ConnectFirstRowChanged(void* ptr, long long t);
void QVXYModelMapper_DisconnectFirstRowChanged(void* ptr);
void QVXYModelMapper_FirstRowChanged(void* ptr);
void* QVXYModelMapper_Model(void* ptr);
void QVXYModelMapper_ConnectModelReplaced(void* ptr, long long t);
void QVXYModelMapper_DisconnectModelReplaced(void* ptr);
void QVXYModelMapper_ModelReplaced(void* ptr);
int QVXYModelMapper_RowCount(void* ptr);
void QVXYModelMapper_ConnectRowCountChanged(void* ptr, long long t);
void QVXYModelMapper_DisconnectRowCountChanged(void* ptr);
void QVXYModelMapper_RowCountChanged(void* ptr);
void* QVXYModelMapper_Series(void* ptr);
void QVXYModelMapper_ConnectSeriesReplaced(void* ptr, long long t);
void QVXYModelMapper_DisconnectSeriesReplaced(void* ptr);
void QVXYModelMapper_SeriesReplaced(void* ptr);
void QVXYModelMapper_SetFirstRow(void* ptr, int firstRow);
void QVXYModelMapper_SetModel(void* ptr, void* model);
void QVXYModelMapper_SetRowCount(void* ptr, int rowCount);
void QVXYModelMapper_SetSeries(void* ptr, void* series);
void QVXYModelMapper_SetXColumn(void* ptr, int xColumn);
void QVXYModelMapper_SetYColumn(void* ptr, int yColumn);
int QVXYModelMapper_XColumn(void* ptr);
void QVXYModelMapper_ConnectXColumnChanged(void* ptr, long long t);
void QVXYModelMapper_DisconnectXColumnChanged(void* ptr);
void QVXYModelMapper_XColumnChanged(void* ptr);
int QVXYModelMapper_YColumn(void* ptr);
void QVXYModelMapper_ConnectYColumnChanged(void* ptr, long long t);
void QVXYModelMapper_DisconnectYColumnChanged(void* ptr);
void QVXYModelMapper_YColumnChanged(void* ptr);
void* QValueAxis_NewQValueAxis(void* parent);
void QValueAxis_ApplyNiceNumbers(void* ptr);
void QValueAxis_ApplyNiceNumbersDefault(void* ptr);
struct QtCharts_PackedString QValueAxis_LabelFormat(void* ptr);
void QValueAxis_ConnectLabelFormatChanged(void* ptr, long long t);
void QValueAxis_DisconnectLabelFormatChanged(void* ptr);
void QValueAxis_LabelFormatChanged(void* ptr, struct QtCharts_PackedString format);
double QValueAxis_Max(void* ptr);
void QValueAxis_ConnectMaxChanged(void* ptr, long long t);
void QValueAxis_DisconnectMaxChanged(void* ptr);
void QValueAxis_MaxChanged(void* ptr, double max);
double QValueAxis_Min(void* ptr);
void QValueAxis_ConnectMinChanged(void* ptr, long long t);
void QValueAxis_DisconnectMinChanged(void* ptr);
void QValueAxis_MinChanged(void* ptr, double min);
int QValueAxis_MinorTickCount(void* ptr);
void QValueAxis_ConnectMinorTickCountChanged(void* ptr, long long t);
void QValueAxis_DisconnectMinorTickCountChanged(void* ptr);
void QValueAxis_MinorTickCountChanged(void* ptr, int minorTickCount);
void QValueAxis_ConnectRangeChanged(void* ptr, long long t);
void QValueAxis_DisconnectRangeChanged(void* ptr);
void QValueAxis_RangeChanged(void* ptr, double min, double max);
void QValueAxis_SetLabelFormat(void* ptr, struct QtCharts_PackedString format);
void QValueAxis_SetMax(void* ptr, double max);
void QValueAxis_SetMin(void* ptr, double min);
void QValueAxis_SetMinorTickCount(void* ptr, int count);
void QValueAxis_SetRange(void* ptr, double min, double max);
void QValueAxis_SetTickAnchor(void* ptr, double anchor);
void QValueAxis_SetTickCount(void* ptr, int count);
void QValueAxis_SetTickInterval(void* ptr, double insterval);
void QValueAxis_SetTickType(void* ptr, long long ty);
double QValueAxis_TickAnchor(void* ptr);
void QValueAxis_ConnectTickAnchorChanged(void* ptr, long long t);
void QValueAxis_DisconnectTickAnchorChanged(void* ptr);
void QValueAxis_TickAnchorChanged(void* ptr, double anchor);
int QValueAxis_TickCount(void* ptr);
void QValueAxis_ConnectTickCountChanged(void* ptr, long long t);
void QValueAxis_DisconnectTickCountChanged(void* ptr);
void QValueAxis_TickCountChanged(void* ptr, int tickCount);
double QValueAxis_TickInterval(void* ptr);
void QValueAxis_ConnectTickIntervalChanged(void* ptr, long long t);
void QValueAxis_DisconnectTickIntervalChanged(void* ptr);
void QValueAxis_TickIntervalChanged(void* ptr, double interval);
long long QValueAxis_TickType(void* ptr);
void QValueAxis_ConnectTickTypeChanged(void* ptr, long long t);
void QValueAxis_DisconnectTickTypeChanged(void* ptr);
void QValueAxis_TickTypeChanged(void* ptr, long long ty);
long long QValueAxis_Type(void* ptr);
long long QValueAxis_TypeDefault(void* ptr);
void QValueAxis_DestroyQValueAxis(void* ptr);
void QValueAxis_DestroyQValueAxisDefault(void* ptr);
void* QXYLegendMarker_Series(void* ptr);
void* QXYLegendMarker_SeriesDefault(void* ptr);
long long QXYLegendMarker_Type(void* ptr);
long long QXYLegendMarker_TypeDefault(void* ptr);
void QXYLegendMarker_DestroyQXYLegendMarker(void* ptr);
void QXYLegendMarker_DestroyQXYLegendMarkerDefault(void* ptr);
void QXYSeries_Append(void* ptr, double x, double y);
void QXYSeries_Append2(void* ptr, void* point);
void QXYSeries_Append3(void* ptr, void* points);
void* QXYSeries_At(void* ptr, int index);
void* QXYSeries_Brush(void* ptr);
void QXYSeries_Clear(void* ptr);
void QXYSeries_ConnectClicked(void* ptr, long long t);
void QXYSeries_DisconnectClicked(void* ptr);
void QXYSeries_Clicked(void* ptr, void* point);
void* QXYSeries_Color(void* ptr);
void* QXYSeries_ColorDefault(void* ptr);
void QXYSeries_ConnectColorChanged(void* ptr, long long t);
void QXYSeries_DisconnectColorChanged(void* ptr);
void QXYSeries_ColorChanged(void* ptr, void* color);
int QXYSeries_Count(void* ptr);
void QXYSeries_ConnectDoubleClicked(void* ptr, long long t);
void QXYSeries_DisconnectDoubleClicked(void* ptr);
void QXYSeries_DoubleClicked(void* ptr, void* point);
void QXYSeries_ConnectHovered(void* ptr, long long t);
void QXYSeries_DisconnectHovered(void* ptr);
void QXYSeries_Hovered(void* ptr, void* point, char state);
void QXYSeries_Insert(void* ptr, int index, void* point);
void* QXYSeries_Pen(void* ptr);
void QXYSeries_ConnectPenChanged(void* ptr, long long t);
void QXYSeries_DisconnectPenChanged(void* ptr);
void QXYSeries_PenChanged(void* ptr, void* pen);
void QXYSeries_ConnectPointAdded(void* ptr, long long t);
void QXYSeries_DisconnectPointAdded(void* ptr);
void QXYSeries_PointAdded(void* ptr, int index);
char QXYSeries_PointLabelsClipping(void* ptr);
void QXYSeries_ConnectPointLabelsClippingChanged(void* ptr, long long t);
void QXYSeries_DisconnectPointLabelsClippingChanged(void* ptr);
void QXYSeries_PointLabelsClippingChanged(void* ptr, char clipping);
void* QXYSeries_PointLabelsColor(void* ptr);
void QXYSeries_ConnectPointLabelsColorChanged(void* ptr, long long t);
void QXYSeries_DisconnectPointLabelsColorChanged(void* ptr);
void QXYSeries_PointLabelsColorChanged(void* ptr, void* color);
void* QXYSeries_PointLabelsFont(void* ptr);
void QXYSeries_ConnectPointLabelsFontChanged(void* ptr, long long t);
void QXYSeries_DisconnectPointLabelsFontChanged(void* ptr);
void QXYSeries_PointLabelsFontChanged(void* ptr, void* font);
struct QtCharts_PackedString QXYSeries_PointLabelsFormat(void* ptr);
void QXYSeries_ConnectPointLabelsFormatChanged(void* ptr, long long t);
void QXYSeries_DisconnectPointLabelsFormatChanged(void* ptr);
void QXYSeries_PointLabelsFormatChanged(void* ptr, struct QtCharts_PackedString format);
void QXYSeries_ConnectPointLabelsVisibilityChanged(void* ptr, long long t);
void QXYSeries_DisconnectPointLabelsVisibilityChanged(void* ptr);
void QXYSeries_PointLabelsVisibilityChanged(void* ptr, char visible);
char QXYSeries_PointLabelsVisible(void* ptr);
void QXYSeries_ConnectPointRemoved(void* ptr, long long t);
void QXYSeries_DisconnectPointRemoved(void* ptr);
void QXYSeries_PointRemoved(void* ptr, int index);
void QXYSeries_ConnectPointReplaced(void* ptr, long long t);
void QXYSeries_DisconnectPointReplaced(void* ptr);
void QXYSeries_PointReplaced(void* ptr, int index);
struct QtCharts_PackedList QXYSeries_Points(void* ptr);
void QXYSeries_ConnectPointsRemoved(void* ptr, long long t);
void QXYSeries_DisconnectPointsRemoved(void* ptr);
void QXYSeries_PointsRemoved(void* ptr, int index, int count);
void QXYSeries_ConnectPointsReplaced(void* ptr, long long t);
void QXYSeries_DisconnectPointsReplaced(void* ptr);
void QXYSeries_PointsReplaced(void* ptr);
struct QtCharts_PackedList QXYSeries_PointsVector(void* ptr);
char QXYSeries_PointsVisible(void* ptr);
void QXYSeries_ConnectPressed(void* ptr, long long t);
void QXYSeries_DisconnectPressed(void* ptr);
void QXYSeries_Pressed(void* ptr, void* point);
void QXYSeries_ConnectReleased(void* ptr, long long t);
void QXYSeries_DisconnectReleased(void* ptr);
void QXYSeries_Released(void* ptr, void* point);
void QXYSeries_Remove(void* ptr, double x, double y);
void QXYSeries_Remove2(void* ptr, void* point);
void QXYSeries_Remove3(void* ptr, int index);
void QXYSeries_RemovePoints(void* ptr, int index, int count);
void QXYSeries_Replace(void* ptr, double oldX, double oldY, double newX, double newY);
void QXYSeries_Replace2(void* ptr, void* oldPoint, void* newPoint);
void QXYSeries_Replace3(void* ptr, int index, double newX, double newY);
void QXYSeries_Replace4(void* ptr, int index, void* newPoint);
void QXYSeries_Replace5(void* ptr, void* points);
void QXYSeries_Replace6(void* ptr, void* points);
void QXYSeries_SetBrush(void* ptr, void* brush);
void QXYSeries_SetBrushDefault(void* ptr, void* brush);
void QXYSeries_SetColor(void* ptr, void* color);
void QXYSeries_SetColorDefault(void* ptr, void* color);
void QXYSeries_SetPen(void* ptr, void* pen);
void QXYSeries_SetPenDefault(void* ptr, void* pen);
void QXYSeries_SetPointLabelsClipping(void* ptr, char enabled);
void QXYSeries_SetPointLabelsColor(void* ptr, void* color);
void QXYSeries_SetPointLabelsFont(void* ptr, void* font);
void QXYSeries_SetPointLabelsFormat(void* ptr, struct QtCharts_PackedString format);
void QXYSeries_SetPointLabelsVisible(void* ptr, char visible);
void QXYSeries_SetPointsVisible(void* ptr, char visible);
void QXYSeries_DestroyQXYSeries(void* ptr);
void QXYSeries_DestroyQXYSeriesDefault(void* ptr);
void* QXYSeries___append_points_atList3(void* ptr, int i);
void QXYSeries___append_points_setList3(void* ptr, void* i);
void* QXYSeries___append_points_newList3(void* ptr);
void* QXYSeries___points_atList(void* ptr, int i);
void QXYSeries___points_setList(void* ptr, void* i);
void* QXYSeries___points_newList(void* ptr);
void* QXYSeries___pointsVector_atList(void* ptr, int i);
void QXYSeries___pointsVector_setList(void* ptr, void* i);
void* QXYSeries___pointsVector_newList(void* ptr);
void* QXYSeries___replace_points_atList5(void* ptr, int i);
void QXYSeries___replace_points_setList5(void* ptr, void* i);
void* QXYSeries___replace_points_newList5(void* ptr);
void* QXYSeries___replace_points_atList6(void* ptr, int i);
void QXYSeries___replace_points_setList6(void* ptr, void* i);
void* QXYSeries___replace_points_newList6(void* ptr);
long long QXYSeries_Type(void* ptr);
long long QXYSeries_TypeDefault(void* ptr);

#ifdef __cplusplus
}
#endif

#endif