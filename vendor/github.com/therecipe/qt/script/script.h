// +build !minimal

#pragma once

#ifndef GO_QTSCRIPT_H
#define GO_QTSCRIPT_H

#include <stdint.h>

#ifdef __cplusplus
int QScriptClass_QScriptClass_QRegisterMetaType();
int QScriptEngine_QScriptEngine_QRegisterMetaType();
int QScriptEngineAgent_QScriptEngineAgent_QRegisterMetaType();
int QScriptExtensionPlugin_QScriptExtensionPlugin_QRegisterMetaType();
extern "C" {
#endif

struct QtScript_PackedString { char* data; long long len; void* ptr; };
struct QtScript_PackedList { void* data; long long len; };
void* QScriptClass_NewQScriptClass(void* engine);
void* QScriptClass_Engine(void* ptr);
void* QScriptClass_Extension(void* ptr, long long extensi, void* argument);
void* QScriptClass_ExtensionDefault(void* ptr, long long extensi, void* argument);
struct QtScript_PackedString QScriptClass_Name(void* ptr);
struct QtScript_PackedString QScriptClass_NameDefault(void* ptr);
void* QScriptClass_NewIterator(void* ptr, void* object);
void* QScriptClass_NewIteratorDefault(void* ptr, void* object);
void* QScriptClass_Property(void* ptr, void* object, void* name, unsigned int id);
void* QScriptClass_PropertyDefault(void* ptr, void* object, void* name, unsigned int id);
long long QScriptClass_PropertyFlags(void* ptr, void* object, void* name, unsigned int id);
long long QScriptClass_PropertyFlagsDefault(void* ptr, void* object, void* name, unsigned int id);
void* QScriptClass_Prototype(void* ptr);
void* QScriptClass_PrototypeDefault(void* ptr);
long long QScriptClass_QueryProperty(void* ptr, void* object, void* name, long long flags, unsigned int id);
long long QScriptClass_QueryPropertyDefault(void* ptr, void* object, void* name, long long flags, unsigned int id);
void QScriptClass_SetProperty(void* ptr, void* object, void* name, unsigned int id, void* value);
void QScriptClass_SetPropertyDefault(void* ptr, void* object, void* name, unsigned int id, void* value);
char QScriptClass_SupportsExtension(void* ptr, long long extensi);
char QScriptClass_SupportsExtensionDefault(void* ptr, long long extensi);
void QScriptClass_DestroyQScriptClass(void* ptr);
void QScriptClass_DestroyQScriptClassDefault(void* ptr);
void* QScriptContext_ActivationObject(void* ptr);
void* QScriptContext_Argument(void* ptr, int index);
int QScriptContext_ArgumentCount(void* ptr);
void* QScriptContext_ArgumentsObject(void* ptr);
struct QtScript_PackedString QScriptContext_Backtrace(void* ptr);
void* QScriptContext_Callee(void* ptr);
void* QScriptContext_Engine(void* ptr);
char QScriptContext_IsCalledAsConstructor(void* ptr);
void* QScriptContext_ParentContext(void* ptr);
void QScriptContext_SetActivationObject(void* ptr, void* activation);
void QScriptContext_SetThisObject(void* ptr, void* thisObject);
long long QScriptContext_State(void* ptr);
void* QScriptContext_ThisObject(void* ptr);
void* QScriptContext_ThrowError(void* ptr, long long error, struct QtScript_PackedString text);
void* QScriptContext_ThrowError2(void* ptr, struct QtScript_PackedString text);
void* QScriptContext_ThrowValue(void* ptr, void* value);
struct QtScript_PackedString QScriptContext_ToString(void* ptr);
void QScriptContext_DestroyQScriptContext(void* ptr);
void* QScriptContextInfo_NewQScriptContextInfo(void* context);
void* QScriptContextInfo_NewQScriptContextInfo2(void* other);
void* QScriptContextInfo_NewQScriptContextInfo3();
struct QtScript_PackedString QScriptContextInfo_FileName(void* ptr);
int QScriptContextInfo_FunctionEndLineNumber(void* ptr);
int QScriptContextInfo_FunctionMetaIndex(void* ptr);
struct QtScript_PackedString QScriptContextInfo_FunctionName(void* ptr);
struct QtScript_PackedString QScriptContextInfo_FunctionParameterNames(void* ptr);
int QScriptContextInfo_FunctionStartLineNumber(void* ptr);
long long QScriptContextInfo_FunctionType(void* ptr);
char QScriptContextInfo_IsNull(void* ptr);
int QScriptContextInfo_LineNumber(void* ptr);
long long QScriptContextInfo_ScriptId(void* ptr);
void QScriptContextInfo_DestroyQScriptContextInfo(void* ptr);
void* QScriptEngine_NewQScriptEngine();
void* QScriptEngine_NewQScriptEngine2(void* parent);
void QScriptEngine_AbortEvaluation(void* ptr, void* result);
void* QScriptEngine_Agent(void* ptr);
struct QtScript_PackedString QScriptEngine_AvailableExtensions(void* ptr);
void* QScriptEngine_QScriptEngine_CheckSyntax(struct QtScript_PackedString program);
void QScriptEngine_ClearExceptions(void* ptr);
void QScriptEngine_CollectGarbage(void* ptr);
void* QScriptEngine_CurrentContext(void* ptr);
void* QScriptEngine_DefaultPrototype(void* ptr, int metaTypeId);
void* QScriptEngine_Evaluate(void* ptr, struct QtScript_PackedString program, struct QtScript_PackedString fileName, int lineNumber);
void* QScriptEngine_Evaluate2(void* ptr, void* program);
void* QScriptEngine_GlobalObject(void* ptr);
char QScriptEngine_HasUncaughtException(void* ptr);
void* QScriptEngine_ImportExtension(void* ptr, struct QtScript_PackedString extensi);
struct QtScript_PackedString QScriptEngine_ImportedExtensions(void* ptr);
void QScriptEngine_InstallTranslatorFunctions(void* ptr, void* object);
char QScriptEngine_IsEvaluating(void* ptr);
void* QScriptEngine_NewArray(void* ptr, unsigned int length);
void* QScriptEngine_NewDate2(void* ptr, void* value);
void* QScriptEngine_NewObject(void* ptr);
void* QScriptEngine_NewObject2(void* ptr, void* scriptClass, void* data);
void* QScriptEngine_NewQMetaObject(void* ptr, void* metaObject, void* ctor);
void* QScriptEngine_NewQObject(void* ptr, void* object, long long ownership, long long options);
void* QScriptEngine_NewQObject2(void* ptr, void* scriptObject, void* qtObject, long long ownership, long long options);
void* QScriptEngine_NewRegExp(void* ptr, void* regexp);
void* QScriptEngine_NewRegExp2(void* ptr, struct QtScript_PackedString pattern, struct QtScript_PackedString flags);
void* QScriptEngine_NewVariant(void* ptr, void* value);
void* QScriptEngine_NewVariant2(void* ptr, void* object, void* value);
void* QScriptEngine_NullValue(void* ptr);
void QScriptEngine_PopContext(void* ptr);
int QScriptEngine_ProcessEventsInterval(void* ptr);
void* QScriptEngine_PushContext(void* ptr);
void QScriptEngine_ReportAdditionalMemoryCost(void* ptr, int size);
void QScriptEngine_SetAgent(void* ptr, void* agent);
void QScriptEngine_SetDefaultPrototype(void* ptr, int metaTypeId, void* prototype);
void QScriptEngine_SetGlobalObject(void* ptr, void* object);
void QScriptEngine_SetProcessEventsInterval(void* ptr, int interval);
void QScriptEngine_ConnectSignalHandlerException(void* ptr, long long t);
void QScriptEngine_DisconnectSignalHandlerException(void* ptr);
void QScriptEngine_SignalHandlerException(void* ptr, void* exception);
void* QScriptEngine_ToObject(void* ptr, void* value);
void* QScriptEngine_ToStringHandle(void* ptr, struct QtScript_PackedString str);
void* QScriptEngine_UncaughtException(void* ptr);
struct QtScript_PackedString QScriptEngine_UncaughtExceptionBacktrace(void* ptr);
int QScriptEngine_UncaughtExceptionLineNumber(void* ptr);
void* QScriptEngine_UndefinedValue(void* ptr);
void QScriptEngine_DestroyQScriptEngine(void* ptr);
void QScriptEngine_DestroyQScriptEngineDefault(void* ptr);
void* QScriptEngine___children_atList(void* ptr, int i);
void QScriptEngine___children_setList(void* ptr, void* i);
void* QScriptEngine___children_newList(void* ptr);
void* QScriptEngine___dynamicPropertyNames_atList(void* ptr, int i);
void QScriptEngine___dynamicPropertyNames_setList(void* ptr, void* i);
void* QScriptEngine___dynamicPropertyNames_newList(void* ptr);
void* QScriptEngine___findChildren_atList(void* ptr, int i);
void QScriptEngine___findChildren_setList(void* ptr, void* i);
void* QScriptEngine___findChildren_newList(void* ptr);
void* QScriptEngine___findChildren_atList3(void* ptr, int i);
void QScriptEngine___findChildren_setList3(void* ptr, void* i);
void* QScriptEngine___findChildren_newList3(void* ptr);
void QScriptEngine_ChildEventDefault(void* ptr, void* event);
void QScriptEngine_ConnectNotifyDefault(void* ptr, void* sign);
void QScriptEngine_CustomEventDefault(void* ptr, void* event);
void QScriptEngine_DeleteLaterDefault(void* ptr);
void QScriptEngine_DisconnectNotifyDefault(void* ptr, void* sign);
char QScriptEngine_EventDefault(void* ptr, void* e);
char QScriptEngine_EventFilterDefault(void* ptr, void* watched, void* event);
void* QScriptEngine_MetaObjectDefault(void* ptr);
void QScriptEngine_TimerEventDefault(void* ptr, void* event);
void* QScriptEngineAgent_NewQScriptEngineAgent(void* engine);
void QScriptEngineAgent_ContextPop(void* ptr);
void QScriptEngineAgent_ContextPopDefault(void* ptr);
void QScriptEngineAgent_ContextPush(void* ptr);
void QScriptEngineAgent_ContextPushDefault(void* ptr);
void* QScriptEngineAgent_Engine(void* ptr);
void QScriptEngineAgent_ExceptionCatch(void* ptr, long long scriptId, void* exception);
void QScriptEngineAgent_ExceptionCatchDefault(void* ptr, long long scriptId, void* exception);
void QScriptEngineAgent_ExceptionThrow(void* ptr, long long scriptId, void* exception, char hasHandler);
void QScriptEngineAgent_ExceptionThrowDefault(void* ptr, long long scriptId, void* exception, char hasHandler);
void* QScriptEngineAgent_Extension(void* ptr, long long extensi, void* argument);
void* QScriptEngineAgent_ExtensionDefault(void* ptr, long long extensi, void* argument);
void QScriptEngineAgent_FunctionEntry(void* ptr, long long scriptId);
void QScriptEngineAgent_FunctionEntryDefault(void* ptr, long long scriptId);
void QScriptEngineAgent_FunctionExit(void* ptr, long long scriptId, void* returnValue);
void QScriptEngineAgent_FunctionExitDefault(void* ptr, long long scriptId, void* returnValue);
void QScriptEngineAgent_PositionChange(void* ptr, long long scriptId, int lineNumber, int columnNumber);
void QScriptEngineAgent_PositionChangeDefault(void* ptr, long long scriptId, int lineNumber, int columnNumber);
void QScriptEngineAgent_ScriptLoad(void* ptr, long long id, struct QtScript_PackedString program, struct QtScript_PackedString fileName, int baseLineNumber);
void QScriptEngineAgent_ScriptLoadDefault(void* ptr, long long id, struct QtScript_PackedString program, struct QtScript_PackedString fileName, int baseLineNumber);
void QScriptEngineAgent_ScriptUnload(void* ptr, long long id);
void QScriptEngineAgent_ScriptUnloadDefault(void* ptr, long long id);
char QScriptEngineAgent_SupportsExtension(void* ptr, long long extensi);
char QScriptEngineAgent_SupportsExtensionDefault(void* ptr, long long extensi);
void QScriptEngineAgent_DestroyQScriptEngineAgent(void* ptr);
void QScriptEngineAgent_DestroyQScriptEngineAgentDefault(void* ptr);
void* QScriptExtensionPlugin_NewQScriptExtensionPlugin(void* parent);
void QScriptExtensionPlugin_Initialize(void* ptr, struct QtScript_PackedString key, void* engine);
struct QtScript_PackedString QScriptExtensionPlugin_Keys(void* ptr);
void* QScriptExtensionPlugin_SetupPackage(void* ptr, struct QtScript_PackedString key, void* engine);
void QScriptExtensionPlugin_DestroyQScriptExtensionPlugin(void* ptr);
void QScriptExtensionPlugin_DestroyQScriptExtensionPluginDefault(void* ptr);
void* QScriptExtensionPlugin___children_atList(void* ptr, int i);
void QScriptExtensionPlugin___children_setList(void* ptr, void* i);
void* QScriptExtensionPlugin___children_newList(void* ptr);
void* QScriptExtensionPlugin___dynamicPropertyNames_atList(void* ptr, int i);
void QScriptExtensionPlugin___dynamicPropertyNames_setList(void* ptr, void* i);
void* QScriptExtensionPlugin___dynamicPropertyNames_newList(void* ptr);
void* QScriptExtensionPlugin___findChildren_atList(void* ptr, int i);
void QScriptExtensionPlugin___findChildren_setList(void* ptr, void* i);
void* QScriptExtensionPlugin___findChildren_newList(void* ptr);
void* QScriptExtensionPlugin___findChildren_atList3(void* ptr, int i);
void QScriptExtensionPlugin___findChildren_setList3(void* ptr, void* i);
void* QScriptExtensionPlugin___findChildren_newList3(void* ptr);
void QScriptExtensionPlugin_ChildEventDefault(void* ptr, void* event);
void QScriptExtensionPlugin_ConnectNotifyDefault(void* ptr, void* sign);
void QScriptExtensionPlugin_CustomEventDefault(void* ptr, void* event);
void QScriptExtensionPlugin_DeleteLaterDefault(void* ptr);
void QScriptExtensionPlugin_DisconnectNotifyDefault(void* ptr, void* sign);
char QScriptExtensionPlugin_EventDefault(void* ptr, void* e);
char QScriptExtensionPlugin_EventFilterDefault(void* ptr, void* watched, void* event);
void* QScriptExtensionPlugin_MetaObjectDefault(void* ptr);
void QScriptExtensionPlugin_TimerEventDefault(void* ptr, void* event);
void* QScriptProgram_NewQScriptProgram();
void* QScriptProgram_NewQScriptProgram2(struct QtScript_PackedString sourceCode, struct QtScript_PackedString fileName, int firstLineNumber);
void* QScriptProgram_NewQScriptProgram3(void* other);
struct QtScript_PackedString QScriptProgram_FileName(void* ptr);
int QScriptProgram_FirstLineNumber(void* ptr);
char QScriptProgram_IsNull(void* ptr);
struct QtScript_PackedString QScriptProgram_SourceCode(void* ptr);
void QScriptProgram_DestroyQScriptProgram(void* ptr);
void* QScriptString_NewQScriptString();
void* QScriptString_NewQScriptString2(void* other);
char QScriptString_IsValid(void* ptr);
unsigned int QScriptString_ToArrayIndex(void* ptr, char* ok);
struct QtScript_PackedString QScriptString_ToString(void* ptr);
void QScriptString_DestroyQScriptString(void* ptr);
void* QScriptSyntaxCheckResult_NewQScriptSyntaxCheckResult(void* other);
int QScriptSyntaxCheckResult_ErrorColumnNumber(void* ptr);
int QScriptSyntaxCheckResult_ErrorLineNumber(void* ptr);
struct QtScript_PackedString QScriptSyntaxCheckResult_ErrorMessage(void* ptr);
long long QScriptSyntaxCheckResult_State(void* ptr);
void QScriptSyntaxCheckResult_DestroyQScriptSyntaxCheckResult(void* ptr);
void* QScriptValue_NewQScriptValue();
void* QScriptValue_NewQScriptValue2(void* other);
void* QScriptValue_NewQScriptValue10(long long value);
void* QScriptValue_NewQScriptValue11(char value);
void* QScriptValue_NewQScriptValue12(int value);
void* QScriptValue_NewQScriptValue13(unsigned int value);
void* QScriptValue_NewQScriptValue15(struct QtScript_PackedString value);
void* QScriptValue_NewQScriptValue16(void* value);
void* QScriptValue_NewQScriptValue17(char* value);
void* QScriptValue_Call2(void* ptr, void* thisObject, void* arguments);
void* QScriptValue_Construct2(void* ptr, void* arguments);
void* QScriptValue_Data(void* ptr);
void* QScriptValue_Engine(void* ptr);
char QScriptValue_Equals(void* ptr, void* other);
char QScriptValue_InstanceOf(void* ptr, void* other);
char QScriptValue_IsArray(void* ptr);
char QScriptValue_IsBool(void* ptr);
char QScriptValue_IsDate(void* ptr);
char QScriptValue_IsError(void* ptr);
char QScriptValue_IsFunction(void* ptr);
char QScriptValue_IsNull(void* ptr);
char QScriptValue_IsNumber(void* ptr);
char QScriptValue_IsObject(void* ptr);
char QScriptValue_IsQMetaObject(void* ptr);
char QScriptValue_IsQObject(void* ptr);
char QScriptValue_IsRegExp(void* ptr);
char QScriptValue_IsString(void* ptr);
char QScriptValue_IsUndefined(void* ptr);
char QScriptValue_IsValid(void* ptr);
char QScriptValue_IsVariant(void* ptr);
char QScriptValue_LessThan(void* ptr, void* other);
void* QScriptValue_Property(void* ptr, struct QtScript_PackedString name, long long mode);
void* QScriptValue_Property2(void* ptr, unsigned int arrayIndex, long long mode);
void* QScriptValue_Property3(void* ptr, void* name, long long mode);
long long QScriptValue_PropertyFlags(void* ptr, struct QtScript_PackedString name, long long mode);
long long QScriptValue_PropertyFlags2(void* ptr, void* name, long long mode);
void* QScriptValue_Prototype(void* ptr);
void* QScriptValue_ScriptClass(void* ptr);
void QScriptValue_SetData(void* ptr, void* data);
void QScriptValue_SetProperty(void* ptr, struct QtScript_PackedString name, void* value, long long flags);
void QScriptValue_SetProperty2(void* ptr, unsigned int arrayIndex, void* value, long long flags);
void QScriptValue_SetProperty3(void* ptr, void* name, void* value, long long flags);
void QScriptValue_SetPrototype(void* ptr, void* prototype);
void QScriptValue_SetScriptClass(void* ptr, void* scriptClass);
char QScriptValue_StrictlyEquals(void* ptr, void* other);
char QScriptValue_ToBool(void* ptr);
void* QScriptValue_ToDateTime(void* ptr);
int QScriptValue_ToInt32(void* ptr);
void* QScriptValue_ToQMetaObject(void* ptr);
void* QScriptValue_ToQObject(void* ptr);
void* QScriptValue_ToRegExp(void* ptr);
struct QtScript_PackedString QScriptValue_ToString(void* ptr);
unsigned short QScriptValue_ToUInt16(void* ptr);
unsigned int QScriptValue_ToUInt32(void* ptr);
void* QScriptValue_ToVariant(void* ptr);
void QScriptValue_DestroyQScriptValue(void* ptr);
void* QScriptable_Argument(void* ptr, int index);
int QScriptable_ArgumentCount(void* ptr);
void* QScriptable_Context(void* ptr);
void* QScriptable_Engine(void* ptr);
void* QScriptable_ThisObject(void* ptr);

#ifdef __cplusplus
}
#endif

#endif