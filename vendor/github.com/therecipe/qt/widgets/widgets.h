// +build !minimal

#pragma once

#ifndef GO_QTWIDGETS_H
#define GO_QTWIDGETS_H

#include <stdint.h>

#ifdef __cplusplus
int QAbstractButton_QAbstractButton_QRegisterMetaType();
int QAbstractGraphicsShapeItem_QAbstractGraphicsShapeItem_QRegisterMetaType();
int QAbstractItemDelegate_QAbstractItemDelegate_QRegisterMetaType();
int QAbstractItemView_QAbstractItemView_QRegisterMetaType();
int QAbstractScrollArea_QAbstractScrollArea_QRegisterMetaType();
int QAbstractSlider_QAbstractSlider_QRegisterMetaType();
int QAbstractSpinBox_QAbstractSpinBox_QRegisterMetaType();
int QAccessibleWidget_QAccessibleWidget_QRegisterMetaType();
int QAction_QAction_QRegisterMetaType();
int QActionGroup_QActionGroup_QRegisterMetaType();
int QApplication_QApplication_QRegisterMetaType();
int QBoxLayout_QBoxLayout_QRegisterMetaType();
int QButtonGroup_QButtonGroup_QRegisterMetaType();
int QCalendarWidget_QCalendarWidget_QRegisterMetaType();
int QCheckBox_QCheckBox_QRegisterMetaType();
int QColorDialog_QColorDialog_QRegisterMetaType();
int QColumnView_QColumnView_QRegisterMetaType();
int QComboBox_QComboBox_QRegisterMetaType();
int QCommandLinkButton_QCommandLinkButton_QRegisterMetaType();
int QCommonStyle_QCommonStyle_QRegisterMetaType();
int QCompleter_QCompleter_QRegisterMetaType();
int QDataWidgetMapper_QDataWidgetMapper_QRegisterMetaType();
int QDateEdit_QDateEdit_QRegisterMetaType();
int QDateTimeEdit_QDateTimeEdit_QRegisterMetaType();
int QDesktopWidget_QDesktopWidget_QRegisterMetaType();
int QDial_QDial_QRegisterMetaType();
int QDialog_QDialog_QRegisterMetaType();
int QDialogButtonBox_QDialogButtonBox_QRegisterMetaType();
int QDirModel_QDirModel_QRegisterMetaType();
int QDockWidget_QDockWidget_QRegisterMetaType();
int QDoubleSpinBox_QDoubleSpinBox_QRegisterMetaType();
int QErrorMessage_QErrorMessage_QRegisterMetaType();
int QFileDialog_QFileDialog_QRegisterMetaType();
int QFileIconProvider_QFileIconProvider_QRegisterMetaType();
int QFileSystemModel_QFileSystemModel_QRegisterMetaType();
int QFocusFrame_QFocusFrame_QRegisterMetaType();
int QFontComboBox_QFontComboBox_QRegisterMetaType();
int QFontDialog_QFontDialog_QRegisterMetaType();
int QFormLayout_QFormLayout_QRegisterMetaType();
int QFrame_QFrame_QRegisterMetaType();
int QGesture_QGesture_QRegisterMetaType();
int QGestureEvent_QGestureEvent_QRegisterMetaType();
int QGestureRecognizer_QGestureRecognizer_QRegisterMetaType();
int QGraphicsAnchor_QGraphicsAnchor_QRegisterMetaType();
int QGraphicsAnchorLayout_QGraphicsAnchorLayout_QRegisterMetaType();
int QGraphicsBlurEffect_QGraphicsBlurEffect_QRegisterMetaType();
int QGraphicsColorizeEffect_QGraphicsColorizeEffect_QRegisterMetaType();
int QGraphicsDropShadowEffect_QGraphicsDropShadowEffect_QRegisterMetaType();
int QGraphicsEffect_QGraphicsEffect_QRegisterMetaType();
int QGraphicsEllipseItem_QGraphicsEllipseItem_QRegisterMetaType();
int QGraphicsGridLayout_QGraphicsGridLayout_QRegisterMetaType();
int QGraphicsItem_QGraphicsItem_QRegisterMetaType();
int QGraphicsItemAnimation_QGraphicsItemAnimation_QRegisterMetaType();
int QGraphicsItemGroup_QGraphicsItemGroup_QRegisterMetaType();
int QGraphicsLayout_QGraphicsLayout_QRegisterMetaType();
int QGraphicsLayoutItem_QGraphicsLayoutItem_QRegisterMetaType();
int QGraphicsLineItem_QGraphicsLineItem_QRegisterMetaType();
int QGraphicsLinearLayout_QGraphicsLinearLayout_QRegisterMetaType();
int QGraphicsObject_QGraphicsObject_QRegisterMetaType();
int QGraphicsOpacityEffect_QGraphicsOpacityEffect_QRegisterMetaType();
int QGraphicsPathItem_QGraphicsPathItem_QRegisterMetaType();
int QGraphicsPixmapItem_QGraphicsPixmapItem_QRegisterMetaType();
int QGraphicsPolygonItem_QGraphicsPolygonItem_QRegisterMetaType();
int QGraphicsProxyWidget_QGraphicsProxyWidget_QRegisterMetaType();
int QGraphicsRectItem_QGraphicsRectItem_QRegisterMetaType();
int QGraphicsRotation_QGraphicsRotation_QRegisterMetaType();
int QGraphicsScale_QGraphicsScale_QRegisterMetaType();
int QGraphicsScene_QGraphicsScene_QRegisterMetaType();
int QGraphicsSceneContextMenuEvent_QGraphicsSceneContextMenuEvent_QRegisterMetaType();
int QGraphicsSceneDragDropEvent_QGraphicsSceneDragDropEvent_QRegisterMetaType();
int QGraphicsSceneEvent_QGraphicsSceneEvent_QRegisterMetaType();
int QGraphicsSceneHelpEvent_QGraphicsSceneHelpEvent_QRegisterMetaType();
int QGraphicsSceneHoverEvent_QGraphicsSceneHoverEvent_QRegisterMetaType();
int QGraphicsSceneMouseEvent_QGraphicsSceneMouseEvent_QRegisterMetaType();
int QGraphicsSceneMoveEvent_QGraphicsSceneMoveEvent_QRegisterMetaType();
int QGraphicsSceneResizeEvent_QGraphicsSceneResizeEvent_QRegisterMetaType();
int QGraphicsSceneWheelEvent_QGraphicsSceneWheelEvent_QRegisterMetaType();
int QGraphicsSimpleTextItem_QGraphicsSimpleTextItem_QRegisterMetaType();
int QGraphicsTextItem_QGraphicsTextItem_QRegisterMetaType();
int QGraphicsTransform_QGraphicsTransform_QRegisterMetaType();
int QGraphicsView_QGraphicsView_QRegisterMetaType();
int QGraphicsWidget_QGraphicsWidget_QRegisterMetaType();
int QGridLayout_QGridLayout_QRegisterMetaType();
int QGroupBox_QGroupBox_QRegisterMetaType();
int QHBoxLayout_QHBoxLayout_QRegisterMetaType();
int QHeaderView_QHeaderView_QRegisterMetaType();
int QInputDialog_QInputDialog_QRegisterMetaType();
int QItemDelegate_QItemDelegate_QRegisterMetaType();
int QItemEditorCreatorBase_QItemEditorCreatorBase_QRegisterMetaType();
int QItemEditorFactory_QItemEditorFactory_QRegisterMetaType();
int QKeyEventTransition_QKeyEventTransition_QRegisterMetaType();
int QKeySequenceEdit_QKeySequenceEdit_QRegisterMetaType();
int QLCDNumber_QLCDNumber_QRegisterMetaType();
int QLabel_QLabel_QRegisterMetaType();
int QLayout_QLayout_QRegisterMetaType();
int QLayoutItem_QLayoutItem_QRegisterMetaType();
int QLineEdit_QLineEdit_QRegisterMetaType();
int QListView_QListView_QRegisterMetaType();
int QListWidget_QListWidget_QRegisterMetaType();
int QListWidgetItem_QListWidgetItem_QRegisterMetaType();
int QMacCocoaViewContainer_QMacCocoaViewContainer_QRegisterMetaType();
int QMacNativeWidget_QMacNativeWidget_QRegisterMetaType();
int QMainWindow_QMainWindow_QRegisterMetaType();
int QMdiArea_QMdiArea_QRegisterMetaType();
int QMdiSubWindow_QMdiSubWindow_QRegisterMetaType();
int QMenu_QMenu_QRegisterMetaType();
int QMenuBar_QMenuBar_QRegisterMetaType();
int QMessageBox_QMessageBox_QRegisterMetaType();
int QMouseEventTransition_QMouseEventTransition_QRegisterMetaType();
int QOpenGLWidget_QOpenGLWidget_QRegisterMetaType();
int QPanGesture_QPanGesture_QRegisterMetaType();
int QPinchGesture_QPinchGesture_QRegisterMetaType();
int QPlainTextDocumentLayout_QPlainTextDocumentLayout_QRegisterMetaType();
int QPlainTextEdit_QPlainTextEdit_QRegisterMetaType();
int QProgressBar_QProgressBar_QRegisterMetaType();
int QProgressDialog_QProgressDialog_QRegisterMetaType();
int QProxyStyle_QProxyStyle_QRegisterMetaType();
int QPushButton_QPushButton_QRegisterMetaType();
int QRadioButton_QRadioButton_QRegisterMetaType();
int QRubberBand_QRubberBand_QRegisterMetaType();
int QScrollArea_QScrollArea_QRegisterMetaType();
int QScrollBar_QScrollBar_QRegisterMetaType();
int QScroller_QScroller_QRegisterMetaType();
int QScrollerProperties_QScrollerProperties_QRegisterMetaType();
int QShortcut_QShortcut_QRegisterMetaType();
int QSizeGrip_QSizeGrip_QRegisterMetaType();
int QSlider_QSlider_QRegisterMetaType();
int QSpacerItem_QSpacerItem_QRegisterMetaType();
int QSpinBox_QSpinBox_QRegisterMetaType();
int QSplashScreen_QSplashScreen_QRegisterMetaType();
int QSplitter_QSplitter_QRegisterMetaType();
int QSplitterHandle_QSplitterHandle_QRegisterMetaType();
int QStackedLayout_QStackedLayout_QRegisterMetaType();
int QStackedWidget_QStackedWidget_QRegisterMetaType();
int QStatusBar_QStatusBar_QRegisterMetaType();
int QStyle_QStyle_QRegisterMetaType();
int QStylePlugin_QStylePlugin_QRegisterMetaType();
int QStyledItemDelegate_QStyledItemDelegate_QRegisterMetaType();
int QSwipeGesture_QSwipeGesture_QRegisterMetaType();
int QSystemTrayIcon_QSystemTrayIcon_QRegisterMetaType();
int QTabBar_QTabBar_QRegisterMetaType();
int QTabWidget_QTabWidget_QRegisterMetaType();
int QTableView_QTableView_QRegisterMetaType();
int QTableWidget_QTableWidget_QRegisterMetaType();
int QTableWidgetItem_QTableWidgetItem_QRegisterMetaType();
int QTapAndHoldGesture_QTapAndHoldGesture_QRegisterMetaType();
int QTapGesture_QTapGesture_QRegisterMetaType();
int QTextBrowser_QTextBrowser_QRegisterMetaType();
int QTextEdit_QTextEdit_QRegisterMetaType();
int QTimeEdit_QTimeEdit_QRegisterMetaType();
int QToolBar_QToolBar_QRegisterMetaType();
int QToolBox_QToolBox_QRegisterMetaType();
int QToolButton_QToolButton_QRegisterMetaType();
int QTreeView_QTreeView_QRegisterMetaType();
int QTreeWidget_QTreeWidget_QRegisterMetaType();
int QTreeWidgetItem_QTreeWidgetItem_QRegisterMetaType();
int QUndoCommand_QUndoCommand_QRegisterMetaType();
int QUndoGroup_QUndoGroup_QRegisterMetaType();
int QUndoStack_QUndoStack_QRegisterMetaType();
int QUndoView_QUndoView_QRegisterMetaType();
int QVBoxLayout_QVBoxLayout_QRegisterMetaType();
int QWidget_QWidget_QRegisterMetaType();
int QWidgetAction_QWidgetAction_QRegisterMetaType();
int QWidgetItem_QWidgetItem_QRegisterMetaType();
int QWizard_QWizard_QRegisterMetaType();
int QWizardPage_QWizardPage_QRegisterMetaType();
extern "C" {
#endif

struct QtWidgets_PackedString { char* data; long long len; void* ptr; };
struct QtWidgets_PackedList { void* data; long long len; };
void* QAbstractButton_NewQAbstractButton(void* parent);
void QAbstractButton_AnimateClick(void* ptr, int msec);
void QAbstractButton_AnimateClickDefault(void* ptr, int msec);
char QAbstractButton_AutoExclusive(void* ptr);
char QAbstractButton_AutoRepeat(void* ptr);
int QAbstractButton_AutoRepeatDelay(void* ptr);
int QAbstractButton_AutoRepeatInterval(void* ptr);
void QAbstractButton_CheckStateSet(void* ptr);
void QAbstractButton_CheckStateSetDefault(void* ptr);
void QAbstractButton_Click(void* ptr);
void QAbstractButton_ClickDefault(void* ptr);
void QAbstractButton_ConnectClicked(void* ptr, long long t);
void QAbstractButton_DisconnectClicked(void* ptr);
void QAbstractButton_Clicked(void* ptr, char checked);
void* QAbstractButton_Group(void* ptr);
char QAbstractButton_HitButton(void* ptr, void* pos);
char QAbstractButton_HitButtonDefault(void* ptr, void* pos);
void* QAbstractButton_Icon(void* ptr);
void* QAbstractButton_IconSize(void* ptr);
char QAbstractButton_IsCheckable(void* ptr);
char QAbstractButton_IsChecked(void* ptr);
char QAbstractButton_IsDown(void* ptr);
void QAbstractButton_NextCheckState(void* ptr);
void QAbstractButton_NextCheckStateDefault(void* ptr);
void QAbstractButton_PaintEvent(void* ptr, void* e);
void QAbstractButton_ConnectPressed(void* ptr, long long t);
void QAbstractButton_DisconnectPressed(void* ptr);
void QAbstractButton_Pressed(void* ptr);
void QAbstractButton_ConnectReleased(void* ptr, long long t);
void QAbstractButton_DisconnectReleased(void* ptr);
void QAbstractButton_Released(void* ptr);
void QAbstractButton_SetAutoExclusive(void* ptr, char vbo);
void QAbstractButton_SetAutoRepeat(void* ptr, char vbo);
void QAbstractButton_SetAutoRepeatDelay(void* ptr, int vin);
void QAbstractButton_SetAutoRepeatInterval(void* ptr, int vin);
void QAbstractButton_SetCheckable(void* ptr, char vbo);
void QAbstractButton_SetChecked(void* ptr, char vbo);
void QAbstractButton_SetCheckedDefault(void* ptr, char vbo);
void QAbstractButton_SetDown(void* ptr, char vbo);
void QAbstractButton_SetIcon(void* ptr, void* icon);
void QAbstractButton_SetIconSize(void* ptr, void* size);
void QAbstractButton_SetIconSizeDefault(void* ptr, void* size);
void QAbstractButton_SetShortcut(void* ptr, void* key);
void QAbstractButton_SetText(void* ptr, struct QtWidgets_PackedString text);
void* QAbstractButton_Shortcut(void* ptr);
struct QtWidgets_PackedString QAbstractButton_Text(void* ptr);
void QAbstractButton_Toggle(void* ptr);
void QAbstractButton_ToggleDefault(void* ptr);
void QAbstractButton_ConnectToggled(void* ptr, long long t);
void QAbstractButton_DisconnectToggled(void* ptr);
void QAbstractButton_Toggled(void* ptr, char checked);
void QAbstractButton_DestroyQAbstractButton(void* ptr);
void QAbstractButton_DestroyQAbstractButtonDefault(void* ptr);
void* QAbstractGraphicsShapeItem_NewQAbstractGraphicsShapeItem(void* parent);
void* QAbstractGraphicsShapeItem_Brush(void* ptr);
void* QAbstractGraphicsShapeItem_Pen(void* ptr);
void QAbstractGraphicsShapeItem_SetBrush(void* ptr, void* brush);
void QAbstractGraphicsShapeItem_SetPen(void* ptr, void* pen);
void QAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItem(void* ptr);
void QAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItemDefault(void* ptr);
void* QAbstractGraphicsShapeItem_BoundingRect(void* ptr);
void* QAbstractGraphicsShapeItem_BoundingRectDefault(void* ptr);
void QAbstractGraphicsShapeItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QAbstractGraphicsShapeItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QAbstractItemDelegate_NewQAbstractItemDelegate(void* parent);
void QAbstractItemDelegate_ConnectCloseEditor(void* ptr, long long t);
void QAbstractItemDelegate_DisconnectCloseEditor(void* ptr);
void QAbstractItemDelegate_CloseEditor(void* ptr, void* editor, long long hint);
void QAbstractItemDelegate_ConnectCommitData(void* ptr, long long t);
void QAbstractItemDelegate_DisconnectCommitData(void* ptr);
void QAbstractItemDelegate_CommitData(void* ptr, void* editor);
void* QAbstractItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QAbstractItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
void QAbstractItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
char QAbstractItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
char QAbstractItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
char QAbstractItemDelegate_HelpEvent(void* ptr, void* event, void* view, void* option, void* index);
char QAbstractItemDelegate_HelpEventDefault(void* ptr, void* event, void* view, void* option, void* index);
void QAbstractItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QAbstractItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QAbstractItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QAbstractItemDelegate_SizeHint(void* ptr, void* option, void* index);
void QAbstractItemDelegate_ConnectSizeHintChanged(void* ptr, long long t);
void QAbstractItemDelegate_DisconnectSizeHintChanged(void* ptr);
void QAbstractItemDelegate_SizeHintChanged(void* ptr, void* index);
void QAbstractItemDelegate_UpdateEditorGeometry(void* ptr, void* editor, void* option, void* index);
void QAbstractItemDelegate_UpdateEditorGeometryDefault(void* ptr, void* editor, void* option, void* index);
void QAbstractItemDelegate_DestroyQAbstractItemDelegate(void* ptr);
void QAbstractItemDelegate_DestroyQAbstractItemDelegateDefault(void* ptr);
int QAbstractItemDelegate___paintingRoles_atList(void* ptr, int i);
void QAbstractItemDelegate___paintingRoles_setList(void* ptr, int i);
void* QAbstractItemDelegate___paintingRoles_newList(void* ptr);
void* QAbstractItemDelegate___children_atList(void* ptr, int i);
void QAbstractItemDelegate___children_setList(void* ptr, void* i);
void* QAbstractItemDelegate___children_newList(void* ptr);
void* QAbstractItemDelegate___dynamicPropertyNames_atList(void* ptr, int i);
void QAbstractItemDelegate___dynamicPropertyNames_setList(void* ptr, void* i);
void* QAbstractItemDelegate___dynamicPropertyNames_newList(void* ptr);
void* QAbstractItemDelegate___findChildren_atList(void* ptr, int i);
void QAbstractItemDelegate___findChildren_setList(void* ptr, void* i);
void* QAbstractItemDelegate___findChildren_newList(void* ptr);
void* QAbstractItemDelegate___findChildren_atList3(void* ptr, int i);
void QAbstractItemDelegate___findChildren_setList3(void* ptr, void* i);
void* QAbstractItemDelegate___findChildren_newList3(void* ptr);
void QAbstractItemDelegate_ChildEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractItemDelegate_CustomEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_DeleteLaterDefault(void* ptr);
void QAbstractItemDelegate_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractItemDelegate_EventDefault(void* ptr, void* e);
char QAbstractItemDelegate_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractItemDelegate_MetaObjectDefault(void* ptr);
void QAbstractItemDelegate_TimerEventDefault(void* ptr, void* event);
void* QAbstractItemView_NewQAbstractItemView(void* parent);
void QAbstractItemView_ConnectActivated(void* ptr, long long t);
void QAbstractItemView_DisconnectActivated(void* ptr);
void QAbstractItemView_Activated(void* ptr, void* index);
char QAbstractItemView_AlternatingRowColors(void* ptr);
int QAbstractItemView_AutoScrollMargin(void* ptr);
void QAbstractItemView_ClearSelection(void* ptr);
void QAbstractItemView_ClearSelectionDefault(void* ptr);
void QAbstractItemView_ConnectClicked(void* ptr, long long t);
void QAbstractItemView_DisconnectClicked(void* ptr);
void QAbstractItemView_Clicked(void* ptr, void* index);
void QAbstractItemView_CloseEditor(void* ptr, void* editor, long long hint);
void QAbstractItemView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QAbstractItemView_ClosePersistentEditor(void* ptr, void* index);
void QAbstractItemView_CommitData(void* ptr, void* editor);
void QAbstractItemView_CommitDataDefault(void* ptr, void* editor);
void QAbstractItemView_CurrentChanged(void* ptr, void* current, void* previous);
void QAbstractItemView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void* QAbstractItemView_CurrentIndex(void* ptr);
void QAbstractItemView_DataChanged(void* ptr, void* topLeft, void* bottomRight, void* roles);
void QAbstractItemView_DataChangedDefault(void* ptr, void* topLeft, void* bottomRight, void* roles);
long long QAbstractItemView_DefaultDropAction(void* ptr);
void* QAbstractItemView_DirtyRegionOffset(void* ptr);
void QAbstractItemView_ConnectDoubleClicked(void* ptr, long long t);
void QAbstractItemView_DisconnectDoubleClicked(void* ptr);
void QAbstractItemView_DoubleClicked(void* ptr, void* index);
long long QAbstractItemView_DragDropMode(void* ptr);
char QAbstractItemView_DragDropOverwriteMode(void* ptr);
char QAbstractItemView_DragEnabled(void* ptr);
long long QAbstractItemView_DropIndicatorPosition(void* ptr);
void QAbstractItemView_Edit(void* ptr, void* index);
void QAbstractItemView_EditDefault(void* ptr, void* index);
char QAbstractItemView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QAbstractItemView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
long long QAbstractItemView_EditTriggers(void* ptr);
void QAbstractItemView_EditorDestroyed(void* ptr, void* editor);
void QAbstractItemView_EditorDestroyedDefault(void* ptr, void* editor);
void QAbstractItemView_ConnectEntered(void* ptr, long long t);
void QAbstractItemView_DisconnectEntered(void* ptr);
void QAbstractItemView_Entered(void* ptr, void* index);
void QAbstractItemView_ExecuteDelayedItemsLayout(void* ptr);
char QAbstractItemView_HasAutoScroll(void* ptr);
int QAbstractItemView_HorizontalOffset(void* ptr);
long long QAbstractItemView_HorizontalScrollMode(void* ptr);
void* QAbstractItemView_IconSize(void* ptr);
void QAbstractItemView_ConnectIconSizeChanged(void* ptr, long long t);
void QAbstractItemView_DisconnectIconSizeChanged(void* ptr);
void QAbstractItemView_IconSizeChanged(void* ptr, void* size);
void* QAbstractItemView_IndexAt(void* ptr, void* point);
void* QAbstractItemView_IndexWidget(void* ptr, void* index);
char QAbstractItemView_IsIndexHidden(void* ptr, void* index);
char QAbstractItemView_IsPersistentEditorOpen(void* ptr, void* index);
void* QAbstractItemView_ItemDelegate(void* ptr);
void* QAbstractItemView_ItemDelegate2(void* ptr, void* index);
void* QAbstractItemView_ItemDelegateForColumn(void* ptr, int column);
void* QAbstractItemView_ItemDelegateForRow(void* ptr, int row);
void QAbstractItemView_KeyboardSearch(void* ptr, struct QtWidgets_PackedString search);
void QAbstractItemView_KeyboardSearchDefault(void* ptr, struct QtWidgets_PackedString search);
void* QAbstractItemView_Model(void* ptr);
void* QAbstractItemView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void QAbstractItemView_OpenPersistentEditor(void* ptr, void* index);
void QAbstractItemView_ConnectPressed(void* ptr, long long t);
void QAbstractItemView_DisconnectPressed(void* ptr);
void QAbstractItemView_Pressed(void* ptr, void* index);
void QAbstractItemView_Reset(void* ptr);
void QAbstractItemView_ResetDefault(void* ptr);
void QAbstractItemView_ResetHorizontalScrollMode(void* ptr);
void QAbstractItemView_ResetVerticalScrollMode(void* ptr);
void* QAbstractItemView_RootIndex(void* ptr);
void QAbstractItemView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsInserted(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QAbstractItemView_ScheduleDelayedItemsLayout(void* ptr);
void QAbstractItemView_ScrollDirtyRegion(void* ptr, int dx, int dy);
void QAbstractItemView_ScrollTo(void* ptr, void* index, long long hint);
void QAbstractItemView_ScrollToBottom(void* ptr);
void QAbstractItemView_ScrollToBottomDefault(void* ptr);
void QAbstractItemView_ScrollToTop(void* ptr);
void QAbstractItemView_ScrollToTopDefault(void* ptr);
void QAbstractItemView_SelectAll(void* ptr);
void QAbstractItemView_SelectAllDefault(void* ptr);
struct QtWidgets_PackedList QAbstractItemView_SelectedIndexes(void* ptr);
struct QtWidgets_PackedList QAbstractItemView_SelectedIndexesDefault(void* ptr);
long long QAbstractItemView_SelectionBehavior(void* ptr);
void QAbstractItemView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QAbstractItemView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
long long QAbstractItemView_SelectionCommand(void* ptr, void* index, void* event);
long long QAbstractItemView_SelectionCommandDefault(void* ptr, void* index, void* event);
long long QAbstractItemView_SelectionMode(void* ptr);
void* QAbstractItemView_SelectionModel(void* ptr);
void QAbstractItemView_SetAlternatingRowColors(void* ptr, char enable);
void QAbstractItemView_SetAutoScroll(void* ptr, char enable);
void QAbstractItemView_SetAutoScrollMargin(void* ptr, int margin);
void QAbstractItemView_SetCurrentIndex(void* ptr, void* index);
void QAbstractItemView_SetCurrentIndexDefault(void* ptr, void* index);
void QAbstractItemView_SetDefaultDropAction(void* ptr, long long dropAction);
void QAbstractItemView_SetDirtyRegion(void* ptr, void* region);
void QAbstractItemView_SetDragDropMode(void* ptr, long long behavior);
void QAbstractItemView_SetDragDropOverwriteMode(void* ptr, char overwrite);
void QAbstractItemView_SetDragEnabled(void* ptr, char enable);
void QAbstractItemView_SetDropIndicatorShown(void* ptr, char enable);
void QAbstractItemView_SetEditTriggers(void* ptr, long long triggers);
void QAbstractItemView_SetHorizontalScrollMode(void* ptr, long long mode);
void QAbstractItemView_SetIconSize(void* ptr, void* size);
void QAbstractItemView_SetIndexWidget(void* ptr, void* index, void* widget);
void QAbstractItemView_SetItemDelegate(void* ptr, void* delegate);
void QAbstractItemView_SetItemDelegateForColumn(void* ptr, int column, void* delegate);
void QAbstractItemView_SetItemDelegateForRow(void* ptr, int row, void* delegate);
void QAbstractItemView_SetModel(void* ptr, void* model);
void QAbstractItemView_SetModelDefault(void* ptr, void* model);
void QAbstractItemView_SetRootIndex(void* ptr, void* index);
void QAbstractItemView_SetRootIndexDefault(void* ptr, void* index);
void QAbstractItemView_SetSelection(void* ptr, void* rect, long long flags);
void QAbstractItemView_SetSelectionBehavior(void* ptr, long long behavior);
void QAbstractItemView_SetSelectionMode(void* ptr, long long mode);
void QAbstractItemView_SetSelectionModel(void* ptr, void* selectionModel);
void QAbstractItemView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QAbstractItemView_SetState(void* ptr, long long state);
void QAbstractItemView_SetTabKeyNavigation(void* ptr, char enable);
void QAbstractItemView_SetTextElideMode(void* ptr, long long mode);
void QAbstractItemView_SetVerticalScrollMode(void* ptr, long long mode);
char QAbstractItemView_ShowDropIndicator(void* ptr);
int QAbstractItemView_SizeHintForColumn(void* ptr, int column);
int QAbstractItemView_SizeHintForColumnDefault(void* ptr, int column);
void* QAbstractItemView_SizeHintForIndex(void* ptr, void* index);
int QAbstractItemView_SizeHintForRow(void* ptr, int row);
int QAbstractItemView_SizeHintForRowDefault(void* ptr, int row);
void QAbstractItemView_StartDrag(void* ptr, long long supportedActions);
void QAbstractItemView_StartDragDefault(void* ptr, long long supportedActions);
long long QAbstractItemView_State(void* ptr);
char QAbstractItemView_TabKeyNavigation(void* ptr);
long long QAbstractItemView_TextElideMode(void* ptr);
void QAbstractItemView_Update(void* ptr, void* index);
void QAbstractItemView_UpdateDefault(void* ptr, void* index);
void QAbstractItemView_UpdateGeometries(void* ptr);
void QAbstractItemView_UpdateGeometriesDefault(void* ptr);
int QAbstractItemView_VerticalOffset(void* ptr);
long long QAbstractItemView_VerticalScrollMode(void* ptr);
void* QAbstractItemView_ViewOptions(void* ptr);
void* QAbstractItemView_ViewOptionsDefault(void* ptr);
void QAbstractItemView_ConnectViewportEntered(void* ptr, long long t);
void QAbstractItemView_DisconnectViewportEntered(void* ptr);
void QAbstractItemView_ViewportEntered(void* ptr);
void* QAbstractItemView_VisualRect(void* ptr, void* index);
void* QAbstractItemView_VisualRegionForSelection(void* ptr, void* selection);
void QAbstractItemView_DestroyQAbstractItemView(void* ptr);
void QAbstractItemView_DestroyQAbstractItemViewDefault(void* ptr);
int QAbstractItemView___dataChanged_roles_atList(void* ptr, int i);
void QAbstractItemView___dataChanged_roles_setList(void* ptr, int i);
void* QAbstractItemView___dataChanged_roles_newList(void* ptr);
void* QAbstractItemView___selectedIndexes_atList(void* ptr, int i);
void QAbstractItemView___selectedIndexes_setList(void* ptr, void* i);
void* QAbstractItemView___selectedIndexes_newList(void* ptr);
void* QAbstractScrollArea_NewQAbstractScrollArea(void* parent);
void QAbstractScrollArea_AddScrollBarWidget(void* ptr, void* widget, long long alignment);
void* QAbstractScrollArea_CornerWidget(void* ptr);
void* QAbstractScrollArea_HorizontalScrollBar(void* ptr);
long long QAbstractScrollArea_HorizontalScrollBarPolicy(void* ptr);
void* QAbstractScrollArea_MaximumViewportSize(void* ptr);
struct QtWidgets_PackedList QAbstractScrollArea_ScrollBarWidgets(void* ptr, long long alignment);
void QAbstractScrollArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QAbstractScrollArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QAbstractScrollArea_SetCornerWidget(void* ptr, void* widget);
void QAbstractScrollArea_SetHorizontalScrollBar(void* ptr, void* scrollBar);
void QAbstractScrollArea_SetHorizontalScrollBarPolicy(void* ptr, long long vqt);
void QAbstractScrollArea_SetSizeAdjustPolicy(void* ptr, long long policy);
void QAbstractScrollArea_SetVerticalScrollBar(void* ptr, void* scrollBar);
void QAbstractScrollArea_SetVerticalScrollBarPolicy(void* ptr, long long vqt);
void QAbstractScrollArea_SetViewport(void* ptr, void* widget);
void QAbstractScrollArea_SetViewportMargins(void* ptr, int left, int top, int right, int bottom);
void QAbstractScrollArea_SetViewportMargins2(void* ptr, void* margins);
void QAbstractScrollArea_SetupViewport(void* ptr, void* viewport);
void QAbstractScrollArea_SetupViewportDefault(void* ptr, void* viewport);
long long QAbstractScrollArea_SizeAdjustPolicy(void* ptr);
void* QAbstractScrollArea_VerticalScrollBar(void* ptr);
long long QAbstractScrollArea_VerticalScrollBarPolicy(void* ptr);
void* QAbstractScrollArea_Viewport(void* ptr);
char QAbstractScrollArea_ViewportEvent(void* ptr, void* event);
char QAbstractScrollArea_ViewportEventDefault(void* ptr, void* event);
void* QAbstractScrollArea_ViewportMargins(void* ptr);
void* QAbstractScrollArea_ViewportSizeHint(void* ptr);
void* QAbstractScrollArea_ViewportSizeHintDefault(void* ptr);
void QAbstractScrollArea_DestroyQAbstractScrollArea(void* ptr);
void QAbstractScrollArea_DestroyQAbstractScrollAreaDefault(void* ptr);
void* QAbstractScrollArea___scrollBarWidgets_atList(void* ptr, int i);
void QAbstractScrollArea___scrollBarWidgets_setList(void* ptr, void* i);
void* QAbstractScrollArea___scrollBarWidgets_newList(void* ptr);
void* QAbstractSlider_NewQAbstractSlider(void* parent);
void QAbstractSlider_ConnectActionTriggered(void* ptr, long long t);
void QAbstractSlider_DisconnectActionTriggered(void* ptr);
void QAbstractSlider_ActionTriggered(void* ptr, int action);
char QAbstractSlider_HasTracking(void* ptr);
char QAbstractSlider_InvertedAppearance(void* ptr);
char QAbstractSlider_InvertedControls(void* ptr);
char QAbstractSlider_IsSliderDown(void* ptr);
int QAbstractSlider_Maximum(void* ptr);
int QAbstractSlider_Minimum(void* ptr);
long long QAbstractSlider_Orientation(void* ptr);
int QAbstractSlider_PageStep(void* ptr);
void QAbstractSlider_ConnectRangeChanged(void* ptr, long long t);
void QAbstractSlider_DisconnectRangeChanged(void* ptr);
void QAbstractSlider_RangeChanged(void* ptr, int min, int max);
long long QAbstractSlider_RepeatAction(void* ptr);
void QAbstractSlider_SetInvertedAppearance(void* ptr, char vbo);
void QAbstractSlider_SetInvertedControls(void* ptr, char vbo);
void QAbstractSlider_SetMaximum(void* ptr, int vin);
void QAbstractSlider_SetMinimum(void* ptr, int vin);
void QAbstractSlider_SetOrientation(void* ptr, long long vqt);
void QAbstractSlider_SetOrientationDefault(void* ptr, long long vqt);
void QAbstractSlider_SetPageStep(void* ptr, int vin);
void QAbstractSlider_SetRange(void* ptr, int min, int max);
void QAbstractSlider_SetRangeDefault(void* ptr, int min, int max);
void QAbstractSlider_SetRepeatAction(void* ptr, long long action, int thresholdTime, int repeatTime);
void QAbstractSlider_SetSingleStep(void* ptr, int vin);
void QAbstractSlider_SetSliderDown(void* ptr, char vbo);
void QAbstractSlider_SetSliderPosition(void* ptr, int vin);
void QAbstractSlider_SetTracking(void* ptr, char enable);
void QAbstractSlider_SetValue(void* ptr, int vin);
void QAbstractSlider_SetValueDefault(void* ptr, int vin);
int QAbstractSlider_SingleStep(void* ptr);
void QAbstractSlider_SliderChange(void* ptr, long long change);
void QAbstractSlider_SliderChangeDefault(void* ptr, long long change);
void QAbstractSlider_ConnectSliderMoved(void* ptr, long long t);
void QAbstractSlider_DisconnectSliderMoved(void* ptr);
void QAbstractSlider_SliderMoved(void* ptr, int value);
int QAbstractSlider_SliderPosition(void* ptr);
void QAbstractSlider_ConnectSliderPressed(void* ptr, long long t);
void QAbstractSlider_DisconnectSliderPressed(void* ptr);
void QAbstractSlider_SliderPressed(void* ptr);
void QAbstractSlider_ConnectSliderReleased(void* ptr, long long t);
void QAbstractSlider_DisconnectSliderReleased(void* ptr);
void QAbstractSlider_SliderReleased(void* ptr);
void QAbstractSlider_TriggerAction(void* ptr, long long action);
int QAbstractSlider_Value(void* ptr);
void QAbstractSlider_ConnectValueChanged(void* ptr, long long t);
void QAbstractSlider_DisconnectValueChanged(void* ptr);
void QAbstractSlider_ValueChanged(void* ptr, int value);
void QAbstractSlider_DestroyQAbstractSlider(void* ptr);
void QAbstractSlider_DestroyQAbstractSliderDefault(void* ptr);
void* QAbstractSpinBox_NewQAbstractSpinBox(void* parent);
long long QAbstractSpinBox_Alignment(void* ptr);
long long QAbstractSpinBox_ButtonSymbols(void* ptr);
void QAbstractSpinBox_Clear(void* ptr);
void QAbstractSpinBox_ClearDefault(void* ptr);
long long QAbstractSpinBox_CorrectionMode(void* ptr);
void QAbstractSpinBox_ConnectEditingFinished(void* ptr, long long t);
void QAbstractSpinBox_DisconnectEditingFinished(void* ptr);
void QAbstractSpinBox_EditingFinished(void* ptr);
void QAbstractSpinBox_Fixup(void* ptr, struct QtWidgets_PackedString input);
void QAbstractSpinBox_FixupDefault(void* ptr, struct QtWidgets_PackedString input);
char QAbstractSpinBox_HasAcceptableInput(void* ptr);
char QAbstractSpinBox_HasFrame(void* ptr);
void QAbstractSpinBox_InitStyleOption(void* ptr, void* option);
void QAbstractSpinBox_InterpretText(void* ptr);
char QAbstractSpinBox_IsAccelerated(void* ptr);
char QAbstractSpinBox_IsGroupSeparatorShown(void* ptr);
char QAbstractSpinBox_IsReadOnly(void* ptr);
char QAbstractSpinBox_KeyboardTracking(void* ptr);
void* QAbstractSpinBox_LineEdit(void* ptr);
void QAbstractSpinBox_SelectAll(void* ptr);
void QAbstractSpinBox_SelectAllDefault(void* ptr);
void QAbstractSpinBox_SetAccelerated(void* ptr, char on);
void QAbstractSpinBox_SetAlignment(void* ptr, long long flag);
void QAbstractSpinBox_SetButtonSymbols(void* ptr, long long bs);
void QAbstractSpinBox_SetCorrectionMode(void* ptr, long long cm);
void QAbstractSpinBox_SetFrame(void* ptr, char vbo);
void QAbstractSpinBox_SetGroupSeparatorShown(void* ptr, char shown);
void QAbstractSpinBox_SetKeyboardTracking(void* ptr, char kt);
void QAbstractSpinBox_SetLineEdit(void* ptr, void* lineEdit);
void QAbstractSpinBox_SetReadOnly(void* ptr, char r);
void QAbstractSpinBox_SetSpecialValueText(void* ptr, struct QtWidgets_PackedString txt);
void QAbstractSpinBox_SetWrapping(void* ptr, char w);
struct QtWidgets_PackedString QAbstractSpinBox_SpecialValueText(void* ptr);
void QAbstractSpinBox_StepBy(void* ptr, int steps);
void QAbstractSpinBox_StepByDefault(void* ptr, int steps);
void QAbstractSpinBox_StepDown(void* ptr);
void QAbstractSpinBox_StepDownDefault(void* ptr);
long long QAbstractSpinBox_StepEnabled(void* ptr);
long long QAbstractSpinBox_StepEnabledDefault(void* ptr);
void QAbstractSpinBox_StepUp(void* ptr);
void QAbstractSpinBox_StepUpDefault(void* ptr);
struct QtWidgets_PackedString QAbstractSpinBox_Text(void* ptr);
long long QAbstractSpinBox_Validate(void* ptr, struct QtWidgets_PackedString input, int pos);
long long QAbstractSpinBox_ValidateDefault(void* ptr, struct QtWidgets_PackedString input, int pos);
char QAbstractSpinBox_Wrapping(void* ptr);
void QAbstractSpinBox_DestroyQAbstractSpinBox(void* ptr);
void QAbstractSpinBox_DestroyQAbstractSpinBoxDefault(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_ActionNames(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_ActionNamesDefault(void* ptr);
void QAccessibleWidget_AddControllingSignal(void* ptr, struct QtWidgets_PackedString sign);
void* QAccessibleWidget_BackgroundColor(void* ptr);
void* QAccessibleWidget_BackgroundColorDefault(void* ptr);
void* QAccessibleWidget_Child(void* ptr, int index);
void* QAccessibleWidget_ChildDefault(void* ptr, int index);
int QAccessibleWidget_ChildCount(void* ptr);
int QAccessibleWidget_ChildCountDefault(void* ptr);
void QAccessibleWidget_DoAction(void* ptr, struct QtWidgets_PackedString actionName);
void QAccessibleWidget_DoActionDefault(void* ptr, struct QtWidgets_PackedString actionName);
void* QAccessibleWidget_FocusChild(void* ptr);
void* QAccessibleWidget_FocusChildDefault(void* ptr);
void* QAccessibleWidget_ForegroundColor(void* ptr);
void* QAccessibleWidget_ForegroundColorDefault(void* ptr);
int QAccessibleWidget_IndexOfChild(void* ptr, void* child);
int QAccessibleWidget_IndexOfChildDefault(void* ptr, void* child);
void* QAccessibleWidget_Interface_cast(void* ptr, long long t);
void* QAccessibleWidget_Interface_castDefault(void* ptr, long long t);
char QAccessibleWidget_IsValid(void* ptr);
char QAccessibleWidget_IsValidDefault(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_KeyBindingsForAction(void* ptr, struct QtWidgets_PackedString actionName);
struct QtWidgets_PackedString QAccessibleWidget_KeyBindingsForActionDefault(void* ptr, struct QtWidgets_PackedString actionName);
void* QAccessibleWidget_Parent(void* ptr);
void* QAccessibleWidget_ParentDefault(void* ptr);
void* QAccessibleWidget_ParentObject(void* ptr);
void* QAccessibleWidget_Rect(void* ptr);
void* QAccessibleWidget_RectDefault(void* ptr);
long long QAccessibleWidget_Role(void* ptr);
long long QAccessibleWidget_RoleDefault(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_Text(void* ptr, long long t);
struct QtWidgets_PackedString QAccessibleWidget_TextDefault(void* ptr, long long t);
void* QAccessibleWidget_Widget(void* ptr);
void* QAccessibleWidget_Window(void* ptr);
void* QAccessibleWidget_WindowDefault(void* ptr);
void QAccessibleWidget_DestroyQAccessibleWidget(void* ptr);
void QAccessibleWidget_DestroyQAccessibleWidgetDefault(void* ptr);
void* QAccessibleWidget_ChildAt(void* ptr, int x, int y);
void* QAccessibleWidget_ChildAtDefault(void* ptr, int x, int y);
void* QAccessibleWidget_Object(void* ptr);
void* QAccessibleWidget_ObjectDefault(void* ptr);
void QAccessibleWidget_SetText(void* ptr, long long t, struct QtWidgets_PackedString text);
void QAccessibleWidget_SetTextDefault(void* ptr, long long t, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionDescription(void* ptr, struct QtWidgets_PackedString actionName);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionDescriptionDefault(void* ptr, struct QtWidgets_PackedString actionName);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionName(void* ptr, struct QtWidgets_PackedString actionName);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionNameDefault(void* ptr, struct QtWidgets_PackedString actionName);
void* QAction_NewQAction(void* parent);
void* QAction_NewQAction2(struct QtWidgets_PackedString text, void* parent);
void* QAction_NewQAction3(void* icon, struct QtWidgets_PackedString text, void* parent);
void* QAction_ActionGroup(void* ptr);
void QAction_Activate(void* ptr, long long event);
struct QtWidgets_PackedList QAction_AssociatedGraphicsWidgets(void* ptr);
struct QtWidgets_PackedList QAction_AssociatedWidgets(void* ptr);
char QAction_AutoRepeat(void* ptr);
void QAction_ConnectChanged(void* ptr, long long t);
void QAction_DisconnectChanged(void* ptr);
void QAction_Changed(void* ptr);
void* QAction_Data(void* ptr);
char QAction_EventDefault(void* ptr, void* e);
void* QAction_Font(void* ptr);
void QAction_Hover(void* ptr);
void QAction_HoverDefault(void* ptr);
void QAction_ConnectHovered(void* ptr, long long t);
void QAction_DisconnectHovered(void* ptr);
void QAction_Hovered(void* ptr);
void* QAction_Icon(void* ptr);
struct QtWidgets_PackedString QAction_IconText(void* ptr);
char QAction_IsCheckable(void* ptr);
char QAction_IsChecked(void* ptr);
char QAction_IsEnabled(void* ptr);
char QAction_IsIconVisibleInMenu(void* ptr);
char QAction_IsSeparator(void* ptr);
char QAction_IsShortcutVisibleInContextMenu(void* ptr);
char QAction_IsVisible(void* ptr);
void* QAction_Menu(void* ptr);
long long QAction_MenuRole(void* ptr);
void* QAction_ParentWidget(void* ptr);
long long QAction_Priority(void* ptr);
void QAction_SetActionGroup(void* ptr, void* group);
void QAction_SetAutoRepeat(void* ptr, char vbo);
void QAction_SetCheckable(void* ptr, char vbo);
void QAction_SetChecked(void* ptr, char vbo);
void QAction_SetCheckedDefault(void* ptr, char vbo);
void QAction_SetData(void* ptr, void* userData);
void QAction_SetDisabled(void* ptr, char b);
void QAction_SetDisabledDefault(void* ptr, char b);
void QAction_SetEnabled(void* ptr, char vbo);
void QAction_SetEnabledDefault(void* ptr, char vbo);
void QAction_SetFont(void* ptr, void* font);
void QAction_SetIcon(void* ptr, void* icon);
void QAction_SetIconText(void* ptr, struct QtWidgets_PackedString text);
void QAction_SetIconVisibleInMenu(void* ptr, char visible);
void QAction_SetMenu(void* ptr, void* menu);
void QAction_SetMenuRole(void* ptr, long long menuRole);
void QAction_SetPriority(void* ptr, long long priority);
void QAction_SetSeparator(void* ptr, char b);
void QAction_SetShortcut(void* ptr, void* shortcut);
void QAction_SetShortcutContext(void* ptr, long long context);
void QAction_SetShortcutVisibleInContextMenu(void* ptr, char show);
void QAction_SetShortcuts(void* ptr, void* shortcuts);
void QAction_SetShortcuts2(void* ptr, long long key);
void QAction_SetStatusTip(void* ptr, struct QtWidgets_PackedString statusTip);
void QAction_SetText(void* ptr, struct QtWidgets_PackedString text);
void QAction_SetToolTip(void* ptr, struct QtWidgets_PackedString tip);
void QAction_SetVisible(void* ptr, char vbo);
void QAction_SetVisibleDefault(void* ptr, char vbo);
void QAction_SetWhatsThis(void* ptr, struct QtWidgets_PackedString what);
void* QAction_Shortcut(void* ptr);
long long QAction_ShortcutContext(void* ptr);
struct QtWidgets_PackedList QAction_Shortcuts(void* ptr);
char QAction_ShowStatusText(void* ptr, void* widget);
struct QtWidgets_PackedString QAction_StatusTip(void* ptr);
struct QtWidgets_PackedString QAction_Text(void* ptr);
void QAction_Toggle(void* ptr);
void QAction_ToggleDefault(void* ptr);
void QAction_ConnectToggled(void* ptr, long long t);
void QAction_DisconnectToggled(void* ptr);
void QAction_Toggled(void* ptr, char checked);
struct QtWidgets_PackedString QAction_ToolTip(void* ptr);
void QAction_Trigger(void* ptr);
void QAction_TriggerDefault(void* ptr);
void QAction_ConnectTriggered(void* ptr, long long t);
void QAction_DisconnectTriggered(void* ptr);
void QAction_Triggered(void* ptr, char checked);
struct QtWidgets_PackedString QAction_WhatsThis(void* ptr);
void QAction_DestroyQAction(void* ptr);
void QAction_DestroyQActionDefault(void* ptr);
void* QAction___associatedGraphicsWidgets_atList(void* ptr, int i);
void QAction___associatedGraphicsWidgets_setList(void* ptr, void* i);
void* QAction___associatedGraphicsWidgets_newList(void* ptr);
void* QAction___associatedWidgets_atList(void* ptr, int i);
void QAction___associatedWidgets_setList(void* ptr, void* i);
void* QAction___associatedWidgets_newList(void* ptr);
void* QAction___setShortcuts_shortcuts_atList(void* ptr, int i);
void QAction___setShortcuts_shortcuts_setList(void* ptr, void* i);
void* QAction___setShortcuts_shortcuts_newList(void* ptr);
void* QAction___shortcuts_atList(void* ptr, int i);
void QAction___shortcuts_setList(void* ptr, void* i);
void* QAction___shortcuts_newList(void* ptr);
void* QAction___children_atList(void* ptr, int i);
void QAction___children_setList(void* ptr, void* i);
void* QAction___children_newList(void* ptr);
void* QAction___dynamicPropertyNames_atList(void* ptr, int i);
void QAction___dynamicPropertyNames_setList(void* ptr, void* i);
void* QAction___dynamicPropertyNames_newList(void* ptr);
void* QAction___findChildren_atList(void* ptr, int i);
void QAction___findChildren_setList(void* ptr, void* i);
void* QAction___findChildren_newList(void* ptr);
void* QAction___findChildren_atList3(void* ptr, int i);
void QAction___findChildren_setList3(void* ptr, void* i);
void* QAction___findChildren_newList3(void* ptr);
void QAction_ChildEventDefault(void* ptr, void* event);
void QAction_ConnectNotifyDefault(void* ptr, void* sign);
void QAction_CustomEventDefault(void* ptr, void* event);
void QAction_DeleteLaterDefault(void* ptr);
void QAction_DisconnectNotifyDefault(void* ptr, void* sign);
char QAction_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAction_MetaObjectDefault(void* ptr);
void QAction_TimerEventDefault(void* ptr, void* event);
void* QActionGroup_NewQActionGroup(void* parent);
struct QtWidgets_PackedList QActionGroup_Actions(void* ptr);
void* QActionGroup_AddAction(void* ptr, void* action);
void* QActionGroup_AddAction2(void* ptr, struct QtWidgets_PackedString text);
void* QActionGroup_AddAction3(void* ptr, void* icon, struct QtWidgets_PackedString text);
void* QActionGroup_CheckedAction(void* ptr);
long long QActionGroup_ExclusionPolicy(void* ptr);
void QActionGroup_ConnectHovered(void* ptr, long long t);
void QActionGroup_DisconnectHovered(void* ptr);
void QActionGroup_Hovered(void* ptr, void* action);
char QActionGroup_IsEnabled(void* ptr);
char QActionGroup_IsExclusive(void* ptr);
char QActionGroup_IsVisible(void* ptr);
void QActionGroup_RemoveAction(void* ptr, void* action);
void QActionGroup_SetDisabled(void* ptr, char b);
void QActionGroup_SetDisabledDefault(void* ptr, char b);
void QActionGroup_SetEnabled(void* ptr, char vbo);
void QActionGroup_SetEnabledDefault(void* ptr, char vbo);
void QActionGroup_SetExclusive(void* ptr, char b);
void QActionGroup_SetExclusiveDefault(void* ptr, char b);
void QActionGroup_SetVisible(void* ptr, char vbo);
void QActionGroup_SetVisibleDefault(void* ptr, char vbo);
void QActionGroup_ConnectTriggered(void* ptr, long long t);
void QActionGroup_DisconnectTriggered(void* ptr);
void QActionGroup_Triggered(void* ptr, void* action);
void QActionGroup_DestroyQActionGroup(void* ptr);
void QActionGroup_DestroyQActionGroupDefault(void* ptr);
void* QActionGroup___actions_atList(void* ptr, int i);
void QActionGroup___actions_setList(void* ptr, void* i);
void* QActionGroup___actions_newList(void* ptr);
void* QActionGroup___children_atList(void* ptr, int i);
void QActionGroup___children_setList(void* ptr, void* i);
void* QActionGroup___children_newList(void* ptr);
void* QActionGroup___dynamicPropertyNames_atList(void* ptr, int i);
void QActionGroup___dynamicPropertyNames_setList(void* ptr, void* i);
void* QActionGroup___dynamicPropertyNames_newList(void* ptr);
void* QActionGroup___findChildren_atList(void* ptr, int i);
void QActionGroup___findChildren_setList(void* ptr, void* i);
void* QActionGroup___findChildren_newList(void* ptr);
void* QActionGroup___findChildren_atList3(void* ptr, int i);
void QActionGroup___findChildren_setList3(void* ptr, void* i);
void* QActionGroup___findChildren_newList3(void* ptr);
void QActionGroup_ChildEventDefault(void* ptr, void* event);
void QActionGroup_ConnectNotifyDefault(void* ptr, void* sign);
void QActionGroup_CustomEventDefault(void* ptr, void* event);
void QActionGroup_DeleteLaterDefault(void* ptr);
void QActionGroup_DisconnectNotifyDefault(void* ptr, void* sign);
char QActionGroup_EventDefault(void* ptr, void* e);
char QActionGroup_EventFilterDefault(void* ptr, void* watched, void* event);
void* QActionGroup_MetaObjectDefault(void* ptr);
void QActionGroup_TimerEventDefault(void* ptr, void* event);
void* QApplication_NewQApplication(int argc, char* argv);
void QApplication_AboutQt(void* ptr);
void QApplication_AboutQtDefault(void* ptr);
void* QApplication_QApplication_ActiveModalWidget();
void* QApplication_QApplication_ActivePopupWidget();
void* QApplication_QApplication_ActiveWindow();
void QApplication_QApplication_Alert(void* widget, int msec);
struct QtWidgets_PackedList QApplication_QApplication_AllWidgets();
char QApplication_AutoSipEnabled(void* ptr);
char QApplication_AutoSipEnabledDefault(void* ptr);
void QApplication_QApplication_Beep();
void QApplication_CloseAllWindows(void* ptr);
void QApplication_CloseAllWindowsDefault(void* ptr);
int QApplication_QApplication_CursorFlashTime();
int QApplication_QApplication_DoubleClickInterval();
char QApplication_EventDefault(void* ptr, void* e);
int QApplication_QApplication_Exec();
void QApplication_ConnectFocusChanged(void* ptr, long long t);
void QApplication_DisconnectFocusChanged(void* ptr);
void QApplication_FocusChanged(void* ptr, void* old, void* now);
void* QApplication_QApplication_FocusWidget();
void* QApplication_QApplication_Font();
void* QApplication_QApplication_Font2(void* widget);
void* QApplication_QApplication_Font3(char* className);
void* QApplication_QApplication_FontMetrics();
void* QApplication_QApplication_GlobalStrut();
char QApplication_QApplication_IsEffectEnabled(long long effect);
int QApplication_QApplication_KeyboardInputInterval();
long long QApplication_QApplication_NavigationMode();
void* QApplication_QApplication_Palette(void* widget);
void* QApplication_QApplication_Palette2(char* className);
void QApplication_QApplication_SetActiveWindow(void* active);
void QApplication_SetAutoSipEnabled(void* ptr, char enabled);
void QApplication_SetAutoSipEnabledDefault(void* ptr, char enabled);
void QApplication_QApplication_SetCursorFlashTime(int vin);
void QApplication_QApplication_SetDoubleClickInterval(int vin);
void QApplication_QApplication_SetEffectEnabled(long long effect, char enable);
void QApplication_QApplication_SetFont(void* font, char* className);
void QApplication_QApplication_SetGlobalStrut(void* vqs);
void QApplication_QApplication_SetKeyboardInputInterval(int vin);
void QApplication_QApplication_SetNavigationMode(long long mode);
void QApplication_QApplication_SetPalette(void* palette, char* className);
void QApplication_QApplication_SetStartDragDistance(int l);
void QApplication_QApplication_SetStartDragTime(int ms);
void QApplication_QApplication_SetStyle(void* style);
void* QApplication_QApplication_SetStyle2(struct QtWidgets_PackedString style);
void QApplication_SetStyleSheet(void* ptr, struct QtWidgets_PackedString sheet);
void QApplication_SetStyleSheetDefault(void* ptr, struct QtWidgets_PackedString sheet);
void QApplication_QApplication_SetWheelScrollLines(int vin);
void QApplication_QApplication_SetWindowIcon(void* icon);
int QApplication_QApplication_StartDragDistance();
int QApplication_QApplication_StartDragTime();
void* QApplication_QApplication_Style();
struct QtWidgets_PackedString QApplication_StyleSheet(void* ptr);
void* QApplication_QApplication_TopLevelAt(void* point);
void* QApplication_QApplication_TopLevelAt2(int x, int y);
struct QtWidgets_PackedList QApplication_QApplication_TopLevelWidgets();
int QApplication_QApplication_WheelScrollLines();
void* QApplication_QApplication_WidgetAt(void* point);
void* QApplication_QApplication_WidgetAt2(int x, int y);
void* QApplication_QApplication_WindowIcon();
void QApplication_DestroyQApplication(void* ptr);
void QApplication_DestroyQApplicationDefault(void* ptr);
void* QApplication___allWidgets_atList(void* ptr, int i);
void QApplication___allWidgets_setList(void* ptr, void* i);
void* QApplication___allWidgets_newList(void* ptr);
void* QApplication___topLevelWidgets_atList(void* ptr, int i);
void QApplication___topLevelWidgets_setList(void* ptr, void* i);
void* QApplication___topLevelWidgets_newList(void* ptr);
void* QApplication___screens_atList(void* ptr, int i);
void QApplication___screens_setList(void* ptr, void* i);
void* QApplication___screens_newList(void* ptr);
void* QApplication___children_atList(void* ptr, int i);
void QApplication___children_setList(void* ptr, void* i);
void* QApplication___children_newList(void* ptr);
void* QApplication___dynamicPropertyNames_atList(void* ptr, int i);
void QApplication___dynamicPropertyNames_setList(void* ptr, void* i);
void* QApplication___dynamicPropertyNames_newList(void* ptr);
void* QApplication___findChildren_atList(void* ptr, int i);
void QApplication___findChildren_setList(void* ptr, void* i);
void* QApplication___findChildren_newList(void* ptr);
void* QApplication___findChildren_atList3(void* ptr, int i);
void QApplication___findChildren_setList3(void* ptr, void* i);
void* QApplication___findChildren_newList3(void* ptr);
void QApplication_QuitDefault(void* ptr);
void QApplication_ChildEventDefault(void* ptr, void* event);
void QApplication_ConnectNotifyDefault(void* ptr, void* sign);
void QApplication_CustomEventDefault(void* ptr, void* event);
void QApplication_DeleteLaterDefault(void* ptr);
void QApplication_DisconnectNotifyDefault(void* ptr, void* sign);
char QApplication_EventFilterDefault(void* ptr, void* watched, void* event);
void* QApplication_MetaObjectDefault(void* ptr);
void QApplication_TimerEventDefault(void* ptr, void* event);
void* QBoxLayout_NewQBoxLayout(long long dir, void* parent);
void QBoxLayout_AddItem(void* ptr, void* item);
void QBoxLayout_AddItemDefault(void* ptr, void* item);
void QBoxLayout_AddLayout(void* ptr, void* layout, int stretch);
void QBoxLayout_AddSpacerItem(void* ptr, void* spacerItem);
void QBoxLayout_AddSpacing(void* ptr, int size);
void QBoxLayout_AddStretch(void* ptr, int stretch);
void QBoxLayout_AddStrut(void* ptr, int size);
void QBoxLayout_AddWidget(void* ptr, void* widget, int stretch, long long alignment);
int QBoxLayout_Count(void* ptr);
int QBoxLayout_CountDefault(void* ptr);
long long QBoxLayout_Direction(void* ptr);
void QBoxLayout_InsertItem(void* ptr, int index, void* item);
void QBoxLayout_InsertLayout(void* ptr, int index, void* layout, int stretch);
void QBoxLayout_InsertSpacerItem(void* ptr, int index, void* spacerItem);
void QBoxLayout_InsertSpacing(void* ptr, int index, int size);
void QBoxLayout_InsertStretch(void* ptr, int index, int stretch);
void QBoxLayout_InsertWidget(void* ptr, int index, void* widget, int stretch, long long alignment);
void* QBoxLayout_ItemAt(void* ptr, int index);
void* QBoxLayout_ItemAtDefault(void* ptr, int index);
void QBoxLayout_SetDirection(void* ptr, long long direction);
void QBoxLayout_SetStretch(void* ptr, int index, int stretch);
char QBoxLayout_SetStretchFactor(void* ptr, void* widget, int stretch);
char QBoxLayout_SetStretchFactor2(void* ptr, void* layout, int stretch);
void* QBoxLayout_SizeHint(void* ptr);
void* QBoxLayout_SizeHintDefault(void* ptr);
int QBoxLayout_Stretch(void* ptr, int index);
void* QBoxLayout_TakeAt(void* ptr, int index);
void* QBoxLayout_TakeAtDefault(void* ptr, int index);
void QBoxLayout_DestroyQBoxLayout(void* ptr);
void QBoxLayout_DestroyQBoxLayoutDefault(void* ptr);
void* QButtonGroup_NewQButtonGroup(void* parent);
void QButtonGroup_AddButton(void* ptr, void* button, int id);
void* QButtonGroup_Button(void* ptr, int id);
void QButtonGroup_ConnectButtonClicked(void* ptr, long long t);
void QButtonGroup_DisconnectButtonClicked(void* ptr);
void QButtonGroup_ButtonClicked(void* ptr, void* button);
void QButtonGroup_ConnectButtonPressed(void* ptr, long long t);
void QButtonGroup_DisconnectButtonPressed(void* ptr);
void QButtonGroup_ButtonPressed(void* ptr, void* button);
void QButtonGroup_ConnectButtonReleased(void* ptr, long long t);
void QButtonGroup_DisconnectButtonReleased(void* ptr);
void QButtonGroup_ButtonReleased(void* ptr, void* button);
void QButtonGroup_ConnectButtonToggled(void* ptr, long long t);
void QButtonGroup_DisconnectButtonToggled(void* ptr);
void QButtonGroup_ButtonToggled(void* ptr, void* button, char checked);
struct QtWidgets_PackedList QButtonGroup_Buttons(void* ptr);
void* QButtonGroup_CheckedButton(void* ptr);
int QButtonGroup_CheckedId(void* ptr);
char QButtonGroup_Exclusive(void* ptr);
int QButtonGroup_Id(void* ptr, void* button);
void QButtonGroup_ConnectIdClicked(void* ptr, long long t);
void QButtonGroup_DisconnectIdClicked(void* ptr);
void QButtonGroup_IdClicked(void* ptr, int id);
void QButtonGroup_ConnectIdPressed(void* ptr, long long t);
void QButtonGroup_DisconnectIdPressed(void* ptr);
void QButtonGroup_IdPressed(void* ptr, int id);
void QButtonGroup_ConnectIdReleased(void* ptr, long long t);
void QButtonGroup_DisconnectIdReleased(void* ptr);
void QButtonGroup_IdReleased(void* ptr, int id);
void QButtonGroup_ConnectIdToggled(void* ptr, long long t);
void QButtonGroup_DisconnectIdToggled(void* ptr);
void QButtonGroup_IdToggled(void* ptr, int id, char checked);
void QButtonGroup_RemoveButton(void* ptr, void* button);
void QButtonGroup_SetExclusive(void* ptr, char vbo);
void QButtonGroup_SetId(void* ptr, void* button, int id);
void QButtonGroup_DestroyQButtonGroup(void* ptr);
void QButtonGroup_DestroyQButtonGroupDefault(void* ptr);
void* QButtonGroup___buttons_atList(void* ptr, int i);
void QButtonGroup___buttons_setList(void* ptr, void* i);
void* QButtonGroup___buttons_newList(void* ptr);
void* QButtonGroup___children_atList(void* ptr, int i);
void QButtonGroup___children_setList(void* ptr, void* i);
void* QButtonGroup___children_newList(void* ptr);
void* QButtonGroup___dynamicPropertyNames_atList(void* ptr, int i);
void QButtonGroup___dynamicPropertyNames_setList(void* ptr, void* i);
void* QButtonGroup___dynamicPropertyNames_newList(void* ptr);
void* QButtonGroup___findChildren_atList(void* ptr, int i);
void QButtonGroup___findChildren_setList(void* ptr, void* i);
void* QButtonGroup___findChildren_newList(void* ptr);
void* QButtonGroup___findChildren_atList3(void* ptr, int i);
void QButtonGroup___findChildren_setList3(void* ptr, void* i);
void* QButtonGroup___findChildren_newList3(void* ptr);
void QButtonGroup_ChildEventDefault(void* ptr, void* event);
void QButtonGroup_ConnectNotifyDefault(void* ptr, void* sign);
void QButtonGroup_CustomEventDefault(void* ptr, void* event);
void QButtonGroup_DeleteLaterDefault(void* ptr);
void QButtonGroup_DisconnectNotifyDefault(void* ptr, void* sign);
char QButtonGroup_EventDefault(void* ptr, void* e);
char QButtonGroup_EventFilterDefault(void* ptr, void* watched, void* event);
void* QButtonGroup_MetaObjectDefault(void* ptr);
void QButtonGroup_TimerEventDefault(void* ptr, void* event);
void* QCalendarWidget_NewQCalendarWidget(void* parent);
void QCalendarWidget_ConnectActivated(void* ptr, long long t);
void QCalendarWidget_DisconnectActivated(void* ptr);
void QCalendarWidget_Activated(void* ptr, void* date);
void QCalendarWidget_ConnectClicked(void* ptr, long long t);
void QCalendarWidget_DisconnectClicked(void* ptr);
void QCalendarWidget_Clicked(void* ptr, void* date);
void QCalendarWidget_ConnectCurrentPageChanged(void* ptr, long long t);
void QCalendarWidget_DisconnectCurrentPageChanged(void* ptr);
void QCalendarWidget_CurrentPageChanged(void* ptr, int year, int month);
int QCalendarWidget_DateEditAcceptDelay(void* ptr);
struct QtWidgets_PackedList QCalendarWidget_DateTextFormat(void* ptr);
void* QCalendarWidget_DateTextFormat2(void* ptr, void* date);
long long QCalendarWidget_FirstDayOfWeek(void* ptr);
void* QCalendarWidget_HeaderTextFormat(void* ptr);
long long QCalendarWidget_HorizontalHeaderFormat(void* ptr);
char QCalendarWidget_IsDateEditEnabled(void* ptr);
char QCalendarWidget_IsGridVisible(void* ptr);
char QCalendarWidget_IsNavigationBarVisible(void* ptr);
void* QCalendarWidget_MaximumDate(void* ptr);
void* QCalendarWidget_MinimumDate(void* ptr);
int QCalendarWidget_MonthShown(void* ptr);
void QCalendarWidget_PaintCell(void* ptr, void* painter, void* rect, void* date);
void QCalendarWidget_PaintCellDefault(void* ptr, void* painter, void* rect, void* date);
void* QCalendarWidget_SelectedDate(void* ptr);
void QCalendarWidget_ConnectSelectionChanged(void* ptr, long long t);
void QCalendarWidget_DisconnectSelectionChanged(void* ptr);
void QCalendarWidget_SelectionChanged(void* ptr);
long long QCalendarWidget_SelectionMode(void* ptr);
void QCalendarWidget_SetCurrentPage(void* ptr, int year, int month);
void QCalendarWidget_SetCurrentPageDefault(void* ptr, int year, int month);
void QCalendarWidget_SetDateEditAcceptDelay(void* ptr, int delay);
void QCalendarWidget_SetDateEditEnabled(void* ptr, char enable);
void QCalendarWidget_SetDateRange(void* ptr, void* min, void* max);
void QCalendarWidget_SetDateRangeDefault(void* ptr, void* min, void* max);
void QCalendarWidget_SetDateTextFormat(void* ptr, void* date, void* format);
void QCalendarWidget_SetFirstDayOfWeek(void* ptr, long long dayOfWeek);
void QCalendarWidget_SetGridVisible(void* ptr, char show);
void QCalendarWidget_SetGridVisibleDefault(void* ptr, char show);
void QCalendarWidget_SetHeaderTextFormat(void* ptr, void* format);
void QCalendarWidget_SetHorizontalHeaderFormat(void* ptr, long long format);
void QCalendarWidget_SetMaximumDate(void* ptr, void* date);
void QCalendarWidget_SetMinimumDate(void* ptr, void* date);
void QCalendarWidget_SetNavigationBarVisible(void* ptr, char visible);
void QCalendarWidget_SetNavigationBarVisibleDefault(void* ptr, char visible);
void QCalendarWidget_SetSelectedDate(void* ptr, void* date);
void QCalendarWidget_SetSelectedDateDefault(void* ptr, void* date);
void QCalendarWidget_SetSelectionMode(void* ptr, long long mode);
void QCalendarWidget_SetVerticalHeaderFormat(void* ptr, long long format);
void QCalendarWidget_SetWeekdayTextFormat(void* ptr, long long dayOfWeek, void* format);
void QCalendarWidget_ShowNextMonth(void* ptr);
void QCalendarWidget_ShowNextMonthDefault(void* ptr);
void QCalendarWidget_ShowNextYear(void* ptr);
void QCalendarWidget_ShowNextYearDefault(void* ptr);
void QCalendarWidget_ShowPreviousMonth(void* ptr);
void QCalendarWidget_ShowPreviousMonthDefault(void* ptr);
void QCalendarWidget_ShowPreviousYear(void* ptr);
void QCalendarWidget_ShowPreviousYearDefault(void* ptr);
void QCalendarWidget_ShowSelectedDate(void* ptr);
void QCalendarWidget_ShowSelectedDateDefault(void* ptr);
void QCalendarWidget_ShowToday(void* ptr);
void QCalendarWidget_ShowTodayDefault(void* ptr);
void QCalendarWidget_UpdateCell(void* ptr, void* date);
void QCalendarWidget_UpdateCells(void* ptr);
long long QCalendarWidget_VerticalHeaderFormat(void* ptr);
void* QCalendarWidget_WeekdayTextFormat(void* ptr, long long dayOfWeek);
int QCalendarWidget_YearShown(void* ptr);
void QCalendarWidget_DestroyQCalendarWidget(void* ptr);
void QCalendarWidget_DestroyQCalendarWidgetDefault(void* ptr);
void* QCalendarWidget___dateTextFormat_atList(void* ptr, void* v, int i);
void QCalendarWidget___dateTextFormat_setList(void* ptr, void* key, void* i);
void* QCalendarWidget___dateTextFormat_newList(void* ptr);
struct QtWidgets_PackedList QCalendarWidget___dateTextFormat_keyList(void* ptr);
void* QCalendarWidget_____dateTextFormat_keyList_atList(void* ptr, int i);
void QCalendarWidget_____dateTextFormat_keyList_setList(void* ptr, void* i);
void* QCalendarWidget_____dateTextFormat_keyList_newList(void* ptr);
void* QCheckBox_NewQCheckBox(void* parent);
void* QCheckBox_NewQCheckBox2(struct QtWidgets_PackedString text, void* parent);
long long QCheckBox_CheckState(void* ptr);
void QCheckBox_InitStyleOption(void* ptr, void* option);
char QCheckBox_IsTristate(void* ptr);
void QCheckBox_PaintEvent(void* ptr, void* vqp);
void QCheckBox_PaintEventDefault(void* ptr, void* vqp);
void QCheckBox_SetCheckState(void* ptr, long long state);
void QCheckBox_SetTristate(void* ptr, char y);
void QCheckBox_ConnectStateChanged(void* ptr, long long t);
void QCheckBox_DisconnectStateChanged(void* ptr);
void QCheckBox_StateChanged(void* ptr, int state);
void QCheckBox_DestroyQCheckBox(void* ptr);
void QCheckBox_DestroyQCheckBoxDefault(void* ptr);
void* QColorDialog_NewQColorDialog(void* parent);
void* QColorDialog_NewQColorDialog2(void* initial, void* parent);
void QColorDialog_ConnectColorSelected(void* ptr, long long t);
void QColorDialog_DisconnectColorSelected(void* ptr);
void QColorDialog_ColorSelected(void* ptr, void* color);
void* QColorDialog_CurrentColor(void* ptr);
void QColorDialog_ConnectCurrentColorChanged(void* ptr, long long t);
void QColorDialog_DisconnectCurrentColorChanged(void* ptr);
void QColorDialog_CurrentColorChanged(void* ptr, void* color);
void* QColorDialog_QColorDialog_CustomColor(int index);
int QColorDialog_QColorDialog_CustomCount();
void QColorDialog_Done(void* ptr, int result);
void QColorDialog_DoneDefault(void* ptr, int result);
void* QColorDialog_QColorDialog_GetColor(void* initial, void* parent, struct QtWidgets_PackedString title, long long options);
void QColorDialog_Open(void* ptr, void* receiver, char* member);
long long QColorDialog_Options(void* ptr);
void* QColorDialog_SelectedColor(void* ptr);
void QColorDialog_SetCurrentColor(void* ptr, void* color);
void QColorDialog_QColorDialog_SetCustomColor(int index, void* color);
void QColorDialog_SetOption(void* ptr, long long option, char on);
void QColorDialog_SetOptions(void* ptr, long long options);
void QColorDialog_QColorDialog_SetStandardColor(int index, void* color);
void* QColorDialog_QColorDialog_StandardColor(int index);
char QColorDialog_TestOption(void* ptr, long long option);
void QColorDialog_DestroyQColorDialog(void* ptr);
void QColorDialog_DestroyQColorDialogDefault(void* ptr);
void* QColormap_NewQColormap(void* colormap);
void* QColormap_ColorAt(void* ptr, unsigned int pixel);
struct QtWidgets_PackedList QColormap_Colormap(void* ptr);
int QColormap_Depth(void* ptr);
void* QColormap_QColormap_Instance(int screen);
long long QColormap_Mode(void* ptr);
unsigned int QColormap_Pixel(void* ptr, void* color);
int QColormap_Size(void* ptr);
void QColormap_DestroyQColormap(void* ptr);
void* QColormap___colormap_atList(void* ptr, int i);
void QColormap___colormap_setList(void* ptr, void* i);
void* QColormap___colormap_newList(void* ptr);
void* QColumnView_NewQColumnView(void* parent);
struct QtWidgets_PackedList QColumnView_ColumnWidths(void* ptr);
void* QColumnView_CreateColumn(void* ptr, void* index);
void* QColumnView_CreateColumnDefault(void* ptr, void* index);
void QColumnView_CurrentChanged(void* ptr, void* current, void* previous);
void QColumnView_CurrentChangedDefault(void* ptr, void* current, void* previous);
int QColumnView_HorizontalOffset(void* ptr);
int QColumnView_HorizontalOffsetDefault(void* ptr);
void* QColumnView_IndexAt(void* ptr, void* point);
void* QColumnView_IndexAtDefault(void* ptr, void* point);
void QColumnView_InitializeColumn(void* ptr, void* column);
char QColumnView_IsIndexHidden(void* ptr, void* index);
char QColumnView_IsIndexHiddenDefault(void* ptr, void* index);
void* QColumnView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QColumnView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void* QColumnView_PreviewWidget(void* ptr);
char QColumnView_ResizeGripsVisible(void* ptr);
void QColumnView_RowsInserted(void* ptr, void* parent, int start, int end);
void QColumnView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QColumnView_ScrollTo(void* ptr, void* index, long long hint);
void QColumnView_ScrollToDefault(void* ptr, void* index, long long hint);
void QColumnView_SelectAll(void* ptr);
void QColumnView_SelectAllDefault(void* ptr);
void QColumnView_SetColumnWidths(void* ptr, void* list);
void QColumnView_SetPreviewWidget(void* ptr, void* widget);
void QColumnView_SetResizeGripsVisible(void* ptr, char visible);
void QColumnView_SetRootIndex(void* ptr, void* index);
void QColumnView_SetRootIndexDefault(void* ptr, void* index);
void QColumnView_SetSelection(void* ptr, void* rect, long long command);
void QColumnView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QColumnView_ConnectUpdatePreviewWidget(void* ptr, long long t);
void QColumnView_DisconnectUpdatePreviewWidget(void* ptr);
void QColumnView_UpdatePreviewWidget(void* ptr, void* index);
int QColumnView_VerticalOffset(void* ptr);
int QColumnView_VerticalOffsetDefault(void* ptr);
void* QColumnView_VisualRect(void* ptr, void* index);
void* QColumnView_VisualRectDefault(void* ptr, void* index);
void* QColumnView_VisualRegionForSelection(void* ptr, void* selection);
void* QColumnView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QColumnView_DestroyQColumnView(void* ptr);
void QColumnView_DestroyQColumnViewDefault(void* ptr);
int QColumnView___columnWidths_atList(void* ptr, int i);
void QColumnView___columnWidths_setList(void* ptr, int i);
void* QColumnView___columnWidths_newList(void* ptr);
int QColumnView___setColumnWidths_list_atList(void* ptr, int i);
void QColumnView___setColumnWidths_list_setList(void* ptr, int i);
void* QColumnView___setColumnWidths_list_newList(void* ptr);
int QComboBox_AdjustToMinimumContentsLengthWithIcon_Type();
void* QComboBox_NewQComboBox(void* parent);
void QComboBox_ConnectActivated(void* ptr, long long t);
void QComboBox_DisconnectActivated(void* ptr);
void QComboBox_Activated(void* ptr, int index);
void QComboBox_AddItem(void* ptr, struct QtWidgets_PackedString text, void* userData);
void QComboBox_AddItem2(void* ptr, void* icon, struct QtWidgets_PackedString text, void* userData);
void QComboBox_AddItems(void* ptr, struct QtWidgets_PackedString texts);
void QComboBox_Clear(void* ptr);
void QComboBox_ClearDefault(void* ptr);
void QComboBox_ClearEditText(void* ptr);
void QComboBox_ClearEditTextDefault(void* ptr);
void* QComboBox_Completer(void* ptr);
int QComboBox_Count(void* ptr);
void* QComboBox_CurrentData(void* ptr, int role);
int QComboBox_CurrentIndex(void* ptr);
void QComboBox_ConnectCurrentIndexChanged(void* ptr, long long t);
void QComboBox_DisconnectCurrentIndexChanged(void* ptr);
void QComboBox_CurrentIndexChanged(void* ptr, int index);
struct QtWidgets_PackedString QComboBox_CurrentText(void* ptr);
void QComboBox_ConnectCurrentTextChanged(void* ptr, long long t);
void QComboBox_DisconnectCurrentTextChanged(void* ptr);
void QComboBox_CurrentTextChanged(void* ptr, struct QtWidgets_PackedString text);
char QComboBox_DuplicatesEnabled(void* ptr);
void QComboBox_ConnectEditTextChanged(void* ptr, long long t);
void QComboBox_DisconnectEditTextChanged(void* ptr);
void QComboBox_EditTextChanged(void* ptr, struct QtWidgets_PackedString text);
int QComboBox_FindData(void* ptr, void* data, int role, long long flags);
int QComboBox_FindText(void* ptr, struct QtWidgets_PackedString text, long long flags);
char QComboBox_HasFrame(void* ptr);
void QComboBox_HidePopup(void* ptr);
void QComboBox_HidePopupDefault(void* ptr);
void QComboBox_ConnectHighlighted(void* ptr, long long t);
void QComboBox_DisconnectHighlighted(void* ptr);
void QComboBox_Highlighted(void* ptr, int index);
void* QComboBox_IconSize(void* ptr);
void QComboBox_InitStyleOption(void* ptr, void* option);
void QComboBox_InsertItem(void* ptr, int index, struct QtWidgets_PackedString text, void* userData);
void QComboBox_InsertItem2(void* ptr, int index, void* icon, struct QtWidgets_PackedString text, void* userData);
void QComboBox_InsertItems(void* ptr, int index, struct QtWidgets_PackedString list);
long long QComboBox_InsertPolicy(void* ptr);
void QComboBox_InsertSeparator(void* ptr, int index);
char QComboBox_IsEditable(void* ptr);
void* QComboBox_ItemData(void* ptr, int index, int role);
void* QComboBox_ItemDelegate(void* ptr);
void* QComboBox_ItemIcon(void* ptr, int index);
struct QtWidgets_PackedString QComboBox_ItemText(void* ptr, int index);
void* QComboBox_LineEdit(void* ptr);
int QComboBox_MaxCount(void* ptr);
int QComboBox_MaxVisibleItems(void* ptr);
int QComboBox_MinimumContentsLength(void* ptr);
void* QComboBox_Model(void* ptr);
int QComboBox_ModelColumn(void* ptr);
struct QtWidgets_PackedString QComboBox_PlaceholderText(void* ptr);
void QComboBox_RemoveItem(void* ptr, int index);
void* QComboBox_RootModelIndex(void* ptr);
void QComboBox_SetCompleter(void* ptr, void* completer);
void QComboBox_SetCurrentIndex(void* ptr, int index);
void QComboBox_SetCurrentIndexDefault(void* ptr, int index);
void QComboBox_SetCurrentText(void* ptr, struct QtWidgets_PackedString text);
void QComboBox_SetCurrentTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QComboBox_SetDuplicatesEnabled(void* ptr, char enable);
void QComboBox_SetEditText(void* ptr, struct QtWidgets_PackedString text);
void QComboBox_SetEditTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QComboBox_SetEditable(void* ptr, char editable);
void QComboBox_SetFrame(void* ptr, char vbo);
void QComboBox_SetIconSize(void* ptr, void* size);
void QComboBox_SetInsertPolicy(void* ptr, long long policy);
void QComboBox_SetItemData(void* ptr, int index, void* value, int role);
void QComboBox_SetItemDelegate(void* ptr, void* delegate);
void QComboBox_SetItemIcon(void* ptr, int index, void* icon);
void QComboBox_SetItemText(void* ptr, int index, struct QtWidgets_PackedString text);
void QComboBox_SetLineEdit(void* ptr, void* edit);
void QComboBox_SetMaxCount(void* ptr, int max);
void QComboBox_SetMaxVisibleItems(void* ptr, int maxItems);
void QComboBox_SetMinimumContentsLength(void* ptr, int characters);
void QComboBox_SetModel(void* ptr, void* model);
void QComboBox_SetModelColumn(void* ptr, int visibleColumn);
void QComboBox_SetPlaceholderText(void* ptr, struct QtWidgets_PackedString placeholderText);
void QComboBox_SetRootModelIndex(void* ptr, void* index);
void QComboBox_SetSizeAdjustPolicy(void* ptr, long long policy);
void QComboBox_SetValidator(void* ptr, void* validator);
void QComboBox_SetView(void* ptr, void* itemView);
void QComboBox_ShowPopup(void* ptr);
void QComboBox_ShowPopupDefault(void* ptr);
long long QComboBox_SizeAdjustPolicy(void* ptr);
void QComboBox_ConnectTextActivated(void* ptr, long long t);
void QComboBox_DisconnectTextActivated(void* ptr);
void QComboBox_TextActivated(void* ptr, struct QtWidgets_PackedString text);
void QComboBox_ConnectTextHighlighted(void* ptr, long long t);
void QComboBox_DisconnectTextHighlighted(void* ptr);
void QComboBox_TextHighlighted(void* ptr, struct QtWidgets_PackedString text);
void* QComboBox_Validator(void* ptr);
void* QComboBox_View(void* ptr);
void QComboBox_DestroyQComboBox(void* ptr);
void QComboBox_DestroyQComboBoxDefault(void* ptr);
void* QCommandLinkButton_NewQCommandLinkButton(void* parent);
void* QCommandLinkButton_NewQCommandLinkButton2(struct QtWidgets_PackedString text, void* parent);
void* QCommandLinkButton_NewQCommandLinkButton3(struct QtWidgets_PackedString text, struct QtWidgets_PackedString description, void* parent);
struct QtWidgets_PackedString QCommandLinkButton_Description(void* ptr);
void QCommandLinkButton_SetDescription(void* ptr, struct QtWidgets_PackedString description);
void QCommandLinkButton_DestroyQCommandLinkButton(void* ptr);
void QCommandLinkButton_DestroyQCommandLinkButtonDefault(void* ptr);
void* QCommonStyle_NewQCommonStyle();
void QCommonStyle_DrawComplexControl(void* ptr, long long cc, void* opt, void* p, void* widget);
void QCommonStyle_DrawComplexControlDefault(void* ptr, long long cc, void* opt, void* p, void* widget);
void QCommonStyle_DrawControl(void* ptr, long long element, void* opt, void* p, void* widget);
void QCommonStyle_DrawControlDefault(void* ptr, long long element, void* opt, void* p, void* widget);
void QCommonStyle_DrawPrimitive(void* ptr, long long pe, void* opt, void* p, void* widget);
void QCommonStyle_DrawPrimitiveDefault(void* ptr, long long pe, void* opt, void* p, void* widget);
void* QCommonStyle_GeneratedIconPixmap(void* ptr, long long iconMode, void* pixmap, void* opt);
void* QCommonStyle_GeneratedIconPixmapDefault(void* ptr, long long iconMode, void* pixmap, void* opt);
long long QCommonStyle_HitTestComplexControl(void* ptr, long long cc, void* opt, void* pt, void* widget);
long long QCommonStyle_HitTestComplexControlDefault(void* ptr, long long cc, void* opt, void* pt, void* widget);
int QCommonStyle_LayoutSpacing(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QCommonStyle_LayoutSpacingDefault(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QCommonStyle_PixelMetric(void* ptr, long long m, void* opt, void* widget);
int QCommonStyle_PixelMetricDefault(void* ptr, long long m, void* opt, void* widget);
void* QCommonStyle_SizeFromContents(void* ptr, long long ct, void* opt, void* csz, void* widget);
void* QCommonStyle_SizeFromContentsDefault(void* ptr, long long ct, void* opt, void* csz, void* widget);
void* QCommonStyle_StandardPixmap(void* ptr, long long sp, void* option, void* widget);
void* QCommonStyle_StandardPixmapDefault(void* ptr, long long sp, void* option, void* widget);
int QCommonStyle_StyleHint(void* ptr, long long sh, void* opt, void* widget, void* hret);
int QCommonStyle_StyleHintDefault(void* ptr, long long sh, void* opt, void* widget, void* hret);
void* QCommonStyle_SubControlRect(void* ptr, long long cc, void* opt, long long sc, void* widget);
void* QCommonStyle_SubControlRectDefault(void* ptr, long long cc, void* opt, long long sc, void* widget);
void* QCommonStyle_SubElementRect(void* ptr, long long sr, void* opt, void* widget);
void* QCommonStyle_SubElementRectDefault(void* ptr, long long sr, void* opt, void* widget);
void QCommonStyle_DestroyQCommonStyle(void* ptr);
void QCommonStyle_DestroyQCommonStyleDefault(void* ptr);
void* QCommonStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget);
void* QCommonStyle_StandardIconDefault(void* ptr, long long standardIcon, void* option, void* widget);
void* QCompleter_NewQCompleter(void* parent);
void* QCompleter_NewQCompleter2(void* model, void* parent);
void* QCompleter_NewQCompleter3(struct QtWidgets_PackedString list, void* parent);
void QCompleter_ConnectActivated(void* ptr, long long t);
void QCompleter_DisconnectActivated(void* ptr);
void QCompleter_Activated(void* ptr, struct QtWidgets_PackedString text);
void QCompleter_ConnectActivated2(void* ptr, long long t);
void QCompleter_DisconnectActivated2(void* ptr);
void QCompleter_Activated2(void* ptr, void* index);
long long QCompleter_CaseSensitivity(void* ptr);
void QCompleter_Complete(void* ptr, void* rect);
void QCompleter_CompleteDefault(void* ptr, void* rect);
int QCompleter_CompletionColumn(void* ptr);
int QCompleter_CompletionCount(void* ptr);
long long QCompleter_CompletionMode(void* ptr);
void* QCompleter_CompletionModel(void* ptr);
struct QtWidgets_PackedString QCompleter_CompletionPrefix(void* ptr);
int QCompleter_CompletionRole(void* ptr);
struct QtWidgets_PackedString QCompleter_CurrentCompletion(void* ptr);
void* QCompleter_CurrentIndex(void* ptr);
int QCompleter_CurrentRow(void* ptr);
char QCompleter_EventDefault(void* ptr, void* ev);
char QCompleter_EventFilterDefault(void* ptr, void* o, void* e);
long long QCompleter_FilterMode(void* ptr);
void QCompleter_ConnectHighlighted(void* ptr, long long t);
void QCompleter_DisconnectHighlighted(void* ptr);
void QCompleter_Highlighted(void* ptr, struct QtWidgets_PackedString text);
void QCompleter_ConnectHighlighted2(void* ptr, long long t);
void QCompleter_DisconnectHighlighted2(void* ptr);
void QCompleter_Highlighted2(void* ptr, void* index);
int QCompleter_MaxVisibleItems(void* ptr);
void* QCompleter_Model(void* ptr);
long long QCompleter_ModelSorting(void* ptr);
struct QtWidgets_PackedString QCompleter_PathFromIndex(void* ptr, void* index);
struct QtWidgets_PackedString QCompleter_PathFromIndexDefault(void* ptr, void* index);
void* QCompleter_Popup(void* ptr);
void QCompleter_SetCaseSensitivity(void* ptr, long long caseSensitivity);
void QCompleter_SetCompletionColumn(void* ptr, int column);
void QCompleter_SetCompletionMode(void* ptr, long long mode);
void QCompleter_SetCompletionPrefix(void* ptr, struct QtWidgets_PackedString prefix);
void QCompleter_SetCompletionPrefixDefault(void* ptr, struct QtWidgets_PackedString prefix);
void QCompleter_SetCompletionRole(void* ptr, int role);
char QCompleter_SetCurrentRow(void* ptr, int row);
void QCompleter_SetFilterMode(void* ptr, long long filterMode);
void QCompleter_SetMaxVisibleItems(void* ptr, int maxItems);
void QCompleter_SetModel(void* ptr, void* model);
void QCompleter_SetModelSorting(void* ptr, long long sorting);
void QCompleter_SetPopup(void* ptr, void* popup);
void QCompleter_SetWidget(void* ptr, void* widget);
void QCompleter_SetWrapAround(void* ptr, char wrap);
void QCompleter_SetWrapAroundDefault(void* ptr, char wrap);
struct QtWidgets_PackedString QCompleter_SplitPath(void* ptr, struct QtWidgets_PackedString path);
struct QtWidgets_PackedString QCompleter_SplitPathDefault(void* ptr, struct QtWidgets_PackedString path);
void* QCompleter_Widget(void* ptr);
char QCompleter_WrapAround(void* ptr);
void QCompleter_DestroyQCompleter(void* ptr);
void QCompleter_DestroyQCompleterDefault(void* ptr);
void* QCompleter___children_atList(void* ptr, int i);
void QCompleter___children_setList(void* ptr, void* i);
void* QCompleter___children_newList(void* ptr);
void* QCompleter___dynamicPropertyNames_atList(void* ptr, int i);
void QCompleter___dynamicPropertyNames_setList(void* ptr, void* i);
void* QCompleter___dynamicPropertyNames_newList(void* ptr);
void* QCompleter___findChildren_atList(void* ptr, int i);
void QCompleter___findChildren_setList(void* ptr, void* i);
void* QCompleter___findChildren_newList(void* ptr);
void* QCompleter___findChildren_atList3(void* ptr, int i);
void QCompleter___findChildren_setList3(void* ptr, void* i);
void* QCompleter___findChildren_newList3(void* ptr);
void QCompleter_ChildEventDefault(void* ptr, void* event);
void QCompleter_ConnectNotifyDefault(void* ptr, void* sign);
void QCompleter_CustomEventDefault(void* ptr, void* event);
void QCompleter_DeleteLaterDefault(void* ptr);
void QCompleter_DisconnectNotifyDefault(void* ptr, void* sign);
void* QCompleter_MetaObjectDefault(void* ptr);
void QCompleter_TimerEventDefault(void* ptr, void* event);
void* QDataWidgetMapper_NewQDataWidgetMapper(void* parent);
void QDataWidgetMapper_AddMapping(void* ptr, void* widget, int section);
void QDataWidgetMapper_AddMapping2(void* ptr, void* widget, int section, void* propertyName);
void QDataWidgetMapper_ClearMapping(void* ptr);
int QDataWidgetMapper_CurrentIndex(void* ptr);
void QDataWidgetMapper_ConnectCurrentIndexChanged(void* ptr, long long t);
void QDataWidgetMapper_DisconnectCurrentIndexChanged(void* ptr);
void QDataWidgetMapper_CurrentIndexChanged(void* ptr, int index);
void* QDataWidgetMapper_ItemDelegate(void* ptr);
void* QDataWidgetMapper_MappedPropertyName(void* ptr, void* widget);
int QDataWidgetMapper_MappedSection(void* ptr, void* widget);
void* QDataWidgetMapper_MappedWidgetAt(void* ptr, int section);
void* QDataWidgetMapper_Model(void* ptr);
long long QDataWidgetMapper_Orientation(void* ptr);
void QDataWidgetMapper_RemoveMapping(void* ptr, void* widget);
void QDataWidgetMapper_Revert(void* ptr);
void QDataWidgetMapper_RevertDefault(void* ptr);
void* QDataWidgetMapper_RootIndex(void* ptr);
void QDataWidgetMapper_SetCurrentIndex(void* ptr, int index);
void QDataWidgetMapper_SetCurrentIndexDefault(void* ptr, int index);
void QDataWidgetMapper_SetCurrentModelIndex(void* ptr, void* index);
void QDataWidgetMapper_SetCurrentModelIndexDefault(void* ptr, void* index);
void QDataWidgetMapper_SetItemDelegate(void* ptr, void* delegate);
void QDataWidgetMapper_SetModel(void* ptr, void* model);
void QDataWidgetMapper_SetOrientation(void* ptr, long long aOrientation);
void QDataWidgetMapper_SetRootIndex(void* ptr, void* index);
void QDataWidgetMapper_SetSubmitPolicy(void* ptr, long long policy);
char QDataWidgetMapper_Submit(void* ptr);
char QDataWidgetMapper_SubmitDefault(void* ptr);
long long QDataWidgetMapper_SubmitPolicy(void* ptr);
void QDataWidgetMapper_ToFirst(void* ptr);
void QDataWidgetMapper_ToFirstDefault(void* ptr);
void QDataWidgetMapper_ToLast(void* ptr);
void QDataWidgetMapper_ToLastDefault(void* ptr);
void QDataWidgetMapper_ToNext(void* ptr);
void QDataWidgetMapper_ToNextDefault(void* ptr);
void QDataWidgetMapper_ToPrevious(void* ptr);
void QDataWidgetMapper_ToPreviousDefault(void* ptr);
void QDataWidgetMapper_DestroyQDataWidgetMapper(void* ptr);
void QDataWidgetMapper_DestroyQDataWidgetMapperDefault(void* ptr);
void* QDataWidgetMapper___children_atList(void* ptr, int i);
void QDataWidgetMapper___children_setList(void* ptr, void* i);
void* QDataWidgetMapper___children_newList(void* ptr);
void* QDataWidgetMapper___dynamicPropertyNames_atList(void* ptr, int i);
void QDataWidgetMapper___dynamicPropertyNames_setList(void* ptr, void* i);
void* QDataWidgetMapper___dynamicPropertyNames_newList(void* ptr);
void* QDataWidgetMapper___findChildren_atList(void* ptr, int i);
void QDataWidgetMapper___findChildren_setList(void* ptr, void* i);
void* QDataWidgetMapper___findChildren_newList(void* ptr);
void* QDataWidgetMapper___findChildren_atList3(void* ptr, int i);
void QDataWidgetMapper___findChildren_setList3(void* ptr, void* i);
void* QDataWidgetMapper___findChildren_newList3(void* ptr);
void QDataWidgetMapper_ChildEventDefault(void* ptr, void* event);
void QDataWidgetMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QDataWidgetMapper_CustomEventDefault(void* ptr, void* event);
void QDataWidgetMapper_DeleteLaterDefault(void* ptr);
void QDataWidgetMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QDataWidgetMapper_EventDefault(void* ptr, void* e);
char QDataWidgetMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDataWidgetMapper_MetaObjectDefault(void* ptr);
void QDataWidgetMapper_TimerEventDefault(void* ptr, void* event);
void* QDateEdit_NewQDateEdit(void* parent);
void* QDateEdit_NewQDateEdit2(void* date, void* parent);
void QDateEdit_DestroyQDateEdit(void* ptr);
void QDateEdit_DestroyQDateEditDefault(void* ptr);
void* QDateTimeEdit_NewQDateTimeEdit(void* parent);
void* QDateTimeEdit_NewQDateTimeEdit2(void* datetime, void* parent);
void* QDateTimeEdit_NewQDateTimeEdit3(void* date, void* parent);
void* QDateTimeEdit_NewQDateTimeEdit4(void* ti, void* parent);
char QDateTimeEdit_CalendarPopup(void* ptr);
void* QDateTimeEdit_CalendarWidget(void* ptr);
void QDateTimeEdit_Clear(void* ptr);
void QDateTimeEdit_ClearDefault(void* ptr);
void QDateTimeEdit_ClearMaximumDate(void* ptr);
void QDateTimeEdit_ClearMaximumDateTime(void* ptr);
void QDateTimeEdit_ClearMaximumTime(void* ptr);
void QDateTimeEdit_ClearMinimumDate(void* ptr);
void QDateTimeEdit_ClearMinimumDateTime(void* ptr);
void QDateTimeEdit_ClearMinimumTime(void* ptr);
long long QDateTimeEdit_CurrentSection(void* ptr);
int QDateTimeEdit_CurrentSectionIndex(void* ptr);
void* QDateTimeEdit_Date(void* ptr);
void QDateTimeEdit_ConnectDateChanged(void* ptr, long long t);
void QDateTimeEdit_DisconnectDateChanged(void* ptr);
void QDateTimeEdit_DateChanged(void* ptr, void* date);
void* QDateTimeEdit_DateTime(void* ptr);
void QDateTimeEdit_ConnectDateTimeChanged(void* ptr, long long t);
void QDateTimeEdit_DisconnectDateTimeChanged(void* ptr);
void QDateTimeEdit_DateTimeChanged(void* ptr, void* datetime);
void* QDateTimeEdit_DateTimeFromText(void* ptr, struct QtWidgets_PackedString text);
void* QDateTimeEdit_DateTimeFromTextDefault(void* ptr, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QDateTimeEdit_DisplayFormat(void* ptr);
long long QDateTimeEdit_DisplayedSections(void* ptr);
void* QDateTimeEdit_MaximumDate(void* ptr);
void* QDateTimeEdit_MaximumDateTime(void* ptr);
void* QDateTimeEdit_MaximumTime(void* ptr);
void* QDateTimeEdit_MinimumDate(void* ptr);
void* QDateTimeEdit_MinimumDateTime(void* ptr);
void* QDateTimeEdit_MinimumTime(void* ptr);
long long QDateTimeEdit_SectionAt(void* ptr, int index);
int QDateTimeEdit_SectionCount(void* ptr);
struct QtWidgets_PackedString QDateTimeEdit_SectionText(void* ptr, long long section);
void QDateTimeEdit_SetCalendarPopup(void* ptr, char enable);
void QDateTimeEdit_SetCalendarWidget(void* ptr, void* calendarWidget);
void QDateTimeEdit_SetCurrentSection(void* ptr, long long section);
void QDateTimeEdit_SetCurrentSectionIndex(void* ptr, int index);
void QDateTimeEdit_SetDate(void* ptr, void* date);
void QDateTimeEdit_SetDateDefault(void* ptr, void* date);
void QDateTimeEdit_SetDateRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetDateTime(void* ptr, void* dateTime);
void QDateTimeEdit_SetDateTimeDefault(void* ptr, void* dateTime);
void QDateTimeEdit_SetDateTimeRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetDisplayFormat(void* ptr, struct QtWidgets_PackedString format);
void QDateTimeEdit_SetMaximumDate(void* ptr, void* max);
void QDateTimeEdit_SetMaximumDateTime(void* ptr, void* dt);
void QDateTimeEdit_SetMaximumTime(void* ptr, void* max);
void QDateTimeEdit_SetMinimumDate(void* ptr, void* min);
void QDateTimeEdit_SetMinimumDateTime(void* ptr, void* dt);
void QDateTimeEdit_SetMinimumTime(void* ptr, void* min);
void QDateTimeEdit_SetSelectedSection(void* ptr, long long section);
void QDateTimeEdit_SetTime(void* ptr, void* ti);
void QDateTimeEdit_SetTimeDefault(void* ptr, void* ti);
void QDateTimeEdit_SetTimeRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetTimeSpec(void* ptr, long long spec);
struct QtWidgets_PackedString QDateTimeEdit_TextFromDateTime(void* ptr, void* dateTime);
struct QtWidgets_PackedString QDateTimeEdit_TextFromDateTimeDefault(void* ptr, void* dateTime);
void* QDateTimeEdit_Time(void* ptr);
void QDateTimeEdit_ConnectTimeChanged(void* ptr, long long t);
void QDateTimeEdit_DisconnectTimeChanged(void* ptr);
void QDateTimeEdit_TimeChanged(void* ptr, void* ti);
long long QDateTimeEdit_TimeSpec(void* ptr);
void QDateTimeEdit_DestroyQDateTimeEdit(void* ptr);
void QDateTimeEdit_DestroyQDateTimeEditDefault(void* ptr);
void* QDesktopWidget_NewQDesktopWidget();
void* QDesktopWidget_AvailableGeometry(void* ptr, int screen);
void* QDesktopWidget_AvailableGeometry2(void* ptr, void* widget);
char QDesktopWidget_IsVirtualDesktop(void* ptr);
int QDesktopWidget_NumScreens(void* ptr);
int QDesktopWidget_PrimaryScreen(void* ptr);
void QDesktopWidget_ConnectPrimaryScreenChanged(void* ptr, long long t);
void QDesktopWidget_DisconnectPrimaryScreenChanged(void* ptr);
void QDesktopWidget_PrimaryScreenChanged(void* ptr);
void QDesktopWidget_ConnectResized(void* ptr, long long t);
void QDesktopWidget_DisconnectResized(void* ptr);
void QDesktopWidget_Resized(void* ptr, int screen);
void* QDesktopWidget_Screen(void* ptr, int screen);
int QDesktopWidget_ScreenCount(void* ptr);
void QDesktopWidget_ConnectScreenCountChanged(void* ptr, long long t);
void QDesktopWidget_DisconnectScreenCountChanged(void* ptr);
void QDesktopWidget_ScreenCountChanged(void* ptr, int newCount);
void* QDesktopWidget_ScreenGeometry(void* ptr, int screen);
void* QDesktopWidget_ScreenGeometry2(void* ptr, void* widget);
int QDesktopWidget_ScreenNumber(void* ptr, void* widget);
int QDesktopWidget_ScreenNumber2(void* ptr, void* point);
void QDesktopWidget_ConnectWorkAreaResized(void* ptr, long long t);
void QDesktopWidget_DisconnectWorkAreaResized(void* ptr);
void QDesktopWidget_WorkAreaResized(void* ptr, int screen);
void QDesktopWidget_DestroyQDesktopWidget(void* ptr);
void QDesktopWidget_DestroyQDesktopWidgetDefault(void* ptr);
void* QDial_NewQDial(void* parent);
void QDial_InitStyleOption(void* ptr, void* option);
int QDial_NotchSize(void* ptr);
double QDial_NotchTarget(void* ptr);
char QDial_NotchesVisible(void* ptr);
void QDial_SetNotchTarget(void* ptr, double target);
void QDial_SetNotchesVisible(void* ptr, char visible);
void QDial_SetNotchesVisibleDefault(void* ptr, char visible);
void QDial_SetWrapping(void* ptr, char on);
void QDial_SetWrappingDefault(void* ptr, char on);
char QDial_Wrapping(void* ptr);
void QDial_DestroyQDial(void* ptr);
void QDial_DestroyQDialDefault(void* ptr);
void* QDialog_NewQDialog(void* parent, long long ff);
void QDialog_Accept(void* ptr);
void QDialog_AcceptDefault(void* ptr);
void QDialog_ConnectAccepted(void* ptr, long long t);
void QDialog_DisconnectAccepted(void* ptr);
void QDialog_Accepted(void* ptr);
void QDialog_Done(void* ptr, int r);
void QDialog_DoneDefault(void* ptr, int r);
int QDialog_Exec(void* ptr);
int QDialog_ExecDefault(void* ptr);
void QDialog_ConnectFinished(void* ptr, long long t);
void QDialog_DisconnectFinished(void* ptr);
void QDialog_Finished(void* ptr, int result);
char QDialog_IsSizeGripEnabled(void* ptr);
void QDialog_Open(void* ptr);
void QDialog_OpenDefault(void* ptr);
void QDialog_Reject(void* ptr);
void QDialog_RejectDefault(void* ptr);
void QDialog_ConnectRejected(void* ptr, long long t);
void QDialog_DisconnectRejected(void* ptr);
void QDialog_Rejected(void* ptr);
int QDialog_Result(void* ptr);
void QDialog_SetModal(void* ptr, char modal);
void QDialog_SetResult(void* ptr, int i);
void QDialog_SetSizeGripEnabled(void* ptr, char vbo);
void QDialog_SetVisible(void* ptr, char visible);
void QDialog_SetVisibleDefault(void* ptr, char visible);
void QDialog_DestroyQDialog(void* ptr);
void QDialog_DestroyQDialogDefault(void* ptr);
int QDialogButtonBox_AndroidLayout_Type();
void* QDialogButtonBox_NewQDialogButtonBox(void* parent);
void* QDialogButtonBox_NewQDialogButtonBox2(long long orientation, void* parent);
void* QDialogButtonBox_NewQDialogButtonBox3(long long buttons, void* parent);
void* QDialogButtonBox_NewQDialogButtonBox4(long long buttons, long long orientation, void* parent);
void QDialogButtonBox_ConnectAccepted(void* ptr, long long t);
void QDialogButtonBox_DisconnectAccepted(void* ptr);
void QDialogButtonBox_Accepted(void* ptr);
void QDialogButtonBox_AddButton(void* ptr, void* button, long long role);
void* QDialogButtonBox_AddButton2(void* ptr, struct QtWidgets_PackedString text, long long role);
void* QDialogButtonBox_AddButton3(void* ptr, long long button);
void* QDialogButtonBox_Button(void* ptr, long long which);
long long QDialogButtonBox_ButtonRole(void* ptr, void* button);
struct QtWidgets_PackedList QDialogButtonBox_Buttons(void* ptr);
char QDialogButtonBox_CenterButtons(void* ptr);
void QDialogButtonBox_Clear(void* ptr);
void QDialogButtonBox_ConnectClicked(void* ptr, long long t);
void QDialogButtonBox_DisconnectClicked(void* ptr);
void QDialogButtonBox_Clicked(void* ptr, void* button);
void QDialogButtonBox_ConnectHelpRequested(void* ptr, long long t);
void QDialogButtonBox_DisconnectHelpRequested(void* ptr);
void QDialogButtonBox_HelpRequested(void* ptr);
long long QDialogButtonBox_Orientation(void* ptr);
void QDialogButtonBox_ConnectRejected(void* ptr, long long t);
void QDialogButtonBox_DisconnectRejected(void* ptr);
void QDialogButtonBox_Rejected(void* ptr);
void QDialogButtonBox_RemoveButton(void* ptr, void* button);
void QDialogButtonBox_SetCenterButtons(void* ptr, char center);
void QDialogButtonBox_SetOrientation(void* ptr, long long orientation);
void QDialogButtonBox_SetStandardButtons(void* ptr, long long buttons);
long long QDialogButtonBox_StandardButton(void* ptr, void* button);
long long QDialogButtonBox_StandardButtons(void* ptr);
void QDialogButtonBox_DestroyQDialogButtonBox(void* ptr);
void QDialogButtonBox_DestroyQDialogButtonBoxDefault(void* ptr);
void* QDialogButtonBox___buttons_atList(void* ptr, int i);
void QDialogButtonBox___buttons_setList(void* ptr, void* i);
void* QDialogButtonBox___buttons_newList(void* ptr);
int QDirModel_FilePathRole_Type();
void* QDirModel_NewQDirModel(struct QtWidgets_PackedString nameFilters, long long filters, long long sort, void* parent);
void* QDirModel_NewQDirModel2(void* parent);
int QDirModel_ColumnCount(void* ptr, void* parent);
int QDirModel_ColumnCountDefault(void* ptr, void* parent);
void* QDirModel_Data(void* ptr, void* index, int role);
void* QDirModel_DataDefault(void* ptr, void* index, int role);
char QDirModel_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* QDirModel_FileIcon(void* ptr, void* index);
void* QDirModel_FileInfo(void* ptr, void* index);
struct QtWidgets_PackedString QDirModel_FileName(void* ptr, void* index);
struct QtWidgets_PackedString QDirModel_FilePath(void* ptr, void* index);
long long QDirModel_Filter(void* ptr);
long long QDirModel_FlagsDefault(void* ptr, void* index);
char QDirModel_HasChildrenDefault(void* ptr, void* parent);
void* QDirModel_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
void* QDirModel_IconProvider(void* ptr);
void* QDirModel_Index(void* ptr, int row, int column, void* parent);
void* QDirModel_IndexDefault(void* ptr, int row, int column, void* parent);
void* QDirModel_Index2(void* ptr, struct QtWidgets_PackedString path, int column);
char QDirModel_IsDir(void* ptr, void* index);
char QDirModel_IsReadOnly(void* ptr);
char QDirModel_LazyChildCount(void* ptr);
void* QDirModel_MimeDataDefault(void* ptr, void* indexes);
struct QtWidgets_PackedString QDirModel_MimeTypesDefault(void* ptr);
void* QDirModel_Mkdir(void* ptr, void* parent, struct QtWidgets_PackedString name);
struct QtWidgets_PackedString QDirModel_NameFilters(void* ptr);
void* QDirModel_Parent(void* ptr, void* child);
void* QDirModel_ParentDefault(void* ptr, void* child);
void QDirModel_Refresh(void* ptr, void* parent);
void QDirModel_RefreshDefault(void* ptr, void* parent);
char QDirModel_Remove(void* ptr, void* index);
char QDirModel_ResolveSymlinks(void* ptr);
char QDirModel_Rmdir(void* ptr, void* index);
int QDirModel_RowCount(void* ptr, void* parent);
int QDirModel_RowCountDefault(void* ptr, void* parent);
char QDirModel_SetDataDefault(void* ptr, void* index, void* value, int role);
void QDirModel_SetFilter(void* ptr, long long filters);
void QDirModel_SetIconProvider(void* ptr, void* provider);
void QDirModel_SetLazyChildCount(void* ptr, char enable);
void QDirModel_SetNameFilters(void* ptr, struct QtWidgets_PackedString filters);
void QDirModel_SetReadOnly(void* ptr, char enable);
void QDirModel_SetResolveSymlinks(void* ptr, char enable);
void QDirModel_SetSorting(void* ptr, long long sort);
void QDirModel_SortDefault(void* ptr, int column, long long order);
long long QDirModel_Sorting(void* ptr);
long long QDirModel_SupportedDropActionsDefault(void* ptr);
void QDirModel_DestroyQDirModel(void* ptr);
void QDirModel_DestroyQDirModelDefault(void* ptr);
void* QDirModel___mimeData_indexes_atList(void* ptr, int i);
void QDirModel___mimeData_indexes_setList(void* ptr, void* i);
void* QDirModel___mimeData_indexes_newList(void* ptr);
void* QDirModel___changePersistentIndexList_from_atList(void* ptr, int i);
void QDirModel___changePersistentIndexList_from_setList(void* ptr, void* i);
void* QDirModel___changePersistentIndexList_from_newList(void* ptr);
void* QDirModel___changePersistentIndexList_to_atList(void* ptr, int i);
void QDirModel___changePersistentIndexList_to_setList(void* ptr, void* i);
void* QDirModel___changePersistentIndexList_to_newList(void* ptr);
int QDirModel___dataChanged_roles_atList(void* ptr, int i);
void QDirModel___dataChanged_roles_setList(void* ptr, int i);
void* QDirModel___dataChanged_roles_newList(void* ptr);
void* QDirModel___itemData_atList(void* ptr, int v, int i);
void QDirModel___itemData_setList(void* ptr, int key, void* i);
void* QDirModel___itemData_newList(void* ptr);
struct QtWidgets_PackedList QDirModel___itemData_keyList(void* ptr);
void* QDirModel___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void QDirModel___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* QDirModel___layoutAboutToBeChanged_parents_newList(void* ptr);
void* QDirModel___layoutChanged_parents_atList(void* ptr, int i);
void QDirModel___layoutChanged_parents_setList(void* ptr, void* i);
void* QDirModel___layoutChanged_parents_newList(void* ptr);
void* QDirModel___match_atList(void* ptr, int i);
void QDirModel___match_setList(void* ptr, void* i);
void* QDirModel___match_newList(void* ptr);
void* QDirModel___persistentIndexList_atList(void* ptr, int i);
void QDirModel___persistentIndexList_setList(void* ptr, void* i);
void* QDirModel___persistentIndexList_newList(void* ptr);
void* QDirModel___roleNames_atList(void* ptr, int v, int i);
void QDirModel___roleNames_setList(void* ptr, int key, void* i);
void* QDirModel___roleNames_newList(void* ptr);
struct QtWidgets_PackedList QDirModel___roleNames_keyList(void* ptr);
void* QDirModel___setItemData_roles_atList(void* ptr, int v, int i);
void QDirModel___setItemData_roles_setList(void* ptr, int key, void* i);
void* QDirModel___setItemData_roles_newList(void* ptr);
struct QtWidgets_PackedList QDirModel___setItemData_roles_keyList(void* ptr);
int QDirModel_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void QDirModel_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* QDirModel_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int QDirModel_____itemData_keyList_atList(void* ptr, int i);
void QDirModel_____itemData_keyList_setList(void* ptr, int i);
void* QDirModel_____itemData_keyList_newList(void* ptr);
int QDirModel_____roleNames_keyList_atList(void* ptr, int i);
void QDirModel_____roleNames_keyList_setList(void* ptr, int i);
void* QDirModel_____roleNames_keyList_newList(void* ptr);
int QDirModel_____setItemData_roles_keyList_atList(void* ptr, int i);
void QDirModel_____setItemData_roles_keyList_setList(void* ptr, int i);
void* QDirModel_____setItemData_roles_keyList_newList(void* ptr);
int QDirModel_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void QDirModel_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* QDirModel_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* QDirModel___children_atList(void* ptr, int i);
void QDirModel___children_setList(void* ptr, void* i);
void* QDirModel___children_newList(void* ptr);
void* QDirModel___dynamicPropertyNames_atList(void* ptr, int i);
void QDirModel___dynamicPropertyNames_setList(void* ptr, void* i);
void* QDirModel___dynamicPropertyNames_newList(void* ptr);
void* QDirModel___findChildren_atList(void* ptr, int i);
void QDirModel___findChildren_setList(void* ptr, void* i);
void* QDirModel___findChildren_newList(void* ptr);
void* QDirModel___findChildren_atList3(void* ptr, int i);
void QDirModel___findChildren_setList3(void* ptr, void* i);
void* QDirModel___findChildren_newList3(void* ptr);
void* QDirModel_BuddyDefault(void* ptr, void* index);
char QDirModel_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char QDirModel_CanFetchMoreDefault(void* ptr, void* parent);
void QDirModel_FetchMoreDefault(void* ptr, void* parent);
char QDirModel_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char QDirModel_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct QtWidgets_PackedList QDirModel_ItemDataDefault(void* ptr, void* index);
struct QtWidgets_PackedList QDirModel_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
char QDirModel_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char QDirModel_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char QDirModel_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char QDirModel_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void QDirModel_ResetInternalDataDefault(void* ptr);
void QDirModel_RevertDefault(void* ptr);
struct QtWidgets_PackedList QDirModel_RoleNamesDefault(void* ptr);
char QDirModel_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char QDirModel_SetItemDataDefault(void* ptr, void* index, void* roles);
void* QDirModel_SiblingDefault(void* ptr, int row, int column, void* index);
void* QDirModel_SpanDefault(void* ptr, void* index);
char QDirModel_SubmitDefault(void* ptr);
long long QDirModel_SupportedDragActionsDefault(void* ptr);
void QDirModel_ChildEventDefault(void* ptr, void* event);
void QDirModel_ConnectNotifyDefault(void* ptr, void* sign);
void QDirModel_CustomEventDefault(void* ptr, void* event);
void QDirModel_DeleteLaterDefault(void* ptr);
void QDirModel_DisconnectNotifyDefault(void* ptr, void* sign);
char QDirModel_EventDefault(void* ptr, void* e);
char QDirModel_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDirModel_MetaObjectDefault(void* ptr);
void QDirModel_TimerEventDefault(void* ptr, void* event);
void* QDockWidget_NewQDockWidget(struct QtWidgets_PackedString title, void* parent, long long flags);
void* QDockWidget_NewQDockWidget2(void* parent, long long flags);
long long QDockWidget_AllowedAreas(void* ptr);
void QDockWidget_ConnectAllowedAreasChanged(void* ptr, long long t);
void QDockWidget_DisconnectAllowedAreasChanged(void* ptr);
void QDockWidget_AllowedAreasChanged(void* ptr, long long allowedAreas);
void QDockWidget_ConnectDockLocationChanged(void* ptr, long long t);
void QDockWidget_DisconnectDockLocationChanged(void* ptr);
void QDockWidget_DockLocationChanged(void* ptr, long long area);
long long QDockWidget_Features(void* ptr);
void QDockWidget_ConnectFeaturesChanged(void* ptr, long long t);
void QDockWidget_DisconnectFeaturesChanged(void* ptr);
void QDockWidget_FeaturesChanged(void* ptr, long long features);
void QDockWidget_InitStyleOption(void* ptr, void* option);
char QDockWidget_IsAreaAllowed(void* ptr, long long area);
char QDockWidget_IsFloating(void* ptr);
void QDockWidget_SetAllowedAreas(void* ptr, long long areas);
void QDockWidget_SetFeatures(void* ptr, long long features);
void QDockWidget_SetFloating(void* ptr, char floating);
void QDockWidget_SetTitleBarWidget(void* ptr, void* widget);
void QDockWidget_SetWidget(void* ptr, void* widget);
void* QDockWidget_TitleBarWidget(void* ptr);
void* QDockWidget_ToggleViewAction(void* ptr);
void QDockWidget_ConnectTopLevelChanged(void* ptr, long long t);
void QDockWidget_DisconnectTopLevelChanged(void* ptr);
void QDockWidget_TopLevelChanged(void* ptr, char topLevel);
void QDockWidget_ConnectVisibilityChanged(void* ptr, long long t);
void QDockWidget_DisconnectVisibilityChanged(void* ptr);
void QDockWidget_VisibilityChanged(void* ptr, char visible);
void* QDockWidget_Widget(void* ptr);
void QDockWidget_DestroyQDockWidget(void* ptr);
void QDockWidget_DestroyQDockWidgetDefault(void* ptr);
void* QDoubleSpinBox_NewQDoubleSpinBox(void* parent);
struct QtWidgets_PackedString QDoubleSpinBox_CleanText(void* ptr);
int QDoubleSpinBox_Decimals(void* ptr);
double QDoubleSpinBox_Maximum(void* ptr);
double QDoubleSpinBox_Minimum(void* ptr);
struct QtWidgets_PackedString QDoubleSpinBox_Prefix(void* ptr);
void QDoubleSpinBox_SetDecimals(void* ptr, int prec);
void QDoubleSpinBox_SetMaximum(void* ptr, double max);
void QDoubleSpinBox_SetMinimum(void* ptr, double min);
void QDoubleSpinBox_SetPrefix(void* ptr, struct QtWidgets_PackedString prefix);
void QDoubleSpinBox_SetRange(void* ptr, double minimum, double maximum);
void QDoubleSpinBox_SetSingleStep(void* ptr, double val);
void QDoubleSpinBox_SetStepType(void* ptr, long long stepType);
void QDoubleSpinBox_SetSuffix(void* ptr, struct QtWidgets_PackedString suffix);
void QDoubleSpinBox_SetValue(void* ptr, double val);
void QDoubleSpinBox_SetValueDefault(void* ptr, double val);
double QDoubleSpinBox_SingleStep(void* ptr);
long long QDoubleSpinBox_StepType(void* ptr);
struct QtWidgets_PackedString QDoubleSpinBox_Suffix(void* ptr);
void QDoubleSpinBox_ConnectTextChanged(void* ptr, long long t);
void QDoubleSpinBox_DisconnectTextChanged(void* ptr);
void QDoubleSpinBox_TextChanged(void* ptr, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QDoubleSpinBox_TextFromValue(void* ptr, double value);
struct QtWidgets_PackedString QDoubleSpinBox_TextFromValueDefault(void* ptr, double value);
double QDoubleSpinBox_Value(void* ptr);
void QDoubleSpinBox_ConnectValueChanged(void* ptr, long long t);
void QDoubleSpinBox_DisconnectValueChanged(void* ptr);
void QDoubleSpinBox_ValueChanged(void* ptr, double d);
double QDoubleSpinBox_ValueFromText(void* ptr, struct QtWidgets_PackedString text);
double QDoubleSpinBox_ValueFromTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QDoubleSpinBox_DestroyQDoubleSpinBox(void* ptr);
void QDoubleSpinBox_DestroyQDoubleSpinBoxDefault(void* ptr);
void* QErrorMessage_NewQErrorMessage(void* parent);
void QErrorMessage_Done(void* ptr, int a);
void QErrorMessage_DoneDefault(void* ptr, int a);
void* QErrorMessage_QErrorMessage_QtHandler();
void QErrorMessage_ShowMessage(void* ptr, struct QtWidgets_PackedString message);
void QErrorMessage_ShowMessageDefault(void* ptr, struct QtWidgets_PackedString message);
void QErrorMessage_ShowMessage2(void* ptr, struct QtWidgets_PackedString message, struct QtWidgets_PackedString ty);
void QErrorMessage_ShowMessage2Default(void* ptr, struct QtWidgets_PackedString message, struct QtWidgets_PackedString ty);
void QErrorMessage_DestroyQErrorMessage(void* ptr);
void QErrorMessage_DestroyQErrorMessageDefault(void* ptr);
void* QFileDialog_NewQFileDialog(void* parent, long long flags);
void* QFileDialog_NewQFileDialog2(void* parent, struct QtWidgets_PackedString caption, struct QtWidgets_PackedString directory, struct QtWidgets_PackedString filter);
void QFileDialog_Accept(void* ptr);
void QFileDialog_AcceptDefault(void* ptr);
long long QFileDialog_AcceptMode(void* ptr);
char QFileDialog_ConfirmOverwrite(void* ptr);
void QFileDialog_ConnectCurrentChanged(void* ptr, long long t);
void QFileDialog_DisconnectCurrentChanged(void* ptr);
void QFileDialog_CurrentChanged(void* ptr, struct QtWidgets_PackedString path);
void QFileDialog_ConnectCurrentUrlChanged(void* ptr, long long t);
void QFileDialog_DisconnectCurrentUrlChanged(void* ptr);
void QFileDialog_CurrentUrlChanged(void* ptr, void* url);
struct QtWidgets_PackedString QFileDialog_DefaultSuffix(void* ptr);
void* QFileDialog_Directory(void* ptr);
void QFileDialog_ConnectDirectoryEntered(void* ptr, long long t);
void QFileDialog_DisconnectDirectoryEntered(void* ptr);
void QFileDialog_DirectoryEntered(void* ptr, struct QtWidgets_PackedString directory);
void* QFileDialog_DirectoryUrl(void* ptr);
void QFileDialog_ConnectDirectoryUrlEntered(void* ptr, long long t);
void QFileDialog_DisconnectDirectoryUrlEntered(void* ptr);
void QFileDialog_DirectoryUrlEntered(void* ptr, void* directory);
void QFileDialog_Done(void* ptr, int result);
void QFileDialog_DoneDefault(void* ptr, int result);
long long QFileDialog_FileMode(void* ptr);
void QFileDialog_ConnectFileSelected(void* ptr, long long t);
void QFileDialog_DisconnectFileSelected(void* ptr);
void QFileDialog_FileSelected(void* ptr, struct QtWidgets_PackedString file);
void QFileDialog_ConnectFilesSelected(void* ptr, long long t);
void QFileDialog_DisconnectFilesSelected(void* ptr);
void QFileDialog_FilesSelected(void* ptr, struct QtWidgets_PackedString selected);
long long QFileDialog_Filter(void* ptr);
void QFileDialog_ConnectFilterSelected(void* ptr, long long t);
void QFileDialog_DisconnectFilterSelected(void* ptr);
void QFileDialog_FilterSelected(void* ptr, struct QtWidgets_PackedString filter);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetExistingDirectory(void* parent, struct QtWidgets_PackedString caption, struct QtWidgets_PackedString dir, long long options);
void* QFileDialog_QFileDialog_GetExistingDirectoryUrl(void* parent, struct QtWidgets_PackedString caption, void* dir, long long options, struct QtWidgets_PackedString supportedSchemes);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetOpenFileName(void* parent, struct QtWidgets_PackedString caption, struct QtWidgets_PackedString dir, struct QtWidgets_PackedString filter, struct QtWidgets_PackedString selectedFilter, long long options);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetOpenFileNames(void* parent, struct QtWidgets_PackedString caption, struct QtWidgets_PackedString dir, struct QtWidgets_PackedString filter, struct QtWidgets_PackedString selectedFilter, long long options);
void* QFileDialog_QFileDialog_GetOpenFileUrl(void* parent, struct QtWidgets_PackedString caption, void* dir, struct QtWidgets_PackedString filter, struct QtWidgets_PackedString selectedFilter, long long options, struct QtWidgets_PackedString supportedSchemes);
struct QtWidgets_PackedList QFileDialog_QFileDialog_GetOpenFileUrls(void* parent, struct QtWidgets_PackedString caption, void* dir, struct QtWidgets_PackedString filter, struct QtWidgets_PackedString selectedFilter, long long options, struct QtWidgets_PackedString supportedSchemes);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetSaveFileName(void* parent, struct QtWidgets_PackedString caption, struct QtWidgets_PackedString dir, struct QtWidgets_PackedString filter, struct QtWidgets_PackedString selectedFilter, long long options);
void* QFileDialog_QFileDialog_GetSaveFileUrl(void* parent, struct QtWidgets_PackedString caption, void* dir, struct QtWidgets_PackedString filter, struct QtWidgets_PackedString selectedFilter, long long options, struct QtWidgets_PackedString supportedSchemes);
struct QtWidgets_PackedString QFileDialog_History(void* ptr);
void* QFileDialog_IconProvider(void* ptr);
char QFileDialog_IsNameFilterDetailsVisible(void* ptr);
char QFileDialog_IsReadOnly(void* ptr);
void* QFileDialog_ItemDelegate(void* ptr);
struct QtWidgets_PackedString QFileDialog_LabelText(void* ptr, long long label);
struct QtWidgets_PackedString QFileDialog_MimeTypeFilters(void* ptr);
struct QtWidgets_PackedString QFileDialog_NameFilters(void* ptr);
void QFileDialog_Open(void* ptr, void* receiver, char* member);
long long QFileDialog_Options(void* ptr);
void* QFileDialog_ProxyModel(void* ptr);
char QFileDialog_ResolveSymlinks(void* ptr);
char QFileDialog_RestoreState(void* ptr, void* state);
void QFileDialog_QFileDialog_SaveFileContent(void* fileContent, struct QtWidgets_PackedString fileNameHint);
void* QFileDialog_SaveState(void* ptr);
void QFileDialog_SelectFile(void* ptr, struct QtWidgets_PackedString filename);
void QFileDialog_SelectMimeTypeFilter(void* ptr, struct QtWidgets_PackedString filter);
void QFileDialog_SelectNameFilter(void* ptr, struct QtWidgets_PackedString filter);
void QFileDialog_SelectUrl(void* ptr, void* url);
struct QtWidgets_PackedString QFileDialog_SelectedFiles(void* ptr);
struct QtWidgets_PackedString QFileDialog_SelectedMimeTypeFilter(void* ptr);
struct QtWidgets_PackedString QFileDialog_SelectedNameFilter(void* ptr);
struct QtWidgets_PackedList QFileDialog_SelectedUrls(void* ptr);
void QFileDialog_SetAcceptMode(void* ptr, long long mode);
void QFileDialog_SetConfirmOverwrite(void* ptr, char enabled);
void QFileDialog_SetDefaultSuffix(void* ptr, struct QtWidgets_PackedString suffix);
void QFileDialog_SetDirectory(void* ptr, struct QtWidgets_PackedString directory);
void QFileDialog_SetDirectory2(void* ptr, void* directory);
void QFileDialog_SetDirectoryUrl(void* ptr, void* directory);
void QFileDialog_SetFileMode(void* ptr, long long mode);
void QFileDialog_SetFilter(void* ptr, long long filters);
void QFileDialog_SetHistory(void* ptr, struct QtWidgets_PackedString paths);
void QFileDialog_SetIconProvider(void* ptr, void* provider);
void QFileDialog_SetItemDelegate(void* ptr, void* delegate);
void QFileDialog_SetLabelText(void* ptr, long long label, struct QtWidgets_PackedString text);
void QFileDialog_SetMimeTypeFilters(void* ptr, struct QtWidgets_PackedString filters);
void QFileDialog_SetNameFilter(void* ptr, struct QtWidgets_PackedString filter);
void QFileDialog_SetNameFilterDetailsVisible(void* ptr, char enabled);
void QFileDialog_SetNameFilters(void* ptr, struct QtWidgets_PackedString filters);
void QFileDialog_SetOption(void* ptr, long long option, char on);
void QFileDialog_SetOptions(void* ptr, long long options);
void QFileDialog_SetProxyModel(void* ptr, void* proxyModel);
void QFileDialog_SetReadOnly(void* ptr, char enabled);
void QFileDialog_SetResolveSymlinks(void* ptr, char enabled);
void QFileDialog_SetSidebarUrls(void* ptr, void* urls);
void QFileDialog_SetSupportedSchemes(void* ptr, struct QtWidgets_PackedString schemes);
void QFileDialog_SetViewMode(void* ptr, long long mode);
struct QtWidgets_PackedList QFileDialog_SidebarUrls(void* ptr);
struct QtWidgets_PackedString QFileDialog_SupportedSchemes(void* ptr);
char QFileDialog_TestOption(void* ptr, long long option);
void QFileDialog_ConnectUrlSelected(void* ptr, long long t);
void QFileDialog_DisconnectUrlSelected(void* ptr);
void QFileDialog_UrlSelected(void* ptr, void* url);
void QFileDialog_ConnectUrlsSelected(void* ptr, long long t);
void QFileDialog_DisconnectUrlsSelected(void* ptr);
void QFileDialog_UrlsSelected(void* ptr, void* urls);
long long QFileDialog_ViewMode(void* ptr);
void QFileDialog_DestroyQFileDialog(void* ptr);
void QFileDialog_DestroyQFileDialogDefault(void* ptr);
void* QFileDialog___getOpenFileUrls_atList(void* ptr, int i);
void QFileDialog___getOpenFileUrls_setList(void* ptr, void* i);
void* QFileDialog___getOpenFileUrls_newList(void* ptr);
void* QFileDialog___selectedUrls_atList(void* ptr, int i);
void QFileDialog___selectedUrls_setList(void* ptr, void* i);
void* QFileDialog___selectedUrls_newList(void* ptr);
void* QFileDialog___setSidebarUrls_urls_atList(void* ptr, int i);
void QFileDialog___setSidebarUrls_urls_setList(void* ptr, void* i);
void* QFileDialog___setSidebarUrls_urls_newList(void* ptr);
void* QFileDialog___sidebarUrls_atList(void* ptr, int i);
void QFileDialog___sidebarUrls_setList(void* ptr, void* i);
void* QFileDialog___sidebarUrls_newList(void* ptr);
void* QFileDialog___urlsSelected_urls_atList(void* ptr, int i);
void QFileDialog___urlsSelected_urls_setList(void* ptr, void* i);
void* QFileDialog___urlsSelected_urls_newList(void* ptr);
void* QFileIconProvider_NewQFileIconProvider();
void* QFileIconProvider_Icon(void* ptr, long long ty);
void* QFileIconProvider_IconDefault(void* ptr, long long ty);
void* QFileIconProvider_Icon2(void* ptr, void* info);
void* QFileIconProvider_Icon2Default(void* ptr, void* info);
long long QFileIconProvider_Options(void* ptr);
void QFileIconProvider_SetOptions(void* ptr, long long options);
struct QtWidgets_PackedString QFileIconProvider_Type(void* ptr, void* info);
struct QtWidgets_PackedString QFileIconProvider_TypeDefault(void* ptr, void* info);
void QFileIconProvider_DestroyQFileIconProvider(void* ptr);
void QFileIconProvider_DestroyQFileIconProviderDefault(void* ptr);
int QFileSystemModel_FilePathRole_Type();
int QFileSystemModel_FileNameRole_Type();
int QFileSystemModel_FilePermissions_Type();
void* QFileSystemModel_NewQFileSystemModel(void* parent);
char QFileSystemModel_CanFetchMoreDefault(void* ptr, void* parent);
int QFileSystemModel_ColumnCount(void* ptr, void* parent);
int QFileSystemModel_ColumnCountDefault(void* ptr, void* parent);
void* QFileSystemModel_Data(void* ptr, void* index, int role);
void* QFileSystemModel_DataDefault(void* ptr, void* index, int role);
void QFileSystemModel_ConnectDirectoryLoaded(void* ptr, long long t);
void QFileSystemModel_DisconnectDirectoryLoaded(void* ptr);
void QFileSystemModel_DirectoryLoaded(void* ptr, struct QtWidgets_PackedString path);
char QFileSystemModel_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char QFileSystemModel_EventDefault(void* ptr, void* event);
void QFileSystemModel_FetchMoreDefault(void* ptr, void* parent);
void* QFileSystemModel_FileIcon(void* ptr, void* index);
void* QFileSystemModel_FileInfo(void* ptr, void* index);
struct QtWidgets_PackedString QFileSystemModel_FileName(void* ptr, void* index);
struct QtWidgets_PackedString QFileSystemModel_FilePath(void* ptr, void* index);
void QFileSystemModel_ConnectFileRenamed(void* ptr, long long t);
void QFileSystemModel_DisconnectFileRenamed(void* ptr);
void QFileSystemModel_FileRenamed(void* ptr, struct QtWidgets_PackedString path, struct QtWidgets_PackedString oldName, struct QtWidgets_PackedString newName);
long long QFileSystemModel_Filter(void* ptr);
long long QFileSystemModel_FlagsDefault(void* ptr, void* index);
char QFileSystemModel_HasChildrenDefault(void* ptr, void* parent);
void* QFileSystemModel_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
void* QFileSystemModel_IconProvider(void* ptr);
void* QFileSystemModel_Index(void* ptr, int row, int column, void* parent);
void* QFileSystemModel_IndexDefault(void* ptr, int row, int column, void* parent);
void* QFileSystemModel_Index2(void* ptr, struct QtWidgets_PackedString path, int column);
char QFileSystemModel_IsDir(void* ptr, void* index);
char QFileSystemModel_IsReadOnly(void* ptr);
void* QFileSystemModel_LastModified(void* ptr, void* index);
void* QFileSystemModel_MimeDataDefault(void* ptr, void* indexes);
struct QtWidgets_PackedString QFileSystemModel_MimeTypesDefault(void* ptr);
void* QFileSystemModel_Mkdir(void* ptr, void* parent, struct QtWidgets_PackedString name);
void* QFileSystemModel_MyComputer(void* ptr, int role);
char QFileSystemModel_NameFilterDisables(void* ptr);
struct QtWidgets_PackedString QFileSystemModel_NameFilters(void* ptr);
long long QFileSystemModel_Options(void* ptr);
void* QFileSystemModel_Parent(void* ptr, void* index);
void* QFileSystemModel_ParentDefault(void* ptr, void* index);
char QFileSystemModel_Remove(void* ptr, void* index);
char QFileSystemModel_ResolveSymlinks(void* ptr);
char QFileSystemModel_Rmdir(void* ptr, void* index);
void* QFileSystemModel_RootDirectory(void* ptr);
struct QtWidgets_PackedString QFileSystemModel_RootPath(void* ptr);
void QFileSystemModel_ConnectRootPathChanged(void* ptr, long long t);
void QFileSystemModel_DisconnectRootPathChanged(void* ptr);
void QFileSystemModel_RootPathChanged(void* ptr, struct QtWidgets_PackedString newPath);
int QFileSystemModel_RowCount(void* ptr, void* parent);
int QFileSystemModel_RowCountDefault(void* ptr, void* parent);
char QFileSystemModel_SetDataDefault(void* ptr, void* idx, void* value, int role);
void QFileSystemModel_SetFilter(void* ptr, long long filters);
void QFileSystemModel_SetIconProvider(void* ptr, void* provider);
void QFileSystemModel_SetNameFilterDisables(void* ptr, char enable);
void QFileSystemModel_SetNameFilters(void* ptr, struct QtWidgets_PackedString filters);
void QFileSystemModel_SetOption(void* ptr, long long option, char on);
void QFileSystemModel_SetOptions(void* ptr, long long options);
void QFileSystemModel_SetReadOnly(void* ptr, char enable);
void QFileSystemModel_SetResolveSymlinks(void* ptr, char enable);
void* QFileSystemModel_SetRootPath(void* ptr, struct QtWidgets_PackedString newPath);
void* QFileSystemModel_SiblingDefault(void* ptr, int row, int column, void* idx);
long long QFileSystemModel_Size(void* ptr, void* index);
void QFileSystemModel_SortDefault(void* ptr, int column, long long order);
long long QFileSystemModel_SupportedDropActionsDefault(void* ptr);
char QFileSystemModel_TestOption(void* ptr, long long option);
void QFileSystemModel_TimerEventDefault(void* ptr, void* event);
struct QtWidgets_PackedString QFileSystemModel_Type(void* ptr, void* index);
void QFileSystemModel_DestroyQFileSystemModel(void* ptr);
void QFileSystemModel_DestroyQFileSystemModelDefault(void* ptr);
void* QFileSystemModel___mimeData_indexes_atList(void* ptr, int i);
void QFileSystemModel___mimeData_indexes_setList(void* ptr, void* i);
void* QFileSystemModel___mimeData_indexes_newList(void* ptr);
void* QFileSystemModel___changePersistentIndexList_from_atList(void* ptr, int i);
void QFileSystemModel___changePersistentIndexList_from_setList(void* ptr, void* i);
void* QFileSystemModel___changePersistentIndexList_from_newList(void* ptr);
void* QFileSystemModel___changePersistentIndexList_to_atList(void* ptr, int i);
void QFileSystemModel___changePersistentIndexList_to_setList(void* ptr, void* i);
void* QFileSystemModel___changePersistentIndexList_to_newList(void* ptr);
int QFileSystemModel___dataChanged_roles_atList(void* ptr, int i);
void QFileSystemModel___dataChanged_roles_setList(void* ptr, int i);
void* QFileSystemModel___dataChanged_roles_newList(void* ptr);
void* QFileSystemModel___itemData_atList(void* ptr, int v, int i);
void QFileSystemModel___itemData_setList(void* ptr, int key, void* i);
void* QFileSystemModel___itemData_newList(void* ptr);
struct QtWidgets_PackedList QFileSystemModel___itemData_keyList(void* ptr);
void* QFileSystemModel___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void QFileSystemModel___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* QFileSystemModel___layoutAboutToBeChanged_parents_newList(void* ptr);
void* QFileSystemModel___layoutChanged_parents_atList(void* ptr, int i);
void QFileSystemModel___layoutChanged_parents_setList(void* ptr, void* i);
void* QFileSystemModel___layoutChanged_parents_newList(void* ptr);
void* QFileSystemModel___match_atList(void* ptr, int i);
void QFileSystemModel___match_setList(void* ptr, void* i);
void* QFileSystemModel___match_newList(void* ptr);
void* QFileSystemModel___persistentIndexList_atList(void* ptr, int i);
void QFileSystemModel___persistentIndexList_setList(void* ptr, void* i);
void* QFileSystemModel___persistentIndexList_newList(void* ptr);
void* QFileSystemModel___roleNames_atList(void* ptr, int v, int i);
void QFileSystemModel___roleNames_setList(void* ptr, int key, void* i);
void* QFileSystemModel___roleNames_newList(void* ptr);
struct QtWidgets_PackedList QFileSystemModel___roleNames_keyList(void* ptr);
void* QFileSystemModel___setItemData_roles_atList(void* ptr, int v, int i);
void QFileSystemModel___setItemData_roles_setList(void* ptr, int key, void* i);
void* QFileSystemModel___setItemData_roles_newList(void* ptr);
struct QtWidgets_PackedList QFileSystemModel___setItemData_roles_keyList(void* ptr);
int QFileSystemModel_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void QFileSystemModel_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* QFileSystemModel_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int QFileSystemModel_____itemData_keyList_atList(void* ptr, int i);
void QFileSystemModel_____itemData_keyList_setList(void* ptr, int i);
void* QFileSystemModel_____itemData_keyList_newList(void* ptr);
int QFileSystemModel_____roleNames_keyList_atList(void* ptr, int i);
void QFileSystemModel_____roleNames_keyList_setList(void* ptr, int i);
void* QFileSystemModel_____roleNames_keyList_newList(void* ptr);
int QFileSystemModel_____setItemData_roles_keyList_atList(void* ptr, int i);
void QFileSystemModel_____setItemData_roles_keyList_setList(void* ptr, int i);
void* QFileSystemModel_____setItemData_roles_keyList_newList(void* ptr);
int QFileSystemModel_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void QFileSystemModel_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* QFileSystemModel_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* QFileSystemModel___children_atList(void* ptr, int i);
void QFileSystemModel___children_setList(void* ptr, void* i);
void* QFileSystemModel___children_newList(void* ptr);
void* QFileSystemModel___dynamicPropertyNames_atList(void* ptr, int i);
void QFileSystemModel___dynamicPropertyNames_setList(void* ptr, void* i);
void* QFileSystemModel___dynamicPropertyNames_newList(void* ptr);
void* QFileSystemModel___findChildren_atList(void* ptr, int i);
void QFileSystemModel___findChildren_setList(void* ptr, void* i);
void* QFileSystemModel___findChildren_newList(void* ptr);
void* QFileSystemModel___findChildren_atList3(void* ptr, int i);
void QFileSystemModel___findChildren_setList3(void* ptr, void* i);
void* QFileSystemModel___findChildren_newList3(void* ptr);
void* QFileSystemModel_BuddyDefault(void* ptr, void* index);
char QFileSystemModel_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char QFileSystemModel_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char QFileSystemModel_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct QtWidgets_PackedList QFileSystemModel_ItemDataDefault(void* ptr, void* index);
struct QtWidgets_PackedList QFileSystemModel_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
char QFileSystemModel_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char QFileSystemModel_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char QFileSystemModel_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char QFileSystemModel_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void QFileSystemModel_ResetInternalDataDefault(void* ptr);
void QFileSystemModel_RevertDefault(void* ptr);
struct QtWidgets_PackedList QFileSystemModel_RoleNamesDefault(void* ptr);
char QFileSystemModel_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char QFileSystemModel_SetItemDataDefault(void* ptr, void* index, void* roles);
void* QFileSystemModel_SpanDefault(void* ptr, void* index);
char QFileSystemModel_SubmitDefault(void* ptr);
long long QFileSystemModel_SupportedDragActionsDefault(void* ptr);
void QFileSystemModel_ChildEventDefault(void* ptr, void* event);
void QFileSystemModel_ConnectNotifyDefault(void* ptr, void* sign);
void QFileSystemModel_CustomEventDefault(void* ptr, void* event);
void QFileSystemModel_DeleteLaterDefault(void* ptr);
void QFileSystemModel_DisconnectNotifyDefault(void* ptr, void* sign);
char QFileSystemModel_EventFilterDefault(void* ptr, void* watched, void* event);
void* QFileSystemModel_MetaObjectDefault(void* ptr);
void* QFocusFrame_NewQFocusFrame(void* parent);
void QFocusFrame_InitStyleOption(void* ptr, void* option);
void QFocusFrame_SetWidget(void* ptr, void* widget);
void* QFocusFrame_Widget(void* ptr);
void QFocusFrame_DestroyQFocusFrame(void* ptr);
void QFocusFrame_DestroyQFocusFrameDefault(void* ptr);
void* QFontComboBox_NewQFontComboBox(void* parent);
void* QFontComboBox_CurrentFont(void* ptr);
void QFontComboBox_ConnectCurrentFontChanged(void* ptr, long long t);
void QFontComboBox_DisconnectCurrentFontChanged(void* ptr);
void QFontComboBox_CurrentFontChanged(void* ptr, void* font);
long long QFontComboBox_FontFilters(void* ptr);
void QFontComboBox_SetCurrentFont(void* ptr, void* ff);
void QFontComboBox_SetCurrentFontDefault(void* ptr, void* ff);
void QFontComboBox_SetFontFilters(void* ptr, long long filters);
void QFontComboBox_SetWritingSystem(void* ptr, long long vqf);
void QFontComboBox_DestroyQFontComboBox(void* ptr);
void QFontComboBox_DestroyQFontComboBoxDefault(void* ptr);
void* QFontDialog_NewQFontDialog(void* parent);
void* QFontDialog_NewQFontDialog2(void* initial, void* parent);
void* QFontDialog_CurrentFont(void* ptr);
void QFontDialog_ConnectCurrentFontChanged(void* ptr, long long t);
void QFontDialog_DisconnectCurrentFontChanged(void* ptr);
void QFontDialog_CurrentFontChanged(void* ptr, void* font);
void QFontDialog_Done(void* ptr, int result);
void QFontDialog_DoneDefault(void* ptr, int result);
void QFontDialog_ConnectFontSelected(void* ptr, long long t);
void QFontDialog_DisconnectFontSelected(void* ptr);
void QFontDialog_FontSelected(void* ptr, void* font);
void* QFontDialog_QFontDialog_GetFont(char* ok, void* initial, void* parent, struct QtWidgets_PackedString title, long long options);
void* QFontDialog_QFontDialog_GetFont2(char* ok, void* parent);
void QFontDialog_Open(void* ptr, void* receiver, char* member);
long long QFontDialog_Options(void* ptr);
void* QFontDialog_SelectedFont(void* ptr);
void QFontDialog_SetCurrentFont(void* ptr, void* font);
void QFontDialog_SetOption(void* ptr, long long option, char on);
void QFontDialog_SetOptions(void* ptr, long long options);
char QFontDialog_TestOption(void* ptr, long long option);
void* QFormLayout_NewQFormLayout(void* parent);
void QFormLayout_AddItem(void* ptr, void* item);
void QFormLayout_AddItemDefault(void* ptr, void* item);
void QFormLayout_AddRow(void* ptr, void* label, void* field);
void QFormLayout_AddRow2(void* ptr, void* label, void* field);
void QFormLayout_AddRow3(void* ptr, struct QtWidgets_PackedString labelText, void* field);
void QFormLayout_AddRow4(void* ptr, struct QtWidgets_PackedString labelText, void* field);
void QFormLayout_AddRow5(void* ptr, void* widget);
void QFormLayout_AddRow6(void* ptr, void* layout);
int QFormLayout_Count(void* ptr);
int QFormLayout_CountDefault(void* ptr);
long long QFormLayout_FieldGrowthPolicy(void* ptr);
long long QFormLayout_FormAlignment(void* ptr);
int QFormLayout_HorizontalSpacing(void* ptr);
void QFormLayout_InsertRow(void* ptr, int row, void* label, void* field);
void QFormLayout_InsertRow2(void* ptr, int row, void* label, void* field);
void QFormLayout_InsertRow3(void* ptr, int row, struct QtWidgets_PackedString labelText, void* field);
void QFormLayout_InsertRow4(void* ptr, int row, struct QtWidgets_PackedString labelText, void* field);
void QFormLayout_InsertRow5(void* ptr, int row, void* widget);
void QFormLayout_InsertRow6(void* ptr, int row, void* layout);
long long QFormLayout_LabelAlignment(void* ptr);
void* QFormLayout_LabelForField(void* ptr, void* field);
void* QFormLayout_LabelForField2(void* ptr, void* field);
void QFormLayout_RemoveRow(void* ptr, int row);
void QFormLayout_RemoveRow2(void* ptr, void* widget);
void QFormLayout_RemoveRow3(void* ptr, void* layout);
int QFormLayout_RowCount(void* ptr);
long long QFormLayout_RowWrapPolicy(void* ptr);
void QFormLayout_SetFieldGrowthPolicy(void* ptr, long long policy);
void QFormLayout_SetFormAlignment(void* ptr, long long alignment);
void QFormLayout_SetHorizontalSpacing(void* ptr, int spacing);
void QFormLayout_SetItem(void* ptr, int row, long long role, void* item);
void QFormLayout_SetLabelAlignment(void* ptr, long long alignment);
void QFormLayout_SetLayout(void* ptr, int row, long long role, void* layout);
void QFormLayout_SetRowWrapPolicy(void* ptr, long long policy);
void QFormLayout_SetVerticalSpacing(void* ptr, int spacing);
void QFormLayout_SetWidget(void* ptr, int row, long long role, void* widget);
void* QFormLayout_SizeHint(void* ptr);
void* QFormLayout_SizeHintDefault(void* ptr);
void* QFormLayout_TakeAt(void* ptr, int index);
void* QFormLayout_TakeAtDefault(void* ptr, int index);
int QFormLayout_VerticalSpacing(void* ptr);
void QFormLayout_DestroyQFormLayout(void* ptr);
void QFormLayout_DestroyQFormLayoutDefault(void* ptr);
;
;
void* QFrame_NewQFrame(void* parent, long long ff);
void* QFrame_FrameRect(void* ptr);
long long QFrame_FrameShadow(void* ptr);
long long QFrame_FrameShape(void* ptr);
int QFrame_FrameStyle(void* ptr);
int QFrame_FrameWidth(void* ptr);
void QFrame_InitStyleOption(void* ptr, void* option);
int QFrame_LineWidth(void* ptr);
int QFrame_MidLineWidth(void* ptr);
void QFrame_SetFrameRect(void* ptr, void* vqr);
void QFrame_SetFrameShadow(void* ptr, long long vqf);
void QFrame_SetFrameShape(void* ptr, long long vqf);
void QFrame_SetFrameStyle(void* ptr, int style);
void QFrame_SetLineWidth(void* ptr, int vin);
void QFrame_SetMidLineWidth(void* ptr, int vin);
void QFrame_DestroyQFrame(void* ptr);
void QFrame_DestroyQFrameDefault(void* ptr);
void* QGesture_NewQGesture(void* parent);
long long QGesture_GestureCancelPolicy(void* ptr);
long long QGesture_GestureType(void* ptr);
char QGesture_HasHotSpot(void* ptr);
void* QGesture_HotSpot(void* ptr);
void QGesture_SetGestureCancelPolicy(void* ptr, long long policy);
void QGesture_SetHotSpot(void* ptr, void* value);
long long QGesture_State(void* ptr);
void QGesture_UnsetHotSpot(void* ptr);
void QGesture_DestroyQGesture(void* ptr);
void QGesture_DestroyQGestureDefault(void* ptr);
void* QGesture___children_atList(void* ptr, int i);
void QGesture___children_setList(void* ptr, void* i);
void* QGesture___children_newList(void* ptr);
void* QGesture___dynamicPropertyNames_atList(void* ptr, int i);
void QGesture___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGesture___dynamicPropertyNames_newList(void* ptr);
void* QGesture___findChildren_atList(void* ptr, int i);
void QGesture___findChildren_setList(void* ptr, void* i);
void* QGesture___findChildren_newList(void* ptr);
void* QGesture___findChildren_atList3(void* ptr, int i);
void QGesture___findChildren_setList3(void* ptr, void* i);
void* QGesture___findChildren_newList3(void* ptr);
void QGesture_ChildEventDefault(void* ptr, void* event);
void QGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QGesture_CustomEventDefault(void* ptr, void* event);
void QGesture_DeleteLaterDefault(void* ptr);
void QGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QGesture_EventDefault(void* ptr, void* e);
char QGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGesture_MetaObjectDefault(void* ptr);
void QGesture_TimerEventDefault(void* ptr, void* event);
void* QGestureEvent_NewQGestureEvent(void* gestures);
void QGestureEvent_Accept(void* ptr, void* gesture);
void QGestureEvent_Accept2(void* ptr, long long gestureType);
struct QtWidgets_PackedList QGestureEvent_ActiveGestures(void* ptr);
struct QtWidgets_PackedList QGestureEvent_CanceledGestures(void* ptr);
void* QGestureEvent_Gesture(void* ptr, long long ty);
struct QtWidgets_PackedList QGestureEvent_Gestures(void* ptr);
void QGestureEvent_Ignore(void* ptr, void* gesture);
void QGestureEvent_Ignore2(void* ptr, long long gestureType);
char QGestureEvent_IsAccepted(void* ptr, void* gesture);
char QGestureEvent_IsAccepted2(void* ptr, long long gestureType);
void* QGestureEvent_MapToGraphicsScene(void* ptr, void* gesturePoint);
void QGestureEvent_SetAccepted(void* ptr, void* gesture, char value);
void QGestureEvent_SetAccepted2(void* ptr, long long gestureType, char value);
void* QGestureEvent_Widget(void* ptr);
void QGestureEvent_DestroyQGestureEvent(void* ptr);
void QGestureEvent_DestroyQGestureEventDefault(void* ptr);
void* QGestureEvent___QGestureEvent_gestures_atList(void* ptr, int i);
void QGestureEvent___QGestureEvent_gestures_setList(void* ptr, void* i);
void* QGestureEvent___QGestureEvent_gestures_newList(void* ptr);
void* QGestureEvent___activeGestures_atList(void* ptr, int i);
void QGestureEvent___activeGestures_setList(void* ptr, void* i);
void* QGestureEvent___activeGestures_newList(void* ptr);
void* QGestureEvent___canceledGestures_atList(void* ptr, int i);
void QGestureEvent___canceledGestures_setList(void* ptr, void* i);
void* QGestureEvent___canceledGestures_newList(void* ptr);
void* QGestureEvent___gestures_atList(void* ptr, int i);
void QGestureEvent___gestures_setList(void* ptr, void* i);
void* QGestureEvent___gestures_newList(void* ptr);
char QGestureEvent___m_accepted_atList(void* ptr, long long v, int i);
void QGestureEvent___m_accepted_setList(void* ptr, long long key, char i);
void* QGestureEvent___m_accepted_newList(void* ptr);
struct QtWidgets_PackedList QGestureEvent___m_accepted_keyList(void* ptr);
char QGestureEvent___setM_accepted__atList(void* ptr, long long v, int i);
void QGestureEvent___setM_accepted__setList(void* ptr, long long key, char i);
void* QGestureEvent___setM_accepted__newList(void* ptr);
struct QtWidgets_PackedList QGestureEvent___setM_accepted__keyList(void* ptr);
void* QGestureEvent___m_gestures_atList(void* ptr, int i);
void QGestureEvent___m_gestures_setList(void* ptr, void* i);
void* QGestureEvent___m_gestures_newList(void* ptr);
void* QGestureEvent___setM_gestures__atList(void* ptr, int i);
void QGestureEvent___setM_gestures__setList(void* ptr, void* i);
void* QGestureEvent___setM_gestures__newList(void* ptr);
void* QGestureEvent___m_targetWidgets_atList(void* ptr, long long v, int i);
void QGestureEvent___m_targetWidgets_setList(void* ptr, long long key, void* i);
void* QGestureEvent___m_targetWidgets_newList(void* ptr);
struct QtWidgets_PackedList QGestureEvent___m_targetWidgets_keyList(void* ptr);
void* QGestureEvent___setM_targetWidgets__atList(void* ptr, long long v, int i);
void QGestureEvent___setM_targetWidgets__setList(void* ptr, long long key, void* i);
void* QGestureEvent___setM_targetWidgets__newList(void* ptr);
struct QtWidgets_PackedList QGestureEvent___setM_targetWidgets__keyList(void* ptr);
long long QGestureEvent_____m_accepted_keyList_atList(void* ptr, int i);
void QGestureEvent_____m_accepted_keyList_setList(void* ptr, long long i);
void* QGestureEvent_____m_accepted_keyList_newList(void* ptr);
long long QGestureEvent_____setM_accepted__keyList_atList(void* ptr, int i);
void QGestureEvent_____setM_accepted__keyList_setList(void* ptr, long long i);
void* QGestureEvent_____setM_accepted__keyList_newList(void* ptr);
long long QGestureEvent_____m_targetWidgets_keyList_atList(void* ptr, int i);
void QGestureEvent_____m_targetWidgets_keyList_setList(void* ptr, long long i);
void* QGestureEvent_____m_targetWidgets_keyList_newList(void* ptr);
long long QGestureEvent_____setM_targetWidgets__keyList_atList(void* ptr, int i);
void QGestureEvent_____setM_targetWidgets__keyList_setList(void* ptr, long long i);
void* QGestureEvent_____setM_targetWidgets__keyList_newList(void* ptr);
void* QGestureRecognizer_NewQGestureRecognizer();
void* QGestureRecognizer_Create(void* ptr, void* target);
void* QGestureRecognizer_CreateDefault(void* ptr, void* target);
long long QGestureRecognizer_Recognize(void* ptr, void* gesture, void* watched, void* event);
long long QGestureRecognizer_QGestureRecognizer_RegisterRecognizer(void* recognizer);
void QGestureRecognizer_Reset(void* ptr, void* gesture);
void QGestureRecognizer_ResetDefault(void* ptr, void* gesture);
void QGestureRecognizer_QGestureRecognizer_UnregisterRecognizer(long long ty);
void QGestureRecognizer_DestroyQGestureRecognizer(void* ptr);
void QGestureRecognizer_DestroyQGestureRecognizerDefault(void* ptr);
void QGraphicsAnchor_SetSizePolicy(void* ptr, long long policy);
void QGraphicsAnchor_SetSpacing(void* ptr, double spacing);
long long QGraphicsAnchor_SizePolicy(void* ptr);
double QGraphicsAnchor_Spacing(void* ptr);
void QGraphicsAnchor_UnsetSpacing(void* ptr);
void QGraphicsAnchor_DestroyQGraphicsAnchor(void* ptr);
void QGraphicsAnchor_DestroyQGraphicsAnchorDefault(void* ptr);
void* QGraphicsAnchor___children_atList(void* ptr, int i);
void QGraphicsAnchor___children_setList(void* ptr, void* i);
void* QGraphicsAnchor___children_newList(void* ptr);
void* QGraphicsAnchor___dynamicPropertyNames_atList(void* ptr, int i);
void QGraphicsAnchor___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGraphicsAnchor___dynamicPropertyNames_newList(void* ptr);
void* QGraphicsAnchor___findChildren_atList(void* ptr, int i);
void QGraphicsAnchor___findChildren_setList(void* ptr, void* i);
void* QGraphicsAnchor___findChildren_newList(void* ptr);
void* QGraphicsAnchor___findChildren_atList3(void* ptr, int i);
void QGraphicsAnchor___findChildren_setList3(void* ptr, void* i);
void* QGraphicsAnchor___findChildren_newList3(void* ptr);
void QGraphicsAnchor_ChildEventDefault(void* ptr, void* event);
void QGraphicsAnchor_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsAnchor_CustomEventDefault(void* ptr, void* event);
void QGraphicsAnchor_DeleteLaterDefault(void* ptr);
void QGraphicsAnchor_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsAnchor_EventDefault(void* ptr, void* e);
char QGraphicsAnchor_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsAnchor_MetaObjectDefault(void* ptr);
void QGraphicsAnchor_TimerEventDefault(void* ptr, void* event);
void* QGraphicsAnchorLayout_NewQGraphicsAnchorLayout(void* parent);
void* QGraphicsAnchorLayout_AddAnchor(void* ptr, void* firstItem, long long firstEdge, void* secondItem, long long secondEdge);
void QGraphicsAnchorLayout_AddAnchors(void* ptr, void* firstItem, void* secondItem, long long orientations);
void QGraphicsAnchorLayout_AddCornerAnchors(void* ptr, void* firstItem, long long firstCorner, void* secondItem, long long secondCorner);
void* QGraphicsAnchorLayout_Anchor(void* ptr, void* firstItem, long long firstEdge, void* secondItem, long long secondEdge);
int QGraphicsAnchorLayout_Count(void* ptr);
int QGraphicsAnchorLayout_CountDefault(void* ptr);
double QGraphicsAnchorLayout_HorizontalSpacing(void* ptr);
void* QGraphicsAnchorLayout_ItemAt(void* ptr, int index);
void* QGraphicsAnchorLayout_ItemAtDefault(void* ptr, int index);
void QGraphicsAnchorLayout_RemoveAt(void* ptr, int index);
void QGraphicsAnchorLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsAnchorLayout_SetHorizontalSpacing(void* ptr, double spacing);
void QGraphicsAnchorLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsAnchorLayout_SetVerticalSpacing(void* ptr, double spacing);
void* QGraphicsAnchorLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsAnchorLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
double QGraphicsAnchorLayout_VerticalSpacing(void* ptr);
void QGraphicsAnchorLayout_DestroyQGraphicsAnchorLayout(void* ptr);
void QGraphicsAnchorLayout_DestroyQGraphicsAnchorLayoutDefault(void* ptr);
void* QGraphicsBlurEffect_NewQGraphicsBlurEffect(void* parent);
long long QGraphicsBlurEffect_BlurHints(void* ptr);
void QGraphicsBlurEffect_ConnectBlurHintsChanged(void* ptr, long long t);
void QGraphicsBlurEffect_DisconnectBlurHintsChanged(void* ptr);
void QGraphicsBlurEffect_BlurHintsChanged(void* ptr, long long hints);
double QGraphicsBlurEffect_BlurRadius(void* ptr);
void QGraphicsBlurEffect_ConnectBlurRadiusChanged(void* ptr, long long t);
void QGraphicsBlurEffect_DisconnectBlurRadiusChanged(void* ptr);
void QGraphicsBlurEffect_BlurRadiusChanged(void* ptr, double radius);
void QGraphicsBlurEffect_Draw(void* ptr, void* painter);
void QGraphicsBlurEffect_DrawDefault(void* ptr, void* painter);
void QGraphicsBlurEffect_SetBlurHints(void* ptr, long long hints);
void QGraphicsBlurEffect_SetBlurHintsDefault(void* ptr, long long hints);
void QGraphicsBlurEffect_SetBlurRadius(void* ptr, double blurRadius);
void QGraphicsBlurEffect_SetBlurRadiusDefault(void* ptr, double blurRadius);
void QGraphicsBlurEffect_DestroyQGraphicsBlurEffect(void* ptr);
void QGraphicsBlurEffect_DestroyQGraphicsBlurEffectDefault(void* ptr);
void* QGraphicsColorizeEffect_NewQGraphicsColorizeEffect(void* parent);
void* QGraphicsColorizeEffect_Color(void* ptr);
void QGraphicsColorizeEffect_ConnectColorChanged(void* ptr, long long t);
void QGraphicsColorizeEffect_DisconnectColorChanged(void* ptr);
void QGraphicsColorizeEffect_ColorChanged(void* ptr, void* color);
void QGraphicsColorizeEffect_Draw(void* ptr, void* painter);
void QGraphicsColorizeEffect_DrawDefault(void* ptr, void* painter);
void QGraphicsColorizeEffect_SetColor(void* ptr, void* c);
void QGraphicsColorizeEffect_SetColorDefault(void* ptr, void* c);
void QGraphicsColorizeEffect_SetStrength(void* ptr, double strength);
void QGraphicsColorizeEffect_SetStrengthDefault(void* ptr, double strength);
double QGraphicsColorizeEffect_Strength(void* ptr);
void QGraphicsColorizeEffect_ConnectStrengthChanged(void* ptr, long long t);
void QGraphicsColorizeEffect_DisconnectStrengthChanged(void* ptr);
void QGraphicsColorizeEffect_StrengthChanged(void* ptr, double strength);
void QGraphicsColorizeEffect_DestroyQGraphicsColorizeEffect(void* ptr);
void QGraphicsColorizeEffect_DestroyQGraphicsColorizeEffectDefault(void* ptr);
void* QGraphicsDropShadowEffect_NewQGraphicsDropShadowEffect(void* parent);
double QGraphicsDropShadowEffect_BlurRadius(void* ptr);
void QGraphicsDropShadowEffect_ConnectBlurRadiusChanged(void* ptr, long long t);
void QGraphicsDropShadowEffect_DisconnectBlurRadiusChanged(void* ptr);
void QGraphicsDropShadowEffect_BlurRadiusChanged(void* ptr, double blurRadius);
void* QGraphicsDropShadowEffect_Color(void* ptr);
void QGraphicsDropShadowEffect_ConnectColorChanged(void* ptr, long long t);
void QGraphicsDropShadowEffect_DisconnectColorChanged(void* ptr);
void QGraphicsDropShadowEffect_ColorChanged(void* ptr, void* color);
void QGraphicsDropShadowEffect_Draw(void* ptr, void* painter);
void QGraphicsDropShadowEffect_DrawDefault(void* ptr, void* painter);
void* QGraphicsDropShadowEffect_Offset(void* ptr);
void QGraphicsDropShadowEffect_ConnectOffsetChanged(void* ptr, long long t);
void QGraphicsDropShadowEffect_DisconnectOffsetChanged(void* ptr);
void QGraphicsDropShadowEffect_OffsetChanged(void* ptr, void* offset);
void QGraphicsDropShadowEffect_SetBlurRadius(void* ptr, double blurRadius);
void QGraphicsDropShadowEffect_SetBlurRadiusDefault(void* ptr, double blurRadius);
void QGraphicsDropShadowEffect_SetColor(void* ptr, void* color);
void QGraphicsDropShadowEffect_SetColorDefault(void* ptr, void* color);
void QGraphicsDropShadowEffect_SetOffset(void* ptr, void* ofs);
void QGraphicsDropShadowEffect_SetOffsetDefault(void* ptr, void* ofs);
void QGraphicsDropShadowEffect_SetOffset2(void* ptr, double dx, double dy);
void QGraphicsDropShadowEffect_SetOffset2Default(void* ptr, double dx, double dy);
void QGraphicsDropShadowEffect_SetOffset3(void* ptr, double d);
void QGraphicsDropShadowEffect_SetOffset3Default(void* ptr, double d);
void QGraphicsDropShadowEffect_SetXOffset(void* ptr, double dx);
void QGraphicsDropShadowEffect_SetXOffsetDefault(void* ptr, double dx);
void QGraphicsDropShadowEffect_SetYOffset(void* ptr, double dy);
void QGraphicsDropShadowEffect_SetYOffsetDefault(void* ptr, double dy);
double QGraphicsDropShadowEffect_XOffset(void* ptr);
double QGraphicsDropShadowEffect_YOffset(void* ptr);
void QGraphicsDropShadowEffect_DestroyQGraphicsDropShadowEffect(void* ptr);
void QGraphicsDropShadowEffect_DestroyQGraphicsDropShadowEffectDefault(void* ptr);
void* QGraphicsEffect_NewQGraphicsEffect(void* parent);
void* QGraphicsEffect_BoundingRect(void* ptr);
void* QGraphicsEffect_BoundingRectFor(void* ptr, void* rect);
void* QGraphicsEffect_BoundingRectForDefault(void* ptr, void* rect);
void QGraphicsEffect_Draw(void* ptr, void* painter);
void QGraphicsEffect_DrawSource(void* ptr, void* painter);
void QGraphicsEffect_ConnectEnabledChanged(void* ptr, long long t);
void QGraphicsEffect_DisconnectEnabledChanged(void* ptr);
void QGraphicsEffect_EnabledChanged(void* ptr, char enabled);
char QGraphicsEffect_IsEnabled(void* ptr);
void QGraphicsEffect_SetEnabled(void* ptr, char enable);
void QGraphicsEffect_SetEnabledDefault(void* ptr, char enable);
void* QGraphicsEffect_SourceBoundingRect(void* ptr, long long system);
void QGraphicsEffect_SourceChanged(void* ptr, long long flags);
void QGraphicsEffect_SourceChangedDefault(void* ptr, long long flags);
char QGraphicsEffect_SourceIsPixmap(void* ptr);
void* QGraphicsEffect_SourcePixmap(void* ptr, long long system, void* offset, long long mode);
void QGraphicsEffect_Update(void* ptr);
void QGraphicsEffect_UpdateDefault(void* ptr);
void QGraphicsEffect_UpdateBoundingRect(void* ptr);
void QGraphicsEffect_DestroyQGraphicsEffect(void* ptr);
void QGraphicsEffect_DestroyQGraphicsEffectDefault(void* ptr);
void* QGraphicsEffect___children_atList(void* ptr, int i);
void QGraphicsEffect___children_setList(void* ptr, void* i);
void* QGraphicsEffect___children_newList(void* ptr);
void* QGraphicsEffect___dynamicPropertyNames_atList(void* ptr, int i);
void QGraphicsEffect___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGraphicsEffect___dynamicPropertyNames_newList(void* ptr);
void* QGraphicsEffect___findChildren_atList(void* ptr, int i);
void QGraphicsEffect___findChildren_setList(void* ptr, void* i);
void* QGraphicsEffect___findChildren_newList(void* ptr);
void* QGraphicsEffect___findChildren_atList3(void* ptr, int i);
void QGraphicsEffect___findChildren_setList3(void* ptr, void* i);
void* QGraphicsEffect___findChildren_newList3(void* ptr);
void QGraphicsEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsEffect_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsEffect_DeleteLaterDefault(void* ptr);
void QGraphicsEffect_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsEffect_EventDefault(void* ptr, void* e);
char QGraphicsEffect_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsEffect_MetaObjectDefault(void* ptr);
void QGraphicsEffect_TimerEventDefault(void* ptr, void* event);
void* QGraphicsEllipseItem_NewQGraphicsEllipseItem(void* parent);
void* QGraphicsEllipseItem_NewQGraphicsEllipseItem2(void* rect, void* parent);
void* QGraphicsEllipseItem_NewQGraphicsEllipseItem3(double x, double y, double width, double height, void* parent);
void* QGraphicsEllipseItem_BoundingRect(void* ptr);
void* QGraphicsEllipseItem_BoundingRectDefault(void* ptr);
void QGraphicsEllipseItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsEllipseItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsEllipseItem_Rect(void* ptr);
void QGraphicsEllipseItem_SetRect(void* ptr, void* rect);
void QGraphicsEllipseItem_SetRect2(void* ptr, double x, double y, double width, double height);
void QGraphicsEllipseItem_SetSpanAngle(void* ptr, int angle);
void QGraphicsEllipseItem_SetStartAngle(void* ptr, int angle);
int QGraphicsEllipseItem_SpanAngle(void* ptr);
int QGraphicsEllipseItem_StartAngle(void* ptr);
void QGraphicsEllipseItem_DestroyQGraphicsEllipseItem(void* ptr);
void QGraphicsEllipseItem_DestroyQGraphicsEllipseItemDefault(void* ptr);
void* QGraphicsGridLayout_NewQGraphicsGridLayout(void* parent);
void QGraphicsGridLayout_AddItem(void* ptr, void* item, int row, int column, int rowSpan, int columnSpan, long long alignment);
void QGraphicsGridLayout_AddItem2(void* ptr, void* item, int row, int column, long long alignment);
long long QGraphicsGridLayout_Alignment(void* ptr, void* item);
long long QGraphicsGridLayout_ColumnAlignment(void* ptr, int column);
int QGraphicsGridLayout_ColumnCount(void* ptr);
double QGraphicsGridLayout_ColumnMaximumWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnMinimumWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnPreferredWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnSpacing(void* ptr, int column);
int QGraphicsGridLayout_ColumnStretchFactor(void* ptr, int column);
int QGraphicsGridLayout_Count(void* ptr);
int QGraphicsGridLayout_CountDefault(void* ptr);
double QGraphicsGridLayout_HorizontalSpacing(void* ptr);
void QGraphicsGridLayout_RemoveAt(void* ptr, int index);
void QGraphicsGridLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsGridLayout_RemoveItem(void* ptr, void* item);
long long QGraphicsGridLayout_RowAlignment(void* ptr, int row);
int QGraphicsGridLayout_RowCount(void* ptr);
double QGraphicsGridLayout_RowMaximumHeight(void* ptr, int row);
double QGraphicsGridLayout_RowMinimumHeight(void* ptr, int row);
double QGraphicsGridLayout_RowPreferredHeight(void* ptr, int row);
double QGraphicsGridLayout_RowSpacing(void* ptr, int row);
int QGraphicsGridLayout_RowStretchFactor(void* ptr, int row);
void QGraphicsGridLayout_SetAlignment(void* ptr, void* item, long long alignment);
void QGraphicsGridLayout_SetColumnAlignment(void* ptr, int column, long long alignment);
void QGraphicsGridLayout_SetColumnFixedWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnMaximumWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnMinimumWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnPreferredWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnSpacing(void* ptr, int column, double spacing);
void QGraphicsGridLayout_SetColumnStretchFactor(void* ptr, int column, int stretch);
void QGraphicsGridLayout_SetHorizontalSpacing(void* ptr, double spacing);
void QGraphicsGridLayout_SetRowAlignment(void* ptr, int row, long long alignment);
void QGraphicsGridLayout_SetRowFixedHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowMaximumHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowMinimumHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowPreferredHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowSpacing(void* ptr, int row, double spacing);
void QGraphicsGridLayout_SetRowStretchFactor(void* ptr, int row, int stretch);
void QGraphicsGridLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsGridLayout_SetVerticalSpacing(void* ptr, double spacing);
void* QGraphicsGridLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsGridLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
double QGraphicsGridLayout_VerticalSpacing(void* ptr);
void QGraphicsGridLayout_DestroyQGraphicsGridLayout(void* ptr);
void QGraphicsGridLayout_DestroyQGraphicsGridLayoutDefault(void* ptr);
;
;
void* QGraphicsItem_NewQGraphicsItem(void* parent);
char QGraphicsItem_AcceptDrops(void* ptr);
char QGraphicsItem_AcceptHoverEvents(void* ptr);
char QGraphicsItem_AcceptTouchEvents(void* ptr);
long long QGraphicsItem_AcceptedMouseButtons(void* ptr);
void QGraphicsItem_Advance(void* ptr, int phase);
void QGraphicsItem_AdvanceDefault(void* ptr, int phase);
void* QGraphicsItem_BoundingRect(void* ptr);
void* QGraphicsItem_BoundingRegion(void* ptr, void* itemToDeviceTransform);
double QGraphicsItem_BoundingRegionGranularity(void* ptr);
long long QGraphicsItem_CacheMode(void* ptr);
struct QtWidgets_PackedList QGraphicsItem_ChildItems(void* ptr);
void* QGraphicsItem_ChildrenBoundingRect(void* ptr);
void QGraphicsItem_ClearFocus(void* ptr);
void* QGraphicsItem_ClipPath(void* ptr);
char QGraphicsItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
struct QtWidgets_PackedList QGraphicsItem_CollidingItems(void* ptr, long long mode);
void* QGraphicsItem_CommonAncestorItem(void* ptr, void* other);
char QGraphicsItem_Contains(void* ptr, void* point);
char QGraphicsItem_ContainsDefault(void* ptr, void* point);
void QGraphicsItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsItem_ContextMenuEventDefault(void* ptr, void* event);
void* QGraphicsItem_Cursor(void* ptr);
void* QGraphicsItem_Data(void* ptr, int key);
void* QGraphicsItem_DeviceTransform(void* ptr, void* viewportTransform);
void QGraphicsItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsItem_DropEvent(void* ptr, void* event);
void QGraphicsItem_DropEventDefault(void* ptr, void* event);
double QGraphicsItem_EffectiveOpacity(void* ptr);
void QGraphicsItem_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin);
void QGraphicsItem_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin);
char QGraphicsItem_FiltersChildEvents(void* ptr);
long long QGraphicsItem_Flags(void* ptr);
void QGraphicsItem_FocusInEvent(void* ptr, void* event);
void QGraphicsItem_FocusInEventDefault(void* ptr, void* event);
void* QGraphicsItem_FocusItem(void* ptr);
void QGraphicsItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsItem_FocusOutEventDefault(void* ptr, void* event);
void* QGraphicsItem_FocusProxy(void* ptr);
void QGraphicsItem_GrabKeyboard(void* ptr);
void QGraphicsItem_GrabMouse(void* ptr);
void* QGraphicsItem_GraphicsEffect(void* ptr);
void* QGraphicsItem_Group(void* ptr);
char QGraphicsItem_HasCursor(void* ptr);
char QGraphicsItem_HasFocus(void* ptr);
void QGraphicsItem_Hide(void* ptr);
void QGraphicsItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsItem_InputMethodEventDefault(void* ptr, void* event);
long long QGraphicsItem_InputMethodHints(void* ptr);
void* QGraphicsItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsItem_InputMethodQueryDefault(void* ptr, long long query);
void QGraphicsItem_InstallSceneEventFilter(void* ptr, void* filterItem);
char QGraphicsItem_IsActive(void* ptr);
char QGraphicsItem_IsAncestorOf(void* ptr, void* child);
char QGraphicsItem_IsClipped(void* ptr);
char QGraphicsItem_IsEnabled(void* ptr);
char QGraphicsItem_IsObscured(void* ptr, void* rect);
char QGraphicsItem_IsObscured2(void* ptr, double x, double y, double w, double h);
char QGraphicsItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsItem_IsObscuredByDefault(void* ptr, void* item);
char QGraphicsItem_IsPanel(void* ptr);
char QGraphicsItem_IsSelected(void* ptr);
char QGraphicsItem_IsUnderMouse(void* ptr);
char QGraphicsItem_IsVisible(void* ptr);
char QGraphicsItem_IsVisibleTo(void* ptr, void* parent);
char QGraphicsItem_IsWidget(void* ptr);
char QGraphicsItem_IsWindow(void* ptr);
void* QGraphicsItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsItem_ItemChangeDefault(void* ptr, long long change, void* value);
void* QGraphicsItem_ItemTransform(void* ptr, void* other, char* ok);
void QGraphicsItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsItem_KeyReleaseEventDefault(void* ptr, void* event);
void* QGraphicsItem_MapFromItem(void* ptr, void* item, void* point);
void* QGraphicsItem_MapFromItem2(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapFromItem3(void* ptr, void* item, void* polygon);
void* QGraphicsItem_MapFromItem4(void* ptr, void* item, void* path);
void* QGraphicsItem_MapFromItem5(void* ptr, void* item, double x, double y);
void* QGraphicsItem_MapFromItem6(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapFromParent(void* ptr, void* point);
void* QGraphicsItem_MapFromParent2(void* ptr, void* rect);
void* QGraphicsItem_MapFromParent3(void* ptr, void* polygon);
void* QGraphicsItem_MapFromParent4(void* ptr, void* path);
void* QGraphicsItem_MapFromParent5(void* ptr, double x, double y);
void* QGraphicsItem_MapFromParent6(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapFromScene(void* ptr, void* point);
void* QGraphicsItem_MapFromScene2(void* ptr, void* rect);
void* QGraphicsItem_MapFromScene3(void* ptr, void* polygon);
void* QGraphicsItem_MapFromScene4(void* ptr, void* path);
void* QGraphicsItem_MapFromScene5(void* ptr, double x, double y);
void* QGraphicsItem_MapFromScene6(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectFromItem(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapRectFromItem2(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapRectFromParent(void* ptr, void* rect);
void* QGraphicsItem_MapRectFromParent2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectFromScene(void* ptr, void* rect);
void* QGraphicsItem_MapRectFromScene2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectToItem(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapRectToItem2(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapRectToParent(void* ptr, void* rect);
void* QGraphicsItem_MapRectToParent2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectToScene(void* ptr, void* rect);
void* QGraphicsItem_MapRectToScene2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapToItem(void* ptr, void* item, void* point);
void* QGraphicsItem_MapToItem2(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapToItem3(void* ptr, void* item, void* polygon);
void* QGraphicsItem_MapToItem4(void* ptr, void* item, void* path);
void* QGraphicsItem_MapToItem5(void* ptr, void* item, double x, double y);
void* QGraphicsItem_MapToItem6(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapToParent(void* ptr, void* point);
void* QGraphicsItem_MapToParent2(void* ptr, void* rect);
void* QGraphicsItem_MapToParent3(void* ptr, void* polygon);
void* QGraphicsItem_MapToParent4(void* ptr, void* path);
void* QGraphicsItem_MapToParent5(void* ptr, double x, double y);
void* QGraphicsItem_MapToParent6(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapToScene(void* ptr, void* point);
void* QGraphicsItem_MapToScene2(void* ptr, void* rect);
void* QGraphicsItem_MapToScene3(void* ptr, void* polygon);
void* QGraphicsItem_MapToScene4(void* ptr, void* path);
void* QGraphicsItem_MapToScene5(void* ptr, double x, double y);
void* QGraphicsItem_MapToScene6(void* ptr, double x, double y, double w, double h);
void QGraphicsItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsItem_MousePressEvent(void* ptr, void* event);
void QGraphicsItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsItem_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsItem_MoveBy(void* ptr, double dx, double dy);
double QGraphicsItem_Opacity(void* ptr);
void* QGraphicsItem_OpaqueArea(void* ptr);
void* QGraphicsItem_OpaqueAreaDefault(void* ptr);
void QGraphicsItem_Paint(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsItem_Panel(void* ptr);
long long QGraphicsItem_PanelModality(void* ptr);
void* QGraphicsItem_ParentItem(void* ptr);
void* QGraphicsItem_ParentObject(void* ptr);
void* QGraphicsItem_ParentWidget(void* ptr);
void* QGraphicsItem_Pos(void* ptr);
void QGraphicsItem_PrepareGeometryChange(void* ptr);
void QGraphicsItem_RemoveSceneEventFilter(void* ptr, void* filterItem);
void QGraphicsItem_ResetTransform(void* ptr);
double QGraphicsItem_Rotation(void* ptr);
double QGraphicsItem_Scale2(void* ptr);
void* QGraphicsItem_Scene(void* ptr);
void* QGraphicsItem_SceneBoundingRect(void* ptr);
char QGraphicsItem_SceneEvent(void* ptr, void* event);
char QGraphicsItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsItem_ScenePos(void* ptr);
void* QGraphicsItem_SceneTransform(void* ptr);
void QGraphicsItem_Scroll(void* ptr, double dx, double dy, void* rect);
void QGraphicsItem_SetAcceptDrops(void* ptr, char on);
void QGraphicsItem_SetAcceptHoverEvents(void* ptr, char enabled);
void QGraphicsItem_SetAcceptTouchEvents(void* ptr, char enabled);
void QGraphicsItem_SetAcceptedMouseButtons(void* ptr, long long buttons);
void QGraphicsItem_SetActive(void* ptr, char active);
void QGraphicsItem_SetBoundingRegionGranularity(void* ptr, double granularity);
void QGraphicsItem_SetCacheMode(void* ptr, long long mode, void* logicalCacheSize);
void QGraphicsItem_SetCursor(void* ptr, void* cursor);
void QGraphicsItem_SetData(void* ptr, int key, void* value);
void QGraphicsItem_SetEnabled(void* ptr, char enabled);
void QGraphicsItem_SetFiltersChildEvents(void* ptr, char enabled);
void QGraphicsItem_SetFlag(void* ptr, long long flag, char enabled);
void QGraphicsItem_SetFlags(void* ptr, long long flags);
void QGraphicsItem_SetFocus(void* ptr, long long focusReason);
void QGraphicsItem_SetFocusProxy(void* ptr, void* item);
void QGraphicsItem_SetGraphicsEffect(void* ptr, void* effect);
void QGraphicsItem_SetGroup(void* ptr, void* group);
void QGraphicsItem_SetInputMethodHints(void* ptr, long long hints);
void QGraphicsItem_SetOpacity(void* ptr, double opacity);
void QGraphicsItem_SetPanelModality(void* ptr, long long panelModality);
void QGraphicsItem_SetParentItem(void* ptr, void* newParent);
void QGraphicsItem_SetPos(void* ptr, void* pos);
void QGraphicsItem_SetPos2(void* ptr, double x, double y);
void QGraphicsItem_SetRotation(void* ptr, double angle);
void QGraphicsItem_SetScale(void* ptr, double factor);
void QGraphicsItem_SetSelected(void* ptr, char selected);
void QGraphicsItem_SetToolTip(void* ptr, struct QtWidgets_PackedString toolTip);
void QGraphicsItem_SetTransform(void* ptr, void* matrix, char combine);
void QGraphicsItem_SetTransformOriginPoint(void* ptr, void* origin);
void QGraphicsItem_SetTransformOriginPoint2(void* ptr, double x, double y);
void QGraphicsItem_SetTransformations(void* ptr, void* transformations);
void QGraphicsItem_SetVisible(void* ptr, char visible);
void QGraphicsItem_SetX(void* ptr, double x);
void QGraphicsItem_SetY(void* ptr, double y);
void QGraphicsItem_SetZValue(void* ptr, double z);
void* QGraphicsItem_Shape(void* ptr);
void* QGraphicsItem_ShapeDefault(void* ptr);
void QGraphicsItem_Show(void* ptr);
void QGraphicsItem_StackBefore(void* ptr, void* sibling);
void* QGraphicsItem_ToGraphicsObject(void* ptr);
void* QGraphicsItem_ToGraphicsObject2(void* ptr);
struct QtWidgets_PackedString QGraphicsItem_ToolTip(void* ptr);
void* QGraphicsItem_TopLevelItem(void* ptr);
void* QGraphicsItem_TopLevelWidget(void* ptr);
void* QGraphicsItem_Transform(void* ptr);
void* QGraphicsItem_TransformOriginPoint(void* ptr);
struct QtWidgets_PackedList QGraphicsItem_Transformations(void* ptr);
int QGraphicsItem_Type(void* ptr);
int QGraphicsItem_TypeDefault(void* ptr);
void QGraphicsItem_UngrabKeyboard(void* ptr);
void QGraphicsItem_UngrabMouse(void* ptr);
void QGraphicsItem_UnsetCursor(void* ptr);
void QGraphicsItem_Update(void* ptr, void* rect);
void QGraphicsItem_Update2(void* ptr, double x, double y, double width, double height);
void QGraphicsItem_WheelEvent(void* ptr, void* event);
void QGraphicsItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsItem_Window(void* ptr);
double QGraphicsItem_X(void* ptr);
double QGraphicsItem_Y(void* ptr);
double QGraphicsItem_ZValue(void* ptr);
void QGraphicsItem_DestroyQGraphicsItem(void* ptr);
void QGraphicsItem_DestroyQGraphicsItemDefault(void* ptr);
void* QGraphicsItem___childItems_atList(void* ptr, int i);
void QGraphicsItem___childItems_setList(void* ptr, void* i);
void* QGraphicsItem___childItems_newList(void* ptr);
void* QGraphicsItem___children_atList(void* ptr, int i);
void QGraphicsItem___children_setList(void* ptr, void* i);
void* QGraphicsItem___children_newList(void* ptr);
void* QGraphicsItem___collidingItems_atList(void* ptr, int i);
void QGraphicsItem___collidingItems_setList(void* ptr, void* i);
void* QGraphicsItem___collidingItems_newList(void* ptr);
void* QGraphicsItem___setTransformations_transformations_atList(void* ptr, int i);
void QGraphicsItem___setTransformations_transformations_setList(void* ptr, void* i);
void* QGraphicsItem___setTransformations_transformations_newList(void* ptr);
void* QGraphicsItem___transformations_atList(void* ptr, int i);
void QGraphicsItem___transformations_setList(void* ptr, void* i);
void* QGraphicsItem___transformations_newList(void* ptr);
void* QGraphicsItemAnimation_NewQGraphicsItemAnimation(void* parent);
void QGraphicsItemAnimation_AfterAnimationStep(void* ptr, double step);
void QGraphicsItemAnimation_AfterAnimationStepDefault(void* ptr, double step);
void QGraphicsItemAnimation_BeforeAnimationStep(void* ptr, double step);
void QGraphicsItemAnimation_BeforeAnimationStepDefault(void* ptr, double step);
void QGraphicsItemAnimation_Clear(void* ptr);
double QGraphicsItemAnimation_HorizontalScaleAt(void* ptr, double step);
double QGraphicsItemAnimation_HorizontalShearAt(void* ptr, double step);
void* QGraphicsItemAnimation_Item(void* ptr);
void* QGraphicsItemAnimation_PosAt(void* ptr, double step);
double QGraphicsItemAnimation_RotationAt(void* ptr, double step);
void QGraphicsItemAnimation_SetItem(void* ptr, void* item);
void QGraphicsItemAnimation_SetPosAt(void* ptr, double step, void* point);
void QGraphicsItemAnimation_SetRotationAt(void* ptr, double step, double angle);
void QGraphicsItemAnimation_SetScaleAt(void* ptr, double step, double sx, double sy);
void QGraphicsItemAnimation_SetShearAt(void* ptr, double step, double sh, double sv);
void QGraphicsItemAnimation_SetStep(void* ptr, double step);
void QGraphicsItemAnimation_SetStepDefault(void* ptr, double step);
void QGraphicsItemAnimation_SetTimeLine(void* ptr, void* timeLine);
void QGraphicsItemAnimation_SetTranslationAt(void* ptr, double step, double dx, double dy);
void* QGraphicsItemAnimation_TimeLine(void* ptr);
void* QGraphicsItemAnimation_TransformAt(void* ptr, double step);
double QGraphicsItemAnimation_VerticalScaleAt(void* ptr, double step);
double QGraphicsItemAnimation_VerticalShearAt(void* ptr, double step);
double QGraphicsItemAnimation_XTranslationAt(void* ptr, double step);
double QGraphicsItemAnimation_YTranslationAt(void* ptr, double step);
void QGraphicsItemAnimation_DestroyQGraphicsItemAnimation(void* ptr);
void QGraphicsItemAnimation_DestroyQGraphicsItemAnimationDefault(void* ptr);
void* QGraphicsItemAnimation___children_atList(void* ptr, int i);
void QGraphicsItemAnimation___children_setList(void* ptr, void* i);
void* QGraphicsItemAnimation___children_newList(void* ptr);
void* QGraphicsItemAnimation___dynamicPropertyNames_atList(void* ptr, int i);
void QGraphicsItemAnimation___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGraphicsItemAnimation___dynamicPropertyNames_newList(void* ptr);
void* QGraphicsItemAnimation___findChildren_atList(void* ptr, int i);
void QGraphicsItemAnimation___findChildren_setList(void* ptr, void* i);
void* QGraphicsItemAnimation___findChildren_newList(void* ptr);
void* QGraphicsItemAnimation___findChildren_atList3(void* ptr, int i);
void QGraphicsItemAnimation___findChildren_setList3(void* ptr, void* i);
void* QGraphicsItemAnimation___findChildren_newList3(void* ptr);
void QGraphicsItemAnimation_ChildEventDefault(void* ptr, void* event);
void QGraphicsItemAnimation_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsItemAnimation_CustomEventDefault(void* ptr, void* event);
void QGraphicsItemAnimation_DeleteLaterDefault(void* ptr);
void QGraphicsItemAnimation_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsItemAnimation_EventDefault(void* ptr, void* e);
char QGraphicsItemAnimation_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsItemAnimation_MetaObjectDefault(void* ptr);
void QGraphicsItemAnimation_TimerEventDefault(void* ptr, void* event);
void* QGraphicsItemGroup_NewQGraphicsItemGroup(void* parent);
void QGraphicsItemGroup_AddToGroup(void* ptr, void* item);
void* QGraphicsItemGroup_BoundingRect(void* ptr);
void* QGraphicsItemGroup_BoundingRectDefault(void* ptr);
void QGraphicsItemGroup_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsItemGroup_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsItemGroup_RemoveFromGroup(void* ptr, void* item);
void QGraphicsItemGroup_DestroyQGraphicsItemGroup(void* ptr);
void QGraphicsItemGroup_DestroyQGraphicsItemGroupDefault(void* ptr);
void* QGraphicsLayout_NewQGraphicsLayout(void* parent);
void QGraphicsLayout_Activate(void* ptr);
void QGraphicsLayout_AddChildLayoutItem(void* ptr, void* layoutItem);
int QGraphicsLayout_Count(void* ptr);
void QGraphicsLayout_Invalidate(void* ptr);
void QGraphicsLayout_InvalidateDefault(void* ptr);
char QGraphicsLayout_IsActivated(void* ptr);
void* QGraphicsLayout_ItemAt(void* ptr, int i);
void QGraphicsLayout_RemoveAt(void* ptr, int index);
void QGraphicsLayout_SetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLayout_WidgetEvent(void* ptr, void* e);
void QGraphicsLayout_WidgetEventDefault(void* ptr, void* e);
void QGraphicsLayout_DestroyQGraphicsLayout(void* ptr);
void QGraphicsLayout_DestroyQGraphicsLayoutDefault(void* ptr);
void* QGraphicsLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
void* QGraphicsLayoutItem_NewQGraphicsLayoutItem(void* parent, char isLayout);
void* QGraphicsLayoutItem_ContentsRect(void* ptr);
void* QGraphicsLayoutItem_EffectiveSizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsLayoutItem_Geometry(void* ptr);
void QGraphicsLayoutItem_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLayoutItem_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void* QGraphicsLayoutItem_GraphicsItem(void* ptr);
char QGraphicsLayoutItem_IsLayout(void* ptr);
double QGraphicsLayoutItem_MaximumHeight(void* ptr);
void* QGraphicsLayoutItem_MaximumSize(void* ptr);
double QGraphicsLayoutItem_MaximumWidth(void* ptr);
double QGraphicsLayoutItem_MinimumHeight(void* ptr);
void* QGraphicsLayoutItem_MinimumSize(void* ptr);
double QGraphicsLayoutItem_MinimumWidth(void* ptr);
char QGraphicsLayoutItem_OwnedByLayout(void* ptr);
void* QGraphicsLayoutItem_ParentLayoutItem(void* ptr);
double QGraphicsLayoutItem_PreferredHeight(void* ptr);
void* QGraphicsLayoutItem_PreferredSize(void* ptr);
double QGraphicsLayoutItem_PreferredWidth(void* ptr);
void QGraphicsLayoutItem_SetGeometry(void* ptr, void* rect);
void QGraphicsLayoutItem_SetGeometryDefault(void* ptr, void* rect);
void QGraphicsLayoutItem_SetGraphicsItem(void* ptr, void* item);
void QGraphicsLayoutItem_SetMaximumHeight(void* ptr, double height);
void QGraphicsLayoutItem_SetMaximumSize(void* ptr, void* size);
void QGraphicsLayoutItem_SetMaximumSize2(void* ptr, double w, double h);
void QGraphicsLayoutItem_SetMaximumWidth(void* ptr, double width);
void QGraphicsLayoutItem_SetMinimumHeight(void* ptr, double height);
void QGraphicsLayoutItem_SetMinimumSize(void* ptr, void* size);
void QGraphicsLayoutItem_SetMinimumSize2(void* ptr, double w, double h);
void QGraphicsLayoutItem_SetMinimumWidth(void* ptr, double width);
void QGraphicsLayoutItem_SetOwnedByLayout(void* ptr, char ownership);
void QGraphicsLayoutItem_SetParentLayoutItem(void* ptr, void* parent);
void QGraphicsLayoutItem_SetPreferredHeight(void* ptr, double height);
void QGraphicsLayoutItem_SetPreferredSize(void* ptr, void* size);
void QGraphicsLayoutItem_SetPreferredSize2(void* ptr, double w, double h);
void QGraphicsLayoutItem_SetPreferredWidth(void* ptr, double width);
void QGraphicsLayoutItem_SetSizePolicy(void* ptr, void* policy);
void QGraphicsLayoutItem_SetSizePolicy2(void* ptr, long long hPolicy, long long vPolicy, long long controlType);
void* QGraphicsLayoutItem_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsLayoutItem_SizePolicy(void* ptr);
void QGraphicsLayoutItem_UpdateGeometry(void* ptr);
void QGraphicsLayoutItem_UpdateGeometryDefault(void* ptr);
void QGraphicsLayoutItem_DestroyQGraphicsLayoutItem(void* ptr);
void QGraphicsLayoutItem_DestroyQGraphicsLayoutItemDefault(void* ptr);
void* QGraphicsLineItem_NewQGraphicsLineItem(void* parent);
void* QGraphicsLineItem_NewQGraphicsLineItem2(void* line, void* parent);
void* QGraphicsLineItem_NewQGraphicsLineItem3(double x1, double y1, double x2, double y2, void* parent);
void* QGraphicsLineItem_BoundingRect(void* ptr);
void* QGraphicsLineItem_BoundingRectDefault(void* ptr);
void* QGraphicsLineItem_Line(void* ptr);
void QGraphicsLineItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsLineItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsLineItem_Pen(void* ptr);
void QGraphicsLineItem_SetLine(void* ptr, void* line);
void QGraphicsLineItem_SetLine2(void* ptr, double x1, double y1, double x2, double y2);
void QGraphicsLineItem_SetPen(void* ptr, void* pen);
void QGraphicsLineItem_DestroyQGraphicsLineItem(void* ptr);
void QGraphicsLineItem_DestroyQGraphicsLineItemDefault(void* ptr);
void* QGraphicsLinearLayout_NewQGraphicsLinearLayout(void* parent);
void* QGraphicsLinearLayout_NewQGraphicsLinearLayout2(long long orientation, void* parent);
void QGraphicsLinearLayout_AddItem(void* ptr, void* item);
void QGraphicsLinearLayout_AddStretch(void* ptr, int stretch);
long long QGraphicsLinearLayout_Alignment(void* ptr, void* item);
int QGraphicsLinearLayout_Count(void* ptr);
int QGraphicsLinearLayout_CountDefault(void* ptr);
void QGraphicsLinearLayout_InsertItem(void* ptr, int index, void* item);
void QGraphicsLinearLayout_InsertStretch(void* ptr, int index, int stretch);
void* QGraphicsLinearLayout_ItemAt(void* ptr, int index);
void* QGraphicsLinearLayout_ItemAtDefault(void* ptr, int index);
double QGraphicsLinearLayout_ItemSpacing(void* ptr, int index);
long long QGraphicsLinearLayout_Orientation(void* ptr);
void QGraphicsLinearLayout_RemoveAt(void* ptr, int index);
void QGraphicsLinearLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsLinearLayout_RemoveItem(void* ptr, void* item);
void QGraphicsLinearLayout_SetAlignment(void* ptr, void* item, long long alignment);
void QGraphicsLinearLayout_SetItemSpacing(void* ptr, int index, double spacing);
void QGraphicsLinearLayout_SetOrientation(void* ptr, long long orientation);
void QGraphicsLinearLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsLinearLayout_SetStretchFactor(void* ptr, void* item, int stretch);
void* QGraphicsLinearLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsLinearLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
double QGraphicsLinearLayout_Spacing(void* ptr);
int QGraphicsLinearLayout_StretchFactor(void* ptr, void* item);
void QGraphicsLinearLayout_DestroyQGraphicsLinearLayout(void* ptr);
void QGraphicsLinearLayout_DestroyQGraphicsLinearLayoutDefault(void* ptr);
void* QGraphicsObject_NewQGraphicsObject(void* parent);
void QGraphicsObject_ConnectEnabledChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectEnabledChanged(void* ptr);
void QGraphicsObject_EnabledChanged(void* ptr);
char QGraphicsObject_Event(void* ptr, void* ev);
char QGraphicsObject_EventDefault(void* ptr, void* ev);
void QGraphicsObject_GrabGesture(void* ptr, long long gesture, long long flags);
void QGraphicsObject_ConnectOpacityChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectOpacityChanged(void* ptr);
void QGraphicsObject_OpacityChanged(void* ptr);
void QGraphicsObject_ConnectParentChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectParentChanged(void* ptr);
void QGraphicsObject_ParentChanged(void* ptr);
void QGraphicsObject_ConnectRotationChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectRotationChanged(void* ptr);
void QGraphicsObject_RotationChanged(void* ptr);
void QGraphicsObject_ConnectScaleChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectScaleChanged(void* ptr);
void QGraphicsObject_ScaleChanged(void* ptr);
void QGraphicsObject_UngrabGesture(void* ptr, long long gesture);
void QGraphicsObject_UpdateMicroFocus(void* ptr);
void QGraphicsObject_UpdateMicroFocusDefault(void* ptr);
void QGraphicsObject_ConnectVisibleChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectVisibleChanged(void* ptr);
void QGraphicsObject_VisibleChanged(void* ptr);
void QGraphicsObject_ConnectXChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectXChanged(void* ptr);
void QGraphicsObject_XChanged(void* ptr);
void QGraphicsObject_ConnectYChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectYChanged(void* ptr);
void QGraphicsObject_YChanged(void* ptr);
void QGraphicsObject_ConnectZChanged(void* ptr, long long t);
void QGraphicsObject_DisconnectZChanged(void* ptr);
void QGraphicsObject_ZChanged(void* ptr);
void QGraphicsObject_DestroyQGraphicsObject(void* ptr);
void QGraphicsObject_DestroyQGraphicsObjectDefault(void* ptr);
void* QGraphicsObject_GraphicsEffect(void* ptr);
void QGraphicsObject_SetGraphicsEffect(void* ptr, void* effect);
char QGraphicsObject_IsEnabled(void* ptr);
void QGraphicsObject_SetEnabled(void* ptr, char enabled);
double QGraphicsObject_Opacity(void* ptr);
void QGraphicsObject_SetOpacity(void* ptr, double opacity);
void* QGraphicsObject_Parent(void* ptr);
void QGraphicsObject_SetParent(void* ptr, void* parent);
void* QGraphicsObject_Pos(void* ptr);
void QGraphicsObject_SetPos(void* ptr, void* pos);
double QGraphicsObject_Rotation(void* ptr);
void QGraphicsObject_SetRotation(void* ptr, double rotation);
double QGraphicsObject_Scale(void* ptr);
void QGraphicsObject_SetScale(void* ptr, double scale);
void* QGraphicsObject_TransformOriginPoint(void* ptr);
void QGraphicsObject_SetTransformOriginPoint(void* ptr, void* transformOriginPoint);
char QGraphicsObject_IsVisible(void* ptr);
void QGraphicsObject_SetVisible(void* ptr, char visible);
double QGraphicsObject_X(void* ptr);
void QGraphicsObject_SetX(void* ptr, double x);
double QGraphicsObject_Y(void* ptr);
void QGraphicsObject_SetY(void* ptr, double y);
double QGraphicsObject_ZValue(void* ptr);
void QGraphicsObject_SetZValue(void* ptr, double z);
void* QGraphicsObject___children_atList(void* ptr, int i);
void QGraphicsObject___children_setList(void* ptr, void* i);
void* QGraphicsObject___children_newList(void* ptr);
void* QGraphicsObject___dynamicPropertyNames_atList(void* ptr, int i);
void QGraphicsObject___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGraphicsObject___dynamicPropertyNames_newList(void* ptr);
void* QGraphicsObject___findChildren_atList(void* ptr, int i);
void QGraphicsObject___findChildren_setList(void* ptr, void* i);
void* QGraphicsObject___findChildren_newList(void* ptr);
void* QGraphicsObject___findChildren_atList3(void* ptr, int i);
void QGraphicsObject___findChildren_setList3(void* ptr, void* i);
void* QGraphicsObject___findChildren_newList3(void* ptr);
void QGraphicsObject_ChildEvent(void* ptr, void* event);
void QGraphicsObject_ChildEventDefault(void* ptr, void* event);
void QGraphicsObject_ConnectNotify(void* ptr, void* sign);
void QGraphicsObject_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsObject_CustomEvent(void* ptr, void* event);
void QGraphicsObject_CustomEventDefault(void* ptr, void* event);
void QGraphicsObject_DeleteLater(void* ptr);
void QGraphicsObject_DeleteLaterDefault(void* ptr);
void QGraphicsObject_DisconnectNotify(void* ptr, void* sign);
void QGraphicsObject_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsObject_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsObject_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsObject_MetaObject(void* ptr);
void* QGraphicsObject_MetaObjectDefault(void* ptr);
void QGraphicsObject_TimerEvent(void* ptr, void* event);
void QGraphicsObject_TimerEventDefault(void* ptr, void* event);
void* QGraphicsObject_BoundingRect(void* ptr);
void* QGraphicsObject_BoundingRectDefault(void* ptr);
void QGraphicsObject_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsObject_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsOpacityEffect_NewQGraphicsOpacityEffect(void* parent);
void QGraphicsOpacityEffect_Draw(void* ptr, void* painter);
void QGraphicsOpacityEffect_DrawDefault(void* ptr, void* painter);
double QGraphicsOpacityEffect_Opacity(void* ptr);
void QGraphicsOpacityEffect_ConnectOpacityChanged(void* ptr, long long t);
void QGraphicsOpacityEffect_DisconnectOpacityChanged(void* ptr);
void QGraphicsOpacityEffect_OpacityChanged(void* ptr, double opacity);
void* QGraphicsOpacityEffect_OpacityMask(void* ptr);
void QGraphicsOpacityEffect_ConnectOpacityMaskChanged(void* ptr, long long t);
void QGraphicsOpacityEffect_DisconnectOpacityMaskChanged(void* ptr);
void QGraphicsOpacityEffect_OpacityMaskChanged(void* ptr, void* mask);
void QGraphicsOpacityEffect_SetOpacity(void* ptr, double opacity);
void QGraphicsOpacityEffect_SetOpacityDefault(void* ptr, double opacity);
void QGraphicsOpacityEffect_SetOpacityMask(void* ptr, void* mask);
void QGraphicsOpacityEffect_SetOpacityMaskDefault(void* ptr, void* mask);
void QGraphicsOpacityEffect_DestroyQGraphicsOpacityEffect(void* ptr);
void QGraphicsOpacityEffect_DestroyQGraphicsOpacityEffectDefault(void* ptr);
void* QGraphicsPathItem_NewQGraphicsPathItem(void* parent);
void* QGraphicsPathItem_NewQGraphicsPathItem2(void* path, void* parent);
void* QGraphicsPathItem_BoundingRect(void* ptr);
void* QGraphicsPathItem_BoundingRectDefault(void* ptr);
void QGraphicsPathItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPathItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsPathItem_Path(void* ptr);
void QGraphicsPathItem_SetPath(void* ptr, void* path);
void QGraphicsPathItem_DestroyQGraphicsPathItem(void* ptr);
void QGraphicsPathItem_DestroyQGraphicsPathItemDefault(void* ptr);
void* QGraphicsPixmapItem_NewQGraphicsPixmapItem(void* parent);
void* QGraphicsPixmapItem_NewQGraphicsPixmapItem2(void* pixmap, void* parent);
void* QGraphicsPixmapItem_BoundingRect(void* ptr);
void* QGraphicsPixmapItem_BoundingRectDefault(void* ptr);
void* QGraphicsPixmapItem_Offset(void* ptr);
void QGraphicsPixmapItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPixmapItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsPixmapItem_Pixmap(void* ptr);
void QGraphicsPixmapItem_SetOffset(void* ptr, void* offset);
void QGraphicsPixmapItem_SetOffset2(void* ptr, double x, double y);
void QGraphicsPixmapItem_SetPixmap(void* ptr, void* pixmap);
void QGraphicsPixmapItem_SetShapeMode(void* ptr, long long mode);
void QGraphicsPixmapItem_SetTransformationMode(void* ptr, long long mode);
long long QGraphicsPixmapItem_ShapeMode(void* ptr);
long long QGraphicsPixmapItem_TransformationMode(void* ptr);
void QGraphicsPixmapItem_DestroyQGraphicsPixmapItem(void* ptr);
void QGraphicsPixmapItem_DestroyQGraphicsPixmapItemDefault(void* ptr);
void* QGraphicsPolygonItem_NewQGraphicsPolygonItem(void* parent);
void* QGraphicsPolygonItem_NewQGraphicsPolygonItem2(void* polygon, void* parent);
void* QGraphicsPolygonItem_BoundingRect(void* ptr);
void* QGraphicsPolygonItem_BoundingRectDefault(void* ptr);
long long QGraphicsPolygonItem_FillRule(void* ptr);
void QGraphicsPolygonItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPolygonItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsPolygonItem_Polygon(void* ptr);
void QGraphicsPolygonItem_SetFillRule(void* ptr, long long rule);
void QGraphicsPolygonItem_SetPolygon(void* ptr, void* polygon);
void QGraphicsPolygonItem_DestroyQGraphicsPolygonItem(void* ptr);
void QGraphicsPolygonItem_DestroyQGraphicsPolygonItemDefault(void* ptr);
void* QGraphicsProxyWidget_NewQGraphicsProxyWidget(void* parent, long long wFlags);
void* QGraphicsProxyWidget_CreateProxyForChildWidget(void* ptr, void* child);
void* QGraphicsProxyWidget_NewProxyWidget(void* ptr, void* child);
void* QGraphicsProxyWidget_NewProxyWidgetDefault(void* ptr, void* child);
void QGraphicsProxyWidget_SetWidget(void* ptr, void* widget);
void* QGraphicsProxyWidget_SubWidgetRect(void* ptr, void* widget);
void* QGraphicsProxyWidget_Widget(void* ptr);
void QGraphicsProxyWidget_DestroyQGraphicsProxyWidget(void* ptr);
void QGraphicsProxyWidget_DestroyQGraphicsProxyWidgetDefault(void* ptr);
void* QGraphicsRectItem_NewQGraphicsRectItem(void* parent);
void* QGraphicsRectItem_NewQGraphicsRectItem2(void* rect, void* parent);
void* QGraphicsRectItem_NewQGraphicsRectItem3(double x, double y, double width, double height, void* parent);
void* QGraphicsRectItem_BoundingRect(void* ptr);
void* QGraphicsRectItem_BoundingRectDefault(void* ptr);
void QGraphicsRectItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsRectItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsRectItem_Rect(void* ptr);
void QGraphicsRectItem_SetRect(void* ptr, void* rectangle);
void QGraphicsRectItem_SetRect2(void* ptr, double x, double y, double width, double height);
void QGraphicsRectItem_DestroyQGraphicsRectItem(void* ptr);
void QGraphicsRectItem_DestroyQGraphicsRectItemDefault(void* ptr);
void* QGraphicsRotation_NewQGraphicsRotation(void* parent);
double QGraphicsRotation_Angle(void* ptr);
void QGraphicsRotation_ConnectAngleChanged(void* ptr, long long t);
void QGraphicsRotation_DisconnectAngleChanged(void* ptr);
void QGraphicsRotation_AngleChanged(void* ptr);
void QGraphicsRotation_ApplyTo(void* ptr, void* matrix);
void QGraphicsRotation_ApplyToDefault(void* ptr, void* matrix);
void* QGraphicsRotation_Axis(void* ptr);
void QGraphicsRotation_ConnectAxisChanged(void* ptr, long long t);
void QGraphicsRotation_DisconnectAxisChanged(void* ptr);
void QGraphicsRotation_AxisChanged(void* ptr);
void* QGraphicsRotation_Origin(void* ptr);
void QGraphicsRotation_ConnectOriginChanged(void* ptr, long long t);
void QGraphicsRotation_DisconnectOriginChanged(void* ptr);
void QGraphicsRotation_OriginChanged(void* ptr);
void QGraphicsRotation_SetAngle(void* ptr, double vqr);
void QGraphicsRotation_SetAxis(void* ptr, void* axis);
void QGraphicsRotation_SetAxis2(void* ptr, long long axis);
void QGraphicsRotation_SetOrigin(void* ptr, void* point);
void QGraphicsRotation_DestroyQGraphicsRotation(void* ptr);
void QGraphicsRotation_DestroyQGraphicsRotationDefault(void* ptr);
void* QGraphicsScale_NewQGraphicsScale(void* parent);
void QGraphicsScale_ApplyTo(void* ptr, void* matrix);
void QGraphicsScale_ApplyToDefault(void* ptr, void* matrix);
void* QGraphicsScale_Origin(void* ptr);
void QGraphicsScale_ConnectOriginChanged(void* ptr, long long t);
void QGraphicsScale_DisconnectOriginChanged(void* ptr);
void QGraphicsScale_OriginChanged(void* ptr);
void QGraphicsScale_ConnectScaleChanged(void* ptr, long long t);
void QGraphicsScale_DisconnectScaleChanged(void* ptr);
void QGraphicsScale_ScaleChanged(void* ptr);
void QGraphicsScale_SetOrigin(void* ptr, void* point);
void QGraphicsScale_SetXScale(void* ptr, double vqr);
void QGraphicsScale_SetYScale(void* ptr, double vqr);
void QGraphicsScale_SetZScale(void* ptr, double vqr);
double QGraphicsScale_XScale(void* ptr);
void QGraphicsScale_ConnectXScaleChanged(void* ptr, long long t);
void QGraphicsScale_DisconnectXScaleChanged(void* ptr);
void QGraphicsScale_XScaleChanged(void* ptr);
double QGraphicsScale_YScale(void* ptr);
void QGraphicsScale_ConnectYScaleChanged(void* ptr, long long t);
void QGraphicsScale_DisconnectYScaleChanged(void* ptr);
void QGraphicsScale_YScaleChanged(void* ptr);
double QGraphicsScale_ZScale(void* ptr);
void QGraphicsScale_ConnectZScaleChanged(void* ptr, long long t);
void QGraphicsScale_DisconnectZScaleChanged(void* ptr);
void QGraphicsScale_ZScaleChanged(void* ptr);
void QGraphicsScale_DestroyQGraphicsScale(void* ptr);
void QGraphicsScale_DestroyQGraphicsScaleDefault(void* ptr);
void* QGraphicsScene_NewQGraphicsScene(void* parent);
void* QGraphicsScene_NewQGraphicsScene2(void* sceneRect, void* parent);
void* QGraphicsScene_NewQGraphicsScene3(double x, double y, double width, double height, void* parent);
void* QGraphicsScene_ActivePanel(void* ptr);
void* QGraphicsScene_ActiveWindow(void* ptr);
void* QGraphicsScene_AddEllipse(void* ptr, void* rect, void* pen, void* brush);
void* QGraphicsScene_AddEllipse2(void* ptr, double x, double y, double w, double h, void* pen, void* brush);
void QGraphicsScene_AddItem(void* ptr, void* item);
void* QGraphicsScene_AddLine(void* ptr, void* line, void* pen);
void* QGraphicsScene_AddLine2(void* ptr, double x1, double y1, double x2, double y2, void* pen);
void* QGraphicsScene_AddPath(void* ptr, void* path, void* pen, void* brush);
void* QGraphicsScene_AddPixmap(void* ptr, void* pixmap);
void* QGraphicsScene_AddPolygon(void* ptr, void* polygon, void* pen, void* brush);
void* QGraphicsScene_AddRect(void* ptr, void* rect, void* pen, void* brush);
void* QGraphicsScene_AddRect2(void* ptr, double x, double y, double w, double h, void* pen, void* brush);
void* QGraphicsScene_AddSimpleText(void* ptr, struct QtWidgets_PackedString text, void* font);
void* QGraphicsScene_AddText(void* ptr, struct QtWidgets_PackedString text, void* font);
void* QGraphicsScene_AddWidget(void* ptr, void* widget, long long wFlags);
void QGraphicsScene_Advance(void* ptr);
void QGraphicsScene_AdvanceDefault(void* ptr);
void* QGraphicsScene_BackgroundBrush(void* ptr);
int QGraphicsScene_BspTreeDepth(void* ptr);
void QGraphicsScene_ConnectChanged(void* ptr, long long t);
void QGraphicsScene_DisconnectChanged(void* ptr);
void QGraphicsScene_Changed(void* ptr, void* region);
void QGraphicsScene_Clear(void* ptr);
void QGraphicsScene_ClearDefault(void* ptr);
void QGraphicsScene_ClearFocus(void* ptr);
void QGraphicsScene_ClearSelection(void* ptr);
void QGraphicsScene_ClearSelectionDefault(void* ptr);
struct QtWidgets_PackedList QGraphicsScene_CollidingItems(void* ptr, void* item, long long mode);
void QGraphicsScene_ContextMenuEvent(void* ptr, void* contextMenuEvent);
void QGraphicsScene_ContextMenuEventDefault(void* ptr, void* contextMenuEvent);
void* QGraphicsScene_CreateItemGroup(void* ptr, void* items);
void QGraphicsScene_DestroyItemGroup(void* ptr, void* group);
void QGraphicsScene_DragEnterEvent(void* ptr, void* event);
void QGraphicsScene_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsScene_DragLeaveEvent(void* ptr, void* event);
void QGraphicsScene_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsScene_DragMoveEvent(void* ptr, void* event);
void QGraphicsScene_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsScene_DrawBackground(void* ptr, void* painter, void* rect);
void QGraphicsScene_DrawBackgroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsScene_DrawForeground(void* ptr, void* painter, void* rect);
void QGraphicsScene_DrawForegroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsScene_DropEvent(void* ptr, void* event);
void QGraphicsScene_DropEventDefault(void* ptr, void* event);
char QGraphicsScene_EventDefault(void* ptr, void* event);
char QGraphicsScene_EventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsScene_FocusInEvent(void* ptr, void* focusEvent);
void QGraphicsScene_FocusInEventDefault(void* ptr, void* focusEvent);
void* QGraphicsScene_FocusItem(void* ptr);
void QGraphicsScene_ConnectFocusItemChanged(void* ptr, long long t);
void QGraphicsScene_DisconnectFocusItemChanged(void* ptr);
void QGraphicsScene_FocusItemChanged(void* ptr, void* newFocusItem, void* oldFocusItem, long long reason);
char QGraphicsScene_FocusNextPrevChild(void* ptr, char next);
char QGraphicsScene_FocusNextPrevChildDefault(void* ptr, char next);
char QGraphicsScene_FocusOnTouch(void* ptr);
void QGraphicsScene_FocusOutEvent(void* ptr, void* focusEvent);
void QGraphicsScene_FocusOutEventDefault(void* ptr, void* focusEvent);
void* QGraphicsScene_Font(void* ptr);
void* QGraphicsScene_ForegroundBrush(void* ptr);
char QGraphicsScene_HasFocus(void* ptr);
double QGraphicsScene_Height(void* ptr);
void QGraphicsScene_HelpEvent(void* ptr, void* helpEvent);
void QGraphicsScene_HelpEventDefault(void* ptr, void* helpEvent);
void QGraphicsScene_InputMethodEvent(void* ptr, void* event);
void QGraphicsScene_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsScene_InputMethodQuery(void* ptr, long long query);
void* QGraphicsScene_InputMethodQueryDefault(void* ptr, long long query);
void QGraphicsScene_Invalidate(void* ptr, void* rect, long long layers);
void QGraphicsScene_InvalidateDefault(void* ptr, void* rect, long long layers);
void QGraphicsScene_Invalidate2(void* ptr, double x, double y, double w, double h, long long layers);
char QGraphicsScene_IsActive(void* ptr);
char QGraphicsScene_IsSortCacheEnabled(void* ptr);
void* QGraphicsScene_ItemAt(void* ptr, void* position, void* deviceTransform);
void* QGraphicsScene_ItemAt4(void* ptr, double x, double y, void* deviceTransform);
long long QGraphicsScene_ItemIndexMethod(void* ptr);
struct QtWidgets_PackedList QGraphicsScene_Items(void* ptr, long long order);
struct QtWidgets_PackedList QGraphicsScene_Items2(void* ptr, void* pos, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items3(void* ptr, void* rect, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items4(void* ptr, void* polygon, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items5(void* ptr, void* path, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items7(void* ptr, double x, double y, double w, double h, long long mode, long long order, void* deviceTransform);
void* QGraphicsScene_ItemsBoundingRect(void* ptr);
void QGraphicsScene_KeyPressEvent(void* ptr, void* keyEvent);
void QGraphicsScene_KeyPressEventDefault(void* ptr, void* keyEvent);
void QGraphicsScene_KeyReleaseEvent(void* ptr, void* keyEvent);
void QGraphicsScene_KeyReleaseEventDefault(void* ptr, void* keyEvent);
double QGraphicsScene_MinimumRenderSize(void* ptr);
void QGraphicsScene_MouseDoubleClickEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseDoubleClickEventDefault(void* ptr, void* mouseEvent);
void* QGraphicsScene_MouseGrabberItem(void* ptr);
void QGraphicsScene_MouseMoveEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseMoveEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_MousePressEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MousePressEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void* QGraphicsScene_Palette(void* ptr);
void QGraphicsScene_RemoveItem(void* ptr, void* item);
void QGraphicsScene_Render(void* ptr, void* painter, void* target, void* source, long long aspectRatioMode);
void* QGraphicsScene_SceneRect(void* ptr);
void QGraphicsScene_ConnectSceneRectChanged(void* ptr, long long t);
void QGraphicsScene_DisconnectSceneRectChanged(void* ptr);
void QGraphicsScene_SceneRectChanged(void* ptr, void* rect);
struct QtWidgets_PackedList QGraphicsScene_SelectedItems(void* ptr);
void* QGraphicsScene_SelectionArea(void* ptr);
void QGraphicsScene_ConnectSelectionChanged(void* ptr, long long t);
void QGraphicsScene_DisconnectSelectionChanged(void* ptr);
void QGraphicsScene_SelectionChanged(void* ptr);
char QGraphicsScene_SendEvent(void* ptr, void* item, void* event);
void QGraphicsScene_SetActivePanel(void* ptr, void* item);
void QGraphicsScene_SetActiveWindow(void* ptr, void* widget);
void QGraphicsScene_SetBackgroundBrush(void* ptr, void* brush);
void QGraphicsScene_SetBspTreeDepth(void* ptr, int depth);
void QGraphicsScene_SetFocus(void* ptr, long long focusReason);
void QGraphicsScene_SetFocusItem(void* ptr, void* item, long long focusReason);
void QGraphicsScene_SetFocusOnTouch(void* ptr, char enabled);
void QGraphicsScene_SetFont(void* ptr, void* font);
void QGraphicsScene_SetForegroundBrush(void* ptr, void* brush);
void QGraphicsScene_SetItemIndexMethod(void* ptr, long long method);
void QGraphicsScene_SetMinimumRenderSize(void* ptr, double minSize);
void QGraphicsScene_SetPalette(void* ptr, void* palette);
void QGraphicsScene_SetSceneRect(void* ptr, void* rect);
void QGraphicsScene_SetSceneRect2(void* ptr, double x, double y, double w, double h);
void QGraphicsScene_SetSelectionArea(void* ptr, void* path, void* deviceTransform);
void QGraphicsScene_SetSelectionArea2(void* ptr, void* path, long long mode, void* deviceTransform);
void QGraphicsScene_SetSelectionArea3(void* ptr, void* path, long long selectionOperation, long long mode, void* deviceTransform);
void QGraphicsScene_SetSortCacheEnabled(void* ptr, char enabled);
void QGraphicsScene_SetStickyFocus(void* ptr, char enabled);
void QGraphicsScene_SetStyle(void* ptr, void* style);
char QGraphicsScene_StickyFocus(void* ptr);
void* QGraphicsScene_Style(void* ptr);
void QGraphicsScene_Update(void* ptr, void* rect);
void QGraphicsScene_UpdateDefault(void* ptr, void* rect);
void QGraphicsScene_Update2(void* ptr, double x, double y, double w, double h);
struct QtWidgets_PackedList QGraphicsScene_Views(void* ptr);
void QGraphicsScene_WheelEvent(void* ptr, void* wheelEvent);
void QGraphicsScene_WheelEventDefault(void* ptr, void* wheelEvent);
double QGraphicsScene_Width(void* ptr);
void QGraphicsScene_DestroyQGraphicsScene(void* ptr);
void QGraphicsScene_DestroyQGraphicsSceneDefault(void* ptr);
void* QGraphicsScene___changed_region_atList(void* ptr, int i);
void QGraphicsScene___changed_region_setList(void* ptr, void* i);
void* QGraphicsScene___changed_region_newList(void* ptr);
void* QGraphicsScene___collidingItems_atList(void* ptr, int i);
void QGraphicsScene___collidingItems_setList(void* ptr, void* i);
void* QGraphicsScene___collidingItems_newList(void* ptr);
void* QGraphicsScene___createItemGroup_items_atList(void* ptr, int i);
void QGraphicsScene___createItemGroup_items_setList(void* ptr, void* i);
void* QGraphicsScene___createItemGroup_items_newList(void* ptr);
void* QGraphicsScene___items_atList(void* ptr, int i);
void QGraphicsScene___items_setList(void* ptr, void* i);
void* QGraphicsScene___items_newList(void* ptr);
void* QGraphicsScene___items_atList2(void* ptr, int i);
void QGraphicsScene___items_setList2(void* ptr, void* i);
void* QGraphicsScene___items_newList2(void* ptr);
void* QGraphicsScene___items_atList3(void* ptr, int i);
void QGraphicsScene___items_setList3(void* ptr, void* i);
void* QGraphicsScene___items_newList3(void* ptr);
void* QGraphicsScene___items_atList4(void* ptr, int i);
void QGraphicsScene___items_setList4(void* ptr, void* i);
void* QGraphicsScene___items_newList4(void* ptr);
void* QGraphicsScene___items_atList5(void* ptr, int i);
void QGraphicsScene___items_setList5(void* ptr, void* i);
void* QGraphicsScene___items_newList5(void* ptr);
void* QGraphicsScene___items_atList7(void* ptr, int i);
void QGraphicsScene___items_setList7(void* ptr, void* i);
void* QGraphicsScene___items_newList7(void* ptr);
void* QGraphicsScene___selectedItems_atList(void* ptr, int i);
void QGraphicsScene___selectedItems_setList(void* ptr, void* i);
void* QGraphicsScene___selectedItems_newList(void* ptr);
void* QGraphicsScene___views_atList(void* ptr, int i);
void QGraphicsScene___views_setList(void* ptr, void* i);
void* QGraphicsScene___views_newList(void* ptr);
void* QGraphicsScene___children_atList(void* ptr, int i);
void QGraphicsScene___children_setList(void* ptr, void* i);
void* QGraphicsScene___children_newList(void* ptr);
void* QGraphicsScene___dynamicPropertyNames_atList(void* ptr, int i);
void QGraphicsScene___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGraphicsScene___dynamicPropertyNames_newList(void* ptr);
void* QGraphicsScene___findChildren_atList(void* ptr, int i);
void QGraphicsScene___findChildren_setList(void* ptr, void* i);
void* QGraphicsScene___findChildren_newList(void* ptr);
void* QGraphicsScene___findChildren_atList3(void* ptr, int i);
void QGraphicsScene___findChildren_setList3(void* ptr, void* i);
void* QGraphicsScene___findChildren_newList3(void* ptr);
void QGraphicsScene_ChildEventDefault(void* ptr, void* event);
void QGraphicsScene_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsScene_CustomEventDefault(void* ptr, void* event);
void QGraphicsScene_DeleteLaterDefault(void* ptr);
void QGraphicsScene_DisconnectNotifyDefault(void* ptr, void* sign);
void* QGraphicsScene_MetaObjectDefault(void* ptr);
void QGraphicsScene_TimerEventDefault(void* ptr, void* event);
long long QGraphicsSceneContextMenuEvent_Modifiers(void* ptr);
void* QGraphicsSceneContextMenuEvent_Pos(void* ptr);
long long QGraphicsSceneContextMenuEvent_Reason(void* ptr);
void* QGraphicsSceneContextMenuEvent_ScenePos(void* ptr);
void* QGraphicsSceneContextMenuEvent_ScreenPos(void* ptr);
void QGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEvent(void* ptr);
void QGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEventDefault(void* ptr);
void QGraphicsSceneDragDropEvent_AcceptProposedAction(void* ptr);
long long QGraphicsSceneDragDropEvent_Buttons(void* ptr);
long long QGraphicsSceneDragDropEvent_DropAction(void* ptr);
void* QGraphicsSceneDragDropEvent_MimeData(void* ptr);
long long QGraphicsSceneDragDropEvent_Modifiers(void* ptr);
void* QGraphicsSceneDragDropEvent_Pos(void* ptr);
long long QGraphicsSceneDragDropEvent_PossibleActions(void* ptr);
long long QGraphicsSceneDragDropEvent_ProposedAction(void* ptr);
void* QGraphicsSceneDragDropEvent_ScenePos(void* ptr);
void* QGraphicsSceneDragDropEvent_ScreenPos(void* ptr);
void QGraphicsSceneDragDropEvent_SetDropAction(void* ptr, long long action);
void* QGraphicsSceneDragDropEvent_Source(void* ptr);
void QGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEvent(void* ptr);
void QGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEventDefault(void* ptr);
void* QGraphicsSceneEvent_Widget(void* ptr);
void QGraphicsSceneEvent_DestroyQGraphicsSceneEvent(void* ptr);
void QGraphicsSceneEvent_DestroyQGraphicsSceneEventDefault(void* ptr);
void* QGraphicsSceneHelpEvent_ScenePos(void* ptr);
void* QGraphicsSceneHelpEvent_ScreenPos(void* ptr);
void QGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEvent(void* ptr);
void QGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEventDefault(void* ptr);
void* QGraphicsSceneHoverEvent_LastPos(void* ptr);
void* QGraphicsSceneHoverEvent_LastScenePos(void* ptr);
void* QGraphicsSceneHoverEvent_LastScreenPos(void* ptr);
long long QGraphicsSceneHoverEvent_Modifiers(void* ptr);
void* QGraphicsSceneHoverEvent_Pos(void* ptr);
void* QGraphicsSceneHoverEvent_ScenePos(void* ptr);
void* QGraphicsSceneHoverEvent_ScreenPos(void* ptr);
void QGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEvent(void* ptr);
void QGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEventDefault(void* ptr);
long long QGraphicsSceneMouseEvent_Button(void* ptr);
void* QGraphicsSceneMouseEvent_ButtonDownPos(void* ptr, long long button);
void* QGraphicsSceneMouseEvent_ButtonDownScenePos(void* ptr, long long button);
void* QGraphicsSceneMouseEvent_ButtonDownScreenPos(void* ptr, long long button);
long long QGraphicsSceneMouseEvent_Buttons(void* ptr);
long long QGraphicsSceneMouseEvent_Flags(void* ptr);
void* QGraphicsSceneMouseEvent_LastPos(void* ptr);
void* QGraphicsSceneMouseEvent_LastScenePos(void* ptr);
void* QGraphicsSceneMouseEvent_LastScreenPos(void* ptr);
long long QGraphicsSceneMouseEvent_Modifiers(void* ptr);
void* QGraphicsSceneMouseEvent_Pos(void* ptr);
void* QGraphicsSceneMouseEvent_ScenePos(void* ptr);
void* QGraphicsSceneMouseEvent_ScreenPos(void* ptr);
long long QGraphicsSceneMouseEvent_Source(void* ptr);
void QGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEvent(void* ptr);
void QGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEventDefault(void* ptr);
void* QGraphicsSceneMoveEvent_NewQGraphicsSceneMoveEvent2();
void* QGraphicsSceneMoveEvent_NewPos(void* ptr);
void* QGraphicsSceneMoveEvent_OldPos(void* ptr);
void QGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEvent(void* ptr);
void QGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEventDefault(void* ptr);
void* QGraphicsSceneResizeEvent_NewQGraphicsSceneResizeEvent2();
void* QGraphicsSceneResizeEvent_NewSize(void* ptr);
void* QGraphicsSceneResizeEvent_OldSize(void* ptr);
void QGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEvent(void* ptr);
void QGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEventDefault(void* ptr);
long long QGraphicsSceneWheelEvent_Buttons(void* ptr);
int QGraphicsSceneWheelEvent_Delta(void* ptr);
long long QGraphicsSceneWheelEvent_Modifiers(void* ptr);
long long QGraphicsSceneWheelEvent_Orientation(void* ptr);
void* QGraphicsSceneWheelEvent_Pos(void* ptr);
void* QGraphicsSceneWheelEvent_ScenePos(void* ptr);
void* QGraphicsSceneWheelEvent_ScreenPos(void* ptr);
void QGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEvent(void* ptr);
void QGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEventDefault(void* ptr);
void* QGraphicsSimpleTextItem_NewQGraphicsSimpleTextItem(void* parent);
void* QGraphicsSimpleTextItem_NewQGraphicsSimpleTextItem2(struct QtWidgets_PackedString text, void* parent);
void* QGraphicsSimpleTextItem_BoundingRect(void* ptr);
void* QGraphicsSimpleTextItem_BoundingRectDefault(void* ptr);
void* QGraphicsSimpleTextItem_Font(void* ptr);
void QGraphicsSimpleTextItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsSimpleTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsSimpleTextItem_SetFont(void* ptr, void* font);
void QGraphicsSimpleTextItem_SetText(void* ptr, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QGraphicsSimpleTextItem_Text(void* ptr);
void QGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItem(void* ptr);
void QGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItemDefault(void* ptr);
void* QGraphicsTextItem_NewQGraphicsTextItem(void* parent);
void* QGraphicsTextItem_NewQGraphicsTextItem2(struct QtWidgets_PackedString text, void* parent);
void QGraphicsTextItem_AdjustSize(void* ptr);
void* QGraphicsTextItem_BoundingRect(void* ptr);
void* QGraphicsTextItem_BoundingRectDefault(void* ptr);
void* QGraphicsTextItem_DefaultTextColor(void* ptr);
void* QGraphicsTextItem_Document(void* ptr);
void* QGraphicsTextItem_Font(void* ptr);
void QGraphicsTextItem_ConnectLinkActivated(void* ptr, long long t);
void QGraphicsTextItem_DisconnectLinkActivated(void* ptr);
void QGraphicsTextItem_LinkActivated(void* ptr, struct QtWidgets_PackedString link);
void QGraphicsTextItem_ConnectLinkHovered(void* ptr, long long t);
void QGraphicsTextItem_DisconnectLinkHovered(void* ptr);
void QGraphicsTextItem_LinkHovered(void* ptr, struct QtWidgets_PackedString link);
char QGraphicsTextItem_OpenExternalLinks(void* ptr);
void QGraphicsTextItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsTextItem_SetDefaultTextColor(void* ptr, void* col);
void QGraphicsTextItem_SetDocument(void* ptr, void* document);
void QGraphicsTextItem_SetFont(void* ptr, void* font);
void QGraphicsTextItem_SetHtml(void* ptr, struct QtWidgets_PackedString text);
void QGraphicsTextItem_SetOpenExternalLinks(void* ptr, char open);
void QGraphicsTextItem_SetPlainText(void* ptr, struct QtWidgets_PackedString text);
void QGraphicsTextItem_SetTabChangesFocus(void* ptr, char b);
void QGraphicsTextItem_SetTextCursor(void* ptr, void* cursor);
void QGraphicsTextItem_SetTextInteractionFlags(void* ptr, long long flags);
void QGraphicsTextItem_SetTextWidth(void* ptr, double width);
char QGraphicsTextItem_TabChangesFocus(void* ptr);
void* QGraphicsTextItem_TextCursor(void* ptr);
long long QGraphicsTextItem_TextInteractionFlags(void* ptr);
double QGraphicsTextItem_TextWidth(void* ptr);
struct QtWidgets_PackedString QGraphicsTextItem_ToHtml(void* ptr);
struct QtWidgets_PackedString QGraphicsTextItem_ToPlainText(void* ptr);
void QGraphicsTextItem_DestroyQGraphicsTextItem(void* ptr);
void QGraphicsTextItem_DestroyQGraphicsTextItemDefault(void* ptr);
void* QGraphicsTransform_NewQGraphicsTransform(void* parent);
void QGraphicsTransform_ApplyTo(void* ptr, void* matrix);
void QGraphicsTransform_Update(void* ptr);
void QGraphicsTransform_UpdateDefault(void* ptr);
void QGraphicsTransform_DestroyQGraphicsTransform(void* ptr);
void QGraphicsTransform_DestroyQGraphicsTransformDefault(void* ptr);
void* QGraphicsTransform___children_atList(void* ptr, int i);
void QGraphicsTransform___children_setList(void* ptr, void* i);
void* QGraphicsTransform___children_newList(void* ptr);
void* QGraphicsTransform___dynamicPropertyNames_atList(void* ptr, int i);
void QGraphicsTransform___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGraphicsTransform___dynamicPropertyNames_newList(void* ptr);
void* QGraphicsTransform___findChildren_atList(void* ptr, int i);
void QGraphicsTransform___findChildren_setList(void* ptr, void* i);
void* QGraphicsTransform___findChildren_newList(void* ptr);
void* QGraphicsTransform___findChildren_atList3(void* ptr, int i);
void QGraphicsTransform___findChildren_setList3(void* ptr, void* i);
void* QGraphicsTransform___findChildren_newList3(void* ptr);
void QGraphicsTransform_ChildEventDefault(void* ptr, void* event);
void QGraphicsTransform_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsTransform_CustomEventDefault(void* ptr, void* event);
void QGraphicsTransform_DeleteLaterDefault(void* ptr);
void QGraphicsTransform_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsTransform_EventDefault(void* ptr, void* e);
char QGraphicsTransform_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsTransform_MetaObjectDefault(void* ptr);
void QGraphicsTransform_TimerEventDefault(void* ptr, void* event);
void* QGraphicsView_NewQGraphicsView(void* parent);
void* QGraphicsView_NewQGraphicsView2(void* scene, void* parent);
long long QGraphicsView_Alignment(void* ptr);
void* QGraphicsView_BackgroundBrush(void* ptr);
long long QGraphicsView_CacheMode(void* ptr);
void QGraphicsView_CenterOn(void* ptr, void* pos);
void QGraphicsView_CenterOn2(void* ptr, double x, double y);
void QGraphicsView_CenterOn3(void* ptr, void* item);
long long QGraphicsView_DragMode(void* ptr);
void QGraphicsView_DrawBackground(void* ptr, void* painter, void* rect);
void QGraphicsView_DrawBackgroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsView_DrawForeground(void* ptr, void* painter, void* rect);
void QGraphicsView_DrawForegroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsView_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin);
void QGraphicsView_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin);
void QGraphicsView_EnsureVisible3(void* ptr, void* item, int xmargin, int ymargin);
void QGraphicsView_FitInView(void* ptr, void* rect, long long aspectRatioMode);
void QGraphicsView_FitInView2(void* ptr, double x, double y, double w, double h, long long aspectRatioMode);
void QGraphicsView_FitInView3(void* ptr, void* item, long long aspectRatioMode);
void* QGraphicsView_ForegroundBrush(void* ptr);
void QGraphicsView_InvalidateScene(void* ptr, void* rect, long long layers);
void QGraphicsView_InvalidateSceneDefault(void* ptr, void* rect, long long layers);
char QGraphicsView_IsInteractive(void* ptr);
char QGraphicsView_IsTransformed(void* ptr);
void* QGraphicsView_ItemAt(void* ptr, void* pos);
void* QGraphicsView_ItemAt2(void* ptr, int x, int y);
struct QtWidgets_PackedList QGraphicsView_Items(void* ptr);
struct QtWidgets_PackedList QGraphicsView_Items2(void* ptr, void* pos);
struct QtWidgets_PackedList QGraphicsView_Items3(void* ptr, int x, int y);
struct QtWidgets_PackedList QGraphicsView_Items4(void* ptr, void* rect, long long mode);
struct QtWidgets_PackedList QGraphicsView_Items5(void* ptr, int x, int y, int w, int h, long long mode);
struct QtWidgets_PackedList QGraphicsView_Items6(void* ptr, void* polygon, long long mode);
struct QtWidgets_PackedList QGraphicsView_Items7(void* ptr, void* path, long long mode);
void* QGraphicsView_MapFromScene(void* ptr, void* point);
void* QGraphicsView_MapFromScene2(void* ptr, void* rect);
void* QGraphicsView_MapFromScene3(void* ptr, void* polygon);
void* QGraphicsView_MapFromScene4(void* ptr, void* path);
void* QGraphicsView_MapFromScene5(void* ptr, double x, double y);
void* QGraphicsView_MapFromScene6(void* ptr, double x, double y, double w, double h);
void* QGraphicsView_MapToScene(void* ptr, void* point);
void* QGraphicsView_MapToScene2(void* ptr, void* rect);
void* QGraphicsView_MapToScene3(void* ptr, void* polygon);
void* QGraphicsView_MapToScene4(void* ptr, void* path);
void* QGraphicsView_MapToScene5(void* ptr, int x, int y);
void* QGraphicsView_MapToScene6(void* ptr, int x, int y, int w, int h);
long long QGraphicsView_OptimizationFlags(void* ptr);
void QGraphicsView_Render(void* ptr, void* painter, void* target, void* source, long long aspectRatioMode);
long long QGraphicsView_RenderHints(void* ptr);
void QGraphicsView_ResetCachedContent(void* ptr);
void QGraphicsView_ResetTransform(void* ptr);
long long QGraphicsView_ResizeAnchor(void* ptr);
void QGraphicsView_Rotate(void* ptr, double angle);
void QGraphicsView_ConnectRubberBandChanged(void* ptr, long long t);
void QGraphicsView_DisconnectRubberBandChanged(void* ptr);
void QGraphicsView_RubberBandChanged(void* ptr, void* rubberBandRect, void* fromScenePoint, void* toScenePoint);
void* QGraphicsView_RubberBandRect(void* ptr);
long long QGraphicsView_RubberBandSelectionMode(void* ptr);
void QGraphicsView_Scale(void* ptr, double sx, double sy);
void* QGraphicsView_Scene(void* ptr);
void* QGraphicsView_SceneRect(void* ptr);
void QGraphicsView_SetAlignment(void* ptr, long long alignment);
void QGraphicsView_SetBackgroundBrush(void* ptr, void* brush);
void QGraphicsView_SetCacheMode(void* ptr, long long mode);
void QGraphicsView_SetDragMode(void* ptr, long long mode);
void QGraphicsView_SetForegroundBrush(void* ptr, void* brush);
void QGraphicsView_SetInteractive(void* ptr, char allowed);
void QGraphicsView_SetOptimizationFlag(void* ptr, long long flag, char enabled);
void QGraphicsView_SetOptimizationFlags(void* ptr, long long flags);
void QGraphicsView_SetRenderHint(void* ptr, long long hint, char enabled);
void QGraphicsView_SetRenderHints(void* ptr, long long hints);
void QGraphicsView_SetResizeAnchor(void* ptr, long long anchor);
void QGraphicsView_SetRubberBandSelectionMode(void* ptr, long long mode);
void QGraphicsView_SetScene(void* ptr, void* scene);
void QGraphicsView_SetSceneRect(void* ptr, void* rect);
void QGraphicsView_SetSceneRect2(void* ptr, double x, double y, double w, double h);
void QGraphicsView_SetTransform(void* ptr, void* matrix, char combine);
void QGraphicsView_SetTransformationAnchor(void* ptr, long long anchor);
void QGraphicsView_SetViewportUpdateMode(void* ptr, long long mode);
void QGraphicsView_SetupViewport(void* ptr, void* widget);
void QGraphicsView_SetupViewportDefault(void* ptr, void* widget);
void QGraphicsView_Shear(void* ptr, double sh, double sv);
void* QGraphicsView_Transform(void* ptr);
long long QGraphicsView_TransformationAnchor(void* ptr);
void QGraphicsView_Translate(void* ptr, double dx, double dy);
void QGraphicsView_UpdateScene(void* ptr, void* rects);
void QGraphicsView_UpdateSceneDefault(void* ptr, void* rects);
void QGraphicsView_UpdateSceneRect(void* ptr, void* rect);
void QGraphicsView_UpdateSceneRectDefault(void* ptr, void* rect);
void* QGraphicsView_ViewportTransform(void* ptr);
long long QGraphicsView_ViewportUpdateMode(void* ptr);
void QGraphicsView_DestroyQGraphicsView(void* ptr);
void QGraphicsView_DestroyQGraphicsViewDefault(void* ptr);
void* QGraphicsView___items_atList(void* ptr, int i);
void QGraphicsView___items_setList(void* ptr, void* i);
void* QGraphicsView___items_newList(void* ptr);
void* QGraphicsView___items_atList2(void* ptr, int i);
void QGraphicsView___items_setList2(void* ptr, void* i);
void* QGraphicsView___items_newList2(void* ptr);
void* QGraphicsView___items_atList3(void* ptr, int i);
void QGraphicsView___items_setList3(void* ptr, void* i);
void* QGraphicsView___items_newList3(void* ptr);
void* QGraphicsView___items_atList4(void* ptr, int i);
void QGraphicsView___items_setList4(void* ptr, void* i);
void* QGraphicsView___items_newList4(void* ptr);
void* QGraphicsView___items_atList5(void* ptr, int i);
void QGraphicsView___items_setList5(void* ptr, void* i);
void* QGraphicsView___items_newList5(void* ptr);
void* QGraphicsView___items_atList6(void* ptr, int i);
void QGraphicsView___items_setList6(void* ptr, void* i);
void* QGraphicsView___items_newList6(void* ptr);
void* QGraphicsView___items_atList7(void* ptr, int i);
void QGraphicsView___items_setList7(void* ptr, void* i);
void* QGraphicsView___items_newList7(void* ptr);
void* QGraphicsView___updateScene_rects_atList(void* ptr, int i);
void QGraphicsView___updateScene_rects_setList(void* ptr, void* i);
void* QGraphicsView___updateScene_rects_newList(void* ptr);
void* QGraphicsWidget_NewQGraphicsWidget(void* parent, long long wFlags);
struct QtWidgets_PackedList QGraphicsWidget_Actions(void* ptr);
void QGraphicsWidget_AddAction(void* ptr, void* action);
void QGraphicsWidget_AddActions(void* ptr, void* actions);
void QGraphicsWidget_AdjustSize(void* ptr);
char QGraphicsWidget_AutoFillBackground(void* ptr);
void* QGraphicsWidget_BoundingRect(void* ptr);
void* QGraphicsWidget_BoundingRectDefault(void* ptr);
void QGraphicsWidget_ChangeEvent(void* ptr, void* event);
void QGraphicsWidget_ChangeEventDefault(void* ptr, void* event);
char QGraphicsWidget_Close(void* ptr);
char QGraphicsWidget_CloseDefault(void* ptr);
void QGraphicsWidget_CloseEvent(void* ptr, void* event);
void QGraphicsWidget_CloseEventDefault(void* ptr, void* event);
char QGraphicsWidget_FocusNextPrevChild(void* ptr, char next);
char QGraphicsWidget_FocusNextPrevChildDefault(void* ptr, char next);
long long QGraphicsWidget_FocusPolicy(void* ptr);
void* QGraphicsWidget_FocusWidget(void* ptr);
void* QGraphicsWidget_Font(void* ptr);
void QGraphicsWidget_ConnectGeometryChanged(void* ptr, long long t);
void QGraphicsWidget_DisconnectGeometryChanged(void* ptr);
void QGraphicsWidget_GeometryChanged(void* ptr);
void QGraphicsWidget_GetWindowFrameMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_GrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWidget_GrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWidget_GrabMouseEvent(void* ptr, void* event);
void QGraphicsWidget_GrabMouseEventDefault(void* ptr, void* event);
int QGraphicsWidget_GrabShortcut(void* ptr, void* sequence, long long context);
void QGraphicsWidget_HideEvent(void* ptr, void* event);
void QGraphicsWidget_HideEventDefault(void* ptr, void* event);
void QGraphicsWidget_InitStyleOption(void* ptr, void* option);
void QGraphicsWidget_InitStyleOptionDefault(void* ptr, void* option);
void QGraphicsWidget_InsertAction(void* ptr, void* before, void* action);
void QGraphicsWidget_InsertActions(void* ptr, void* before, void* actions);
char QGraphicsWidget_IsActiveWindow(void* ptr);
void* QGraphicsWidget_Layout(void* ptr);
void QGraphicsWidget_ConnectLayoutChanged(void* ptr, long long t);
void QGraphicsWidget_DisconnectLayoutChanged(void* ptr);
void QGraphicsWidget_LayoutChanged(void* ptr);
long long QGraphicsWidget_LayoutDirection(void* ptr);
void QGraphicsWidget_MoveEvent(void* ptr, void* event);
void QGraphicsWidget_MoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsWidget_Palette(void* ptr);
void QGraphicsWidget_PolishEvent(void* ptr);
void QGraphicsWidget_PolishEventDefault(void* ptr);
void* QGraphicsWidget_Rect(void* ptr);
void QGraphicsWidget_ReleaseShortcut(void* ptr, int id);
void QGraphicsWidget_RemoveAction(void* ptr, void* action);
void QGraphicsWidget_Resize(void* ptr, void* size);
void QGraphicsWidget_Resize2(void* ptr, double w, double h);
void QGraphicsWidget_ResizeEvent(void* ptr, void* event);
void QGraphicsWidget_ResizeEventDefault(void* ptr, void* event);
void QGraphicsWidget_SetAttribute(void* ptr, long long attribute, char on);
void QGraphicsWidget_SetAutoFillBackground(void* ptr, char enabled);
void QGraphicsWidget_SetContentsMargins(void* ptr, void* margins);
void QGraphicsWidget_SetContentsMargins2(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_SetFocusPolicy(void* ptr, long long policy);
void QGraphicsWidget_SetFont(void* ptr, void* font);
void QGraphicsWidget_SetGeometry2(void* ptr, double x, double y, double w, double h);
void QGraphicsWidget_SetLayout(void* ptr, void* layout);
void QGraphicsWidget_SetLayoutDirection(void* ptr, long long direction);
void QGraphicsWidget_SetPalette(void* ptr, void* palette);
void QGraphicsWidget_SetShortcutAutoRepeat(void* ptr, int id, char enabled);
void QGraphicsWidget_SetShortcutEnabled(void* ptr, int id, char enabled);
void QGraphicsWidget_SetStyle(void* ptr, void* style);
void QGraphicsWidget_QGraphicsWidget_SetTabOrder(void* first, void* second);
void QGraphicsWidget_SetWindowFlags(void* ptr, long long wFlags);
void QGraphicsWidget_SetWindowFrameMargins(void* ptr, void* margins);
void QGraphicsWidget_SetWindowFrameMargins2(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_SetWindowTitle(void* ptr, struct QtWidgets_PackedString title);
void QGraphicsWidget_ShowEvent(void* ptr, void* event);
void QGraphicsWidget_ShowEventDefault(void* ptr, void* event);
void* QGraphicsWidget_Size(void* ptr);
void* QGraphicsWidget_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsWidget_SizeHintDefault(void* ptr, long long which, void* constraint);
void* QGraphicsWidget_Style(void* ptr);
char QGraphicsWidget_TestAttribute(void* ptr, long long attribute);
void QGraphicsWidget_UngrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWidget_UngrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWidget_UngrabMouseEvent(void* ptr, void* event);
void QGraphicsWidget_UngrabMouseEventDefault(void* ptr, void* event);
void QGraphicsWidget_UnsetLayoutDirection(void* ptr);
void QGraphicsWidget_UnsetWindowFrameMargins(void* ptr);
long long QGraphicsWidget_WindowFlags(void* ptr);
char QGraphicsWidget_WindowFrameEvent(void* ptr, void* event);
char QGraphicsWidget_WindowFrameEventDefault(void* ptr, void* event);
void* QGraphicsWidget_WindowFrameGeometry(void* ptr);
void* QGraphicsWidget_WindowFrameRect(void* ptr);
long long QGraphicsWidget_WindowFrameSectionAt(void* ptr, void* pos);
long long QGraphicsWidget_WindowFrameSectionAtDefault(void* ptr, void* pos);
struct QtWidgets_PackedString QGraphicsWidget_WindowTitle(void* ptr);
long long QGraphicsWidget_WindowType(void* ptr);
void QGraphicsWidget_DestroyQGraphicsWidget(void* ptr);
void QGraphicsWidget_DestroyQGraphicsWidgetDefault(void* ptr);
void* QGraphicsWidget_Geometry(void* ptr);
void* QGraphicsWidget_MaximumSize(void* ptr);
void QGraphicsWidget_SetMaximumSize(void* ptr, void* maximumSize);
void* QGraphicsWidget_MinimumSize(void* ptr);
void QGraphicsWidget_SetMinimumSize(void* ptr, void* minimumSize);
void* QGraphicsWidget_PreferredSize(void* ptr);
void QGraphicsWidget_SetPreferredSize(void* ptr, void* preferredSize);
void* QGraphicsWidget_SizePolicy(void* ptr);
void QGraphicsWidget_SetSizePolicy(void* ptr, void* sizePolicy);
void* QGraphicsWidget___actions_atList(void* ptr, int i);
void QGraphicsWidget___actions_setList(void* ptr, void* i);
void* QGraphicsWidget___actions_newList(void* ptr);
void* QGraphicsWidget___addActions_actions_atList(void* ptr, int i);
void QGraphicsWidget___addActions_actions_setList(void* ptr, void* i);
void* QGraphicsWidget___addActions_actions_newList(void* ptr);
void* QGraphicsWidget___insertActions_actions_atList(void* ptr, int i);
void QGraphicsWidget___insertActions_actions_setList(void* ptr, void* i);
void* QGraphicsWidget___insertActions_actions_newList(void* ptr);
void* QGridLayout_NewQGridLayout(void* parent);
void* QGridLayout_NewQGridLayout2();
void QGridLayout_AddItem(void* ptr, void* item, int row, int column, int rowSpan, int columnSpan, long long alignment);
void QGridLayout_AddItem2(void* ptr, void* item);
void QGridLayout_AddItem2Default(void* ptr, void* item);
void QGridLayout_AddLayout(void* ptr, void* layout, int row, int column, long long alignment);
void QGridLayout_AddLayout2(void* ptr, void* layout, int row, int column, int rowSpan, int columnSpan, long long alignment);
void QGridLayout_AddWidget2(void* ptr, void* widget, int row, int column, long long alignment);
void QGridLayout_AddWidget3(void* ptr, void* widget, int fromRow, int fromColumn, int rowSpan, int columnSpan, long long alignment);
void* QGridLayout_CellRect(void* ptr, int row, int column);
int QGridLayout_ColumnCount(void* ptr);
int QGridLayout_ColumnMinimumWidth(void* ptr, int column);
int QGridLayout_ColumnStretch(void* ptr, int column);
int QGridLayout_Count(void* ptr);
int QGridLayout_CountDefault(void* ptr);
void QGridLayout_GetItemPosition(void* ptr, int index, int row, int column, int rowSpan, int columnSpan);
int QGridLayout_HorizontalSpacing(void* ptr);
void* QGridLayout_ItemAt(void* ptr, int index);
void* QGridLayout_ItemAtDefault(void* ptr, int index);
void* QGridLayout_ItemAtPosition(void* ptr, int row, int column);
long long QGridLayout_OriginCorner(void* ptr);
int QGridLayout_RowCount(void* ptr);
int QGridLayout_RowMinimumHeight(void* ptr, int row);
int QGridLayout_RowStretch(void* ptr, int row);
void QGridLayout_SetColumnMinimumWidth(void* ptr, int column, int minSize);
void QGridLayout_SetColumnStretch(void* ptr, int column, int stretch);
void QGridLayout_SetHorizontalSpacing(void* ptr, int spacing);
void QGridLayout_SetOriginCorner(void* ptr, long long corner);
void QGridLayout_SetRowMinimumHeight(void* ptr, int row, int minSize);
void QGridLayout_SetRowStretch(void* ptr, int row, int stretch);
void QGridLayout_SetVerticalSpacing(void* ptr, int spacing);
void* QGridLayout_SizeHint(void* ptr);
void* QGridLayout_SizeHintDefault(void* ptr);
void* QGridLayout_TakeAt(void* ptr, int index);
void* QGridLayout_TakeAtDefault(void* ptr, int index);
int QGridLayout_VerticalSpacing(void* ptr);
void QGridLayout_DestroyQGridLayout(void* ptr);
void QGridLayout_DestroyQGridLayoutDefault(void* ptr);
void* QGroupBox_NewQGroupBox(void* parent);
void* QGroupBox_NewQGroupBox2(struct QtWidgets_PackedString title, void* parent);
long long QGroupBox_Alignment(void* ptr);
void QGroupBox_ConnectClicked(void* ptr, long long t);
void QGroupBox_DisconnectClicked(void* ptr);
void QGroupBox_Clicked(void* ptr, char checked);
void QGroupBox_InitStyleOption(void* ptr, void* option);
char QGroupBox_IsCheckable(void* ptr);
char QGroupBox_IsChecked(void* ptr);
char QGroupBox_IsFlat(void* ptr);
void QGroupBox_SetAlignment(void* ptr, int alignment);
void QGroupBox_SetCheckable(void* ptr, char checkable);
void QGroupBox_SetChecked(void* ptr, char checked);
void QGroupBox_SetCheckedDefault(void* ptr, char checked);
void QGroupBox_SetFlat(void* ptr, char flat);
void QGroupBox_SetTitle(void* ptr, struct QtWidgets_PackedString title);
struct QtWidgets_PackedString QGroupBox_Title(void* ptr);
void QGroupBox_ConnectToggled(void* ptr, long long t);
void QGroupBox_DisconnectToggled(void* ptr);
void QGroupBox_Toggled(void* ptr, char on);
void QGroupBox_DestroyQGroupBox(void* ptr);
void QGroupBox_DestroyQGroupBoxDefault(void* ptr);
void* QHBoxLayout_NewQHBoxLayout();
void* QHBoxLayout_NewQHBoxLayout2(void* parent);
void QHBoxLayout_DestroyQHBoxLayout(void* ptr);
void QHBoxLayout_DestroyQHBoxLayoutDefault(void* ptr);
void* QHeaderView_NewQHeaderView(long long orientation, void* parent);
char QHeaderView_CascadingSectionResizes(void* ptr);
int QHeaderView_Count(void* ptr);
void QHeaderView_CurrentChanged(void* ptr, void* current, void* old);
void QHeaderView_CurrentChangedDefault(void* ptr, void* current, void* old);
long long QHeaderView_DefaultAlignment(void* ptr);
int QHeaderView_DefaultSectionSize(void* ptr);
void QHeaderView_ConnectGeometriesChanged(void* ptr, long long t);
void QHeaderView_DisconnectGeometriesChanged(void* ptr);
void QHeaderView_GeometriesChanged(void* ptr);
void QHeaderView_HeaderDataChanged(void* ptr, long long orientation, int logicalFirst, int logicalLast);
void QHeaderView_HeaderDataChangedDefault(void* ptr, long long orientation, int logicalFirst, int logicalLast);
int QHeaderView_HiddenSectionCount(void* ptr);
void QHeaderView_HideSection(void* ptr, int logicalIndex);
char QHeaderView_HighlightSections(void* ptr);
int QHeaderView_HorizontalOffset(void* ptr);
int QHeaderView_HorizontalOffsetDefault(void* ptr);
void QHeaderView_InitStyleOption(void* ptr, void* option);
char QHeaderView_IsFirstSectionMovable(void* ptr);
char QHeaderView_IsSectionHidden(void* ptr, int logicalIndex);
char QHeaderView_IsSortIndicatorShown(void* ptr);
int QHeaderView_Length(void* ptr);
int QHeaderView_LogicalIndex(void* ptr, int visualIndex);
int QHeaderView_LogicalIndexAt(void* ptr, int position);
int QHeaderView_LogicalIndexAt2(void* ptr, int x, int y);
int QHeaderView_LogicalIndexAt3(void* ptr, void* pos);
int QHeaderView_MaximumSectionSize(void* ptr);
int QHeaderView_MinimumSectionSize(void* ptr);
void QHeaderView_MoveSection(void* ptr, int from, int to);
int QHeaderView_Offset(void* ptr);
long long QHeaderView_Orientation(void* ptr);
void QHeaderView_PaintSection(void* ptr, void* painter, void* rect, int logicalIndex);
void QHeaderView_PaintSectionDefault(void* ptr, void* painter, void* rect, int logicalIndex);
void QHeaderView_Reset(void* ptr);
void QHeaderView_ResetDefault(void* ptr);
void QHeaderView_ResetDefaultSectionSize(void* ptr);
int QHeaderView_ResizeContentsPrecision(void* ptr);
void QHeaderView_ResizeSection(void* ptr, int logicalIndex, int size);
void QHeaderView_ResizeSections(void* ptr, long long mode);
void QHeaderView_ResizeSections2(void* ptr);
void QHeaderView_ResizeSections2Default(void* ptr);
char QHeaderView_RestoreState(void* ptr, void* state);
void* QHeaderView_SaveState(void* ptr);
void QHeaderView_ConnectSectionClicked(void* ptr, long long t);
void QHeaderView_DisconnectSectionClicked(void* ptr);
void QHeaderView_SectionClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionCountChanged(void* ptr, long long t);
void QHeaderView_DisconnectSectionCountChanged(void* ptr);
void QHeaderView_SectionCountChanged(void* ptr, int oldCount, int newCount);
void QHeaderView_ConnectSectionDoubleClicked(void* ptr, long long t);
void QHeaderView_DisconnectSectionDoubleClicked(void* ptr);
void QHeaderView_SectionDoubleClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionEntered(void* ptr, long long t);
void QHeaderView_DisconnectSectionEntered(void* ptr);
void QHeaderView_SectionEntered(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionHandleDoubleClicked(void* ptr, long long t);
void QHeaderView_DisconnectSectionHandleDoubleClicked(void* ptr);
void QHeaderView_SectionHandleDoubleClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionMoved(void* ptr, long long t);
void QHeaderView_DisconnectSectionMoved(void* ptr);
void QHeaderView_SectionMoved(void* ptr, int logicalIndex, int oldVisualIndex, int newVisualIndex);
int QHeaderView_SectionPosition(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionPressed(void* ptr, long long t);
void QHeaderView_DisconnectSectionPressed(void* ptr);
void QHeaderView_SectionPressed(void* ptr, int logicalIndex);
long long QHeaderView_SectionResizeMode(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionResized(void* ptr, long long t);
void QHeaderView_DisconnectSectionResized(void* ptr);
void QHeaderView_SectionResized(void* ptr, int logicalIndex, int oldSize, int newSize);
int QHeaderView_SectionSize(void* ptr, int logicalIndex);
void* QHeaderView_SectionSizeFromContents(void* ptr, int logicalIndex);
void* QHeaderView_SectionSizeFromContentsDefault(void* ptr, int logicalIndex);
int QHeaderView_SectionSizeHint(void* ptr, int logicalIndex);
int QHeaderView_SectionViewportPosition(void* ptr, int logicalIndex);
void QHeaderView_SectionsAboutToBeRemoved(void* ptr, void* parent, int logicalFirst, int logicalLast);
void QHeaderView_SectionsAboutToBeRemovedDefault(void* ptr, void* parent, int logicalFirst, int logicalLast);
char QHeaderView_SectionsClickable(void* ptr);
char QHeaderView_SectionsHidden(void* ptr);
void QHeaderView_SectionsInserted(void* ptr, void* parent, int logicalFirst, int logicalLast);
void QHeaderView_SectionsInsertedDefault(void* ptr, void* parent, int logicalFirst, int logicalLast);
char QHeaderView_SectionsMovable(void* ptr);
char QHeaderView_SectionsMoved(void* ptr);
void QHeaderView_SetCascadingSectionResizes(void* ptr, char enable);
void QHeaderView_SetDefaultAlignment(void* ptr, long long alignment);
void QHeaderView_SetDefaultSectionSize(void* ptr, int size);
void QHeaderView_SetFirstSectionMovable(void* ptr, char movable);
void QHeaderView_SetHighlightSections(void* ptr, char highlight);
void QHeaderView_SetMaximumSectionSize(void* ptr, int size);
void QHeaderView_SetMinimumSectionSize(void* ptr, int size);
void QHeaderView_SetOffset(void* ptr, int offset);
void QHeaderView_SetOffsetDefault(void* ptr, int offset);
void QHeaderView_SetOffsetToLastSection(void* ptr);
void QHeaderView_SetOffsetToLastSectionDefault(void* ptr);
void QHeaderView_SetOffsetToSectionPosition(void* ptr, int visualSectionNumber);
void QHeaderView_SetOffsetToSectionPositionDefault(void* ptr, int visualSectionNumber);
void QHeaderView_SetResizeContentsPrecision(void* ptr, int precision);
void QHeaderView_SetSectionHidden(void* ptr, int logicalIndex, char hide);
void QHeaderView_SetSectionResizeMode(void* ptr, long long mode);
void QHeaderView_SetSectionResizeMode2(void* ptr, int logicalIndex, long long mode);
void QHeaderView_SetSectionsClickable(void* ptr, char clickable);
void QHeaderView_SetSectionsMovable(void* ptr, char movable);
void QHeaderView_SetSelection(void* ptr, void* rect, long long flags);
void QHeaderView_SetSelectionDefault(void* ptr, void* rect, long long flags);
void QHeaderView_SetSortIndicator(void* ptr, int logicalIndex, long long order);
void QHeaderView_SetSortIndicatorShown(void* ptr, char show);
void QHeaderView_SetStretchLastSection(void* ptr, char stretch);
void QHeaderView_SetVisible(void* ptr, char v);
void QHeaderView_SetVisibleDefault(void* ptr, char v);
void QHeaderView_ShowSection(void* ptr, int logicalIndex);
void QHeaderView_ConnectSortIndicatorChanged(void* ptr, long long t);
void QHeaderView_DisconnectSortIndicatorChanged(void* ptr);
void QHeaderView_SortIndicatorChanged(void* ptr, int logicalIndex, long long order);
long long QHeaderView_SortIndicatorOrder(void* ptr);
int QHeaderView_SortIndicatorSection(void* ptr);
char QHeaderView_StretchLastSection(void* ptr);
int QHeaderView_StretchSectionCount(void* ptr);
void QHeaderView_SwapSections(void* ptr, int first, int second);
int QHeaderView_VerticalOffset(void* ptr);
int QHeaderView_VerticalOffsetDefault(void* ptr);
int QHeaderView_VisualIndex(void* ptr, int logicalIndex);
int QHeaderView_VisualIndexAt(void* ptr, int position);
void QHeaderView_DestroyQHeaderView(void* ptr);
void QHeaderView_DestroyQHeaderViewDefault(void* ptr);
void* QHeaderView_IndexAt(void* ptr, void* point);
void* QHeaderView_IndexAtDefault(void* ptr, void* point);
char QHeaderView_IsIndexHidden(void* ptr, void* index);
char QHeaderView_IsIndexHiddenDefault(void* ptr, void* index);
void* QHeaderView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QHeaderView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QHeaderView_ScrollTo(void* ptr, void* index, long long hint);
void QHeaderView_ScrollToDefault(void* ptr, void* index, long long hint);
void* QHeaderView_VisualRect(void* ptr, void* index);
void* QHeaderView_VisualRectDefault(void* ptr, void* index);
void* QHeaderView_VisualRegionForSelection(void* ptr, void* selection);
void* QHeaderView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void* QInputDialog_NewQInputDialog(void* parent, long long flags);
struct QtWidgets_PackedString QInputDialog_CancelButtonText(void* ptr);
struct QtWidgets_PackedString QInputDialog_ComboBoxItems(void* ptr);
void QInputDialog_Done(void* ptr, int result);
void QInputDialog_DoneDefault(void* ptr, int result);
int QInputDialog_DoubleDecimals(void* ptr);
double QInputDialog_DoubleMaximum(void* ptr);
double QInputDialog_DoubleMinimum(void* ptr);
double QInputDialog_DoubleStep(void* ptr);
double QInputDialog_DoubleValue(void* ptr);
void QInputDialog_ConnectDoubleValueChanged(void* ptr, long long t);
void QInputDialog_DisconnectDoubleValueChanged(void* ptr);
void QInputDialog_DoubleValueChanged(void* ptr, double value);
void QInputDialog_ConnectDoubleValueSelected(void* ptr, long long t);
void QInputDialog_DisconnectDoubleValueSelected(void* ptr);
void QInputDialog_DoubleValueSelected(void* ptr, double value);
double QInputDialog_QInputDialog_GetDouble(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString label, double value, double min, double max, int decimals, char* ok, long long flags, double step);
int QInputDialog_QInputDialog_GetInt(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString label, int value, int min, int max, int step, char* ok, long long flags);
struct QtWidgets_PackedString QInputDialog_QInputDialog_GetItem(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString label, struct QtWidgets_PackedString items, int current, char editable, char* ok, long long flags, long long inputMethodHints);
struct QtWidgets_PackedString QInputDialog_QInputDialog_GetMultiLineText(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString label, struct QtWidgets_PackedString text, char* ok, long long flags, long long inputMethodHints);
struct QtWidgets_PackedString QInputDialog_QInputDialog_GetText(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString label, long long mode, struct QtWidgets_PackedString text, char* ok, long long flags, long long inputMethodHints);
long long QInputDialog_InputMode(void* ptr);
int QInputDialog_IntMaximum(void* ptr);
int QInputDialog_IntMinimum(void* ptr);
int QInputDialog_IntStep(void* ptr);
int QInputDialog_IntValue(void* ptr);
void QInputDialog_ConnectIntValueChanged(void* ptr, long long t);
void QInputDialog_DisconnectIntValueChanged(void* ptr);
void QInputDialog_IntValueChanged(void* ptr, int value);
void QInputDialog_ConnectIntValueSelected(void* ptr, long long t);
void QInputDialog_DisconnectIntValueSelected(void* ptr);
void QInputDialog_IntValueSelected(void* ptr, int value);
char QInputDialog_IsComboBoxEditable(void* ptr);
struct QtWidgets_PackedString QInputDialog_LabelText(void* ptr);
struct QtWidgets_PackedString QInputDialog_OkButtonText(void* ptr);
void QInputDialog_Open(void* ptr, void* receiver, char* member);
long long QInputDialog_Options(void* ptr);
void QInputDialog_SetCancelButtonText(void* ptr, struct QtWidgets_PackedString text);
void QInputDialog_SetComboBoxEditable(void* ptr, char editable);
void QInputDialog_SetComboBoxItems(void* ptr, struct QtWidgets_PackedString items);
void QInputDialog_SetDoubleDecimals(void* ptr, int decimals);
void QInputDialog_SetDoubleMaximum(void* ptr, double max);
void QInputDialog_SetDoubleMinimum(void* ptr, double min);
void QInputDialog_SetDoubleRange(void* ptr, double min, double max);
void QInputDialog_SetDoubleStep(void* ptr, double step);
void QInputDialog_SetDoubleValue(void* ptr, double value);
void QInputDialog_SetInputMode(void* ptr, long long mode);
void QInputDialog_SetIntMaximum(void* ptr, int max);
void QInputDialog_SetIntMinimum(void* ptr, int min);
void QInputDialog_SetIntRange(void* ptr, int min, int max);
void QInputDialog_SetIntStep(void* ptr, int step);
void QInputDialog_SetIntValue(void* ptr, int value);
void QInputDialog_SetLabelText(void* ptr, struct QtWidgets_PackedString text);
void QInputDialog_SetOkButtonText(void* ptr, struct QtWidgets_PackedString text);
void QInputDialog_SetOption(void* ptr, long long option, char on);
void QInputDialog_SetOptions(void* ptr, long long options);
void QInputDialog_SetTextEchoMode(void* ptr, long long mode);
void QInputDialog_SetTextValue(void* ptr, struct QtWidgets_PackedString text);
char QInputDialog_TestOption(void* ptr, long long option);
long long QInputDialog_TextEchoMode(void* ptr);
struct QtWidgets_PackedString QInputDialog_TextValue(void* ptr);
void QInputDialog_ConnectTextValueChanged(void* ptr, long long t);
void QInputDialog_DisconnectTextValueChanged(void* ptr);
void QInputDialog_TextValueChanged(void* ptr, struct QtWidgets_PackedString text);
void QInputDialog_ConnectTextValueSelected(void* ptr, long long t);
void QInputDialog_DisconnectTextValueSelected(void* ptr);
void QInputDialog_TextValueSelected(void* ptr, struct QtWidgets_PackedString text);
void QInputDialog_DestroyQInputDialog(void* ptr);
void QInputDialog_DestroyQInputDialogDefault(void* ptr);
void* QItemDelegate_NewQItemDelegate(void* parent);
void QItemDelegate_DrawBackground(void* ptr, void* painter, void* option, void* index);
void QItemDelegate_DrawCheck(void* ptr, void* painter, void* option, void* rect, long long state);
void QItemDelegate_DrawCheckDefault(void* ptr, void* painter, void* option, void* rect, long long state);
void QItemDelegate_DrawDecoration(void* ptr, void* painter, void* option, void* rect, void* pixmap);
void QItemDelegate_DrawDecorationDefault(void* ptr, void* painter, void* option, void* rect, void* pixmap);
void QItemDelegate_DrawDisplay(void* ptr, void* painter, void* option, void* rect, struct QtWidgets_PackedString text);
void QItemDelegate_DrawDisplayDefault(void* ptr, void* painter, void* option, void* rect, struct QtWidgets_PackedString text);
void QItemDelegate_DrawFocus(void* ptr, void* painter, void* option, void* rect);
void QItemDelegate_DrawFocusDefault(void* ptr, void* painter, void* option, void* rect);
char QItemDelegate_HasClipping(void* ptr);
void* QItemDelegate_ItemEditorFactory(void* ptr);
void QItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QItemDelegate_PaintDefault(void* ptr, void* painter, void* option, void* index);
void QItemDelegate_SetClipping(void* ptr, char clip);
void QItemDelegate_SetItemEditorFactory(void* ptr, void* factory);
void* QItemDelegate_SizeHint(void* ptr, void* option, void* index);
void* QItemDelegate_SizeHintDefault(void* ptr, void* option, void* index);
void QItemDelegate_DestroyQItemDelegate(void* ptr);
void QItemDelegate_DestroyQItemDelegateDefault(void* ptr);
void* QItemEditorCreatorBase_CreateWidget(void* ptr, void* parent);
void* QItemEditorCreatorBase_ValuePropertyName(void* ptr);
void QItemEditorCreatorBase_DestroyQItemEditorCreatorBase(void* ptr);
void QItemEditorCreatorBase_DestroyQItemEditorCreatorBaseDefault(void* ptr);
void* QItemEditorFactory_NewQItemEditorFactory();
void* QItemEditorFactory_CreateEditor(void* ptr, int userType, void* parent);
void* QItemEditorFactory_CreateEditorDefault(void* ptr, int userType, void* parent);
void* QItemEditorFactory_QItemEditorFactory_DefaultFactory();
void QItemEditorFactory_RegisterEditor(void* ptr, int userType, void* creator);
void QItemEditorFactory_QItemEditorFactory_SetDefaultFactory(void* factory);
void* QItemEditorFactory_ValuePropertyName(void* ptr, int userType);
void* QItemEditorFactory_ValuePropertyNameDefault(void* ptr, int userType);
void QItemEditorFactory_DestroyQItemEditorFactory(void* ptr);
void QItemEditorFactory_DestroyQItemEditorFactoryDefault(void* ptr);
void* QItemEditorFactory___creatorMap_atList(void* ptr, int v, int i);
void QItemEditorFactory___creatorMap_setList(void* ptr, int key, void* i);
void* QItemEditorFactory___creatorMap_newList(void* ptr);
struct QtWidgets_PackedList QItemEditorFactory___creatorMap_keyList(void* ptr);
void* QItemEditorFactory___setCreatorMap__atList(void* ptr, int v, int i);
void QItemEditorFactory___setCreatorMap__setList(void* ptr, int key, void* i);
void* QItemEditorFactory___setCreatorMap__newList(void* ptr);
struct QtWidgets_PackedList QItemEditorFactory___setCreatorMap__keyList(void* ptr);
int QItemEditorFactory_____creatorMap_keyList_atList(void* ptr, int i);
void QItemEditorFactory_____creatorMap_keyList_setList(void* ptr, int i);
void* QItemEditorFactory_____creatorMap_keyList_newList(void* ptr);
int QItemEditorFactory_____setCreatorMap__keyList_atList(void* ptr, int i);
void QItemEditorFactory_____setCreatorMap__keyList_setList(void* ptr, int i);
void* QItemEditorFactory_____setCreatorMap__keyList_newList(void* ptr);
void* QKeyEventTransition_NewQKeyEventTransition(void* sourceState);
void* QKeyEventTransition_NewQKeyEventTransition2(void* object, long long ty, int key, void* sourceState);
char QKeyEventTransition_EventTestDefault(void* ptr, void* event);
int QKeyEventTransition_Key(void* ptr);
long long QKeyEventTransition_ModifierMask(void* ptr);
void QKeyEventTransition_OnTransitionDefault(void* ptr, void* event);
void QKeyEventTransition_SetKey(void* ptr, int key);
void QKeyEventTransition_SetModifierMask(void* ptr, long long modifierMask);
void QKeyEventTransition_DestroyQKeyEventTransition(void* ptr);
void QKeyEventTransition_DestroyQKeyEventTransitionDefault(void* ptr);
void* QKeyEventTransition___animations_atList(void* ptr, int i);
void QKeyEventTransition___animations_setList(void* ptr, void* i);
void* QKeyEventTransition___animations_newList(void* ptr);
void* QKeyEventTransition___setTargetStates_targets_atList(void* ptr, int i);
void QKeyEventTransition___setTargetStates_targets_setList(void* ptr, void* i);
void* QKeyEventTransition___setTargetStates_targets_newList(void* ptr);
void* QKeyEventTransition___targetStates_atList(void* ptr, int i);
void QKeyEventTransition___targetStates_setList(void* ptr, void* i);
void* QKeyEventTransition___targetStates_newList(void* ptr);
void* QKeyEventTransition___children_atList(void* ptr, int i);
void QKeyEventTransition___children_setList(void* ptr, void* i);
void* QKeyEventTransition___children_newList(void* ptr);
void* QKeyEventTransition___dynamicPropertyNames_atList(void* ptr, int i);
void QKeyEventTransition___dynamicPropertyNames_setList(void* ptr, void* i);
void* QKeyEventTransition___dynamicPropertyNames_newList(void* ptr);
void* QKeyEventTransition___findChildren_atList(void* ptr, int i);
void QKeyEventTransition___findChildren_setList(void* ptr, void* i);
void* QKeyEventTransition___findChildren_newList(void* ptr);
void* QKeyEventTransition___findChildren_atList3(void* ptr, int i);
void QKeyEventTransition___findChildren_setList3(void* ptr, void* i);
void* QKeyEventTransition___findChildren_newList3(void* ptr);
char QKeyEventTransition_EventDefault(void* ptr, void* e);
void QKeyEventTransition_ChildEventDefault(void* ptr, void* event);
void QKeyEventTransition_ConnectNotifyDefault(void* ptr, void* sign);
void QKeyEventTransition_CustomEventDefault(void* ptr, void* event);
void QKeyEventTransition_DeleteLaterDefault(void* ptr);
void QKeyEventTransition_DisconnectNotifyDefault(void* ptr, void* sign);
char QKeyEventTransition_EventFilterDefault(void* ptr, void* watched, void* event);
void* QKeyEventTransition_MetaObjectDefault(void* ptr);
void QKeyEventTransition_TimerEventDefault(void* ptr, void* event);
void* QKeySequenceEdit_NewQKeySequenceEdit(void* parent);
void* QKeySequenceEdit_NewQKeySequenceEdit2(void* keySequence, void* parent);
void QKeySequenceEdit_Clear(void* ptr);
void QKeySequenceEdit_ClearDefault(void* ptr);
void QKeySequenceEdit_ConnectEditingFinished(void* ptr, long long t);
void QKeySequenceEdit_DisconnectEditingFinished(void* ptr);
void QKeySequenceEdit_EditingFinished(void* ptr);
void* QKeySequenceEdit_KeySequence(void* ptr);
void QKeySequenceEdit_ConnectKeySequenceChanged(void* ptr, long long t);
void QKeySequenceEdit_DisconnectKeySequenceChanged(void* ptr);
void QKeySequenceEdit_KeySequenceChanged(void* ptr, void* keySequence);
void QKeySequenceEdit_SetKeySequence(void* ptr, void* keySequence);
void QKeySequenceEdit_SetKeySequenceDefault(void* ptr, void* keySequence);
void QKeySequenceEdit_DestroyQKeySequenceEdit(void* ptr);
void QKeySequenceEdit_DestroyQKeySequenceEditDefault(void* ptr);
void* QLCDNumber_NewQLCDNumber(void* parent);
void* QLCDNumber_NewQLCDNumber2(unsigned int numDigits, void* parent);
char QLCDNumber_CheckOverflow(void* ptr, double num);
char QLCDNumber_CheckOverflow2(void* ptr, int num);
int QLCDNumber_DigitCount(void* ptr);
void QLCDNumber_Display(void* ptr, struct QtWidgets_PackedString s);
void QLCDNumber_DisplayDefault(void* ptr, struct QtWidgets_PackedString s);
void QLCDNumber_Display2(void* ptr, int num);
void QLCDNumber_Display2Default(void* ptr, int num);
void QLCDNumber_Display3(void* ptr, double num);
void QLCDNumber_Display3Default(void* ptr, double num);
int QLCDNumber_IntValue(void* ptr);
long long QLCDNumber_Mode(void* ptr);
void QLCDNumber_ConnectOverflow(void* ptr, long long t);
void QLCDNumber_DisconnectOverflow(void* ptr);
void QLCDNumber_Overflow(void* ptr);
long long QLCDNumber_SegmentStyle(void* ptr);
void QLCDNumber_SetBinMode(void* ptr);
void QLCDNumber_SetBinModeDefault(void* ptr);
void QLCDNumber_SetDecMode(void* ptr);
void QLCDNumber_SetDecModeDefault(void* ptr);
void QLCDNumber_SetDigitCount(void* ptr, int numDigits);
void QLCDNumber_SetHexMode(void* ptr);
void QLCDNumber_SetHexModeDefault(void* ptr);
void QLCDNumber_SetMode(void* ptr, long long vql);
void QLCDNumber_SetOctMode(void* ptr);
void QLCDNumber_SetOctModeDefault(void* ptr);
void QLCDNumber_SetSegmentStyle(void* ptr, long long vql);
void QLCDNumber_SetSmallDecimalPoint(void* ptr, char vbo);
void QLCDNumber_SetSmallDecimalPointDefault(void* ptr, char vbo);
char QLCDNumber_SmallDecimalPoint(void* ptr);
double QLCDNumber_Value(void* ptr);
void QLCDNumber_DestroyQLCDNumber(void* ptr);
void QLCDNumber_DestroyQLCDNumberDefault(void* ptr);
void* QLabel_NewQLabel(void* parent, long long ff);
void* QLabel_NewQLabel2(struct QtWidgets_PackedString text, void* parent, long long ff);
long long QLabel_Alignment(void* ptr);
void* QLabel_Buddy(void* ptr);
void QLabel_Clear(void* ptr);
void QLabel_ClearDefault(void* ptr);
char QLabel_HasScaledContents(void* ptr);
char QLabel_HasSelectedText(void* ptr);
int QLabel_Indent(void* ptr);
void QLabel_ConnectLinkActivated(void* ptr, long long t);
void QLabel_DisconnectLinkActivated(void* ptr);
void QLabel_LinkActivated(void* ptr, struct QtWidgets_PackedString link);
void QLabel_ConnectLinkHovered(void* ptr, long long t);
void QLabel_DisconnectLinkHovered(void* ptr);
void QLabel_LinkHovered(void* ptr, struct QtWidgets_PackedString link);
int QLabel_Margin(void* ptr);
void* QLabel_Movie(void* ptr);
char QLabel_OpenExternalLinks(void* ptr);
void* QLabel_Picture2(void* ptr, long long vqt);
void* QLabel_Pixmap2(void* ptr, long long vqt);
struct QtWidgets_PackedString QLabel_SelectedText(void* ptr);
int QLabel_SelectionStart(void* ptr);
void QLabel_SetAlignment(void* ptr, long long vqt);
void QLabel_SetBuddy(void* ptr, void* buddy);
void QLabel_SetIndent(void* ptr, int vin);
void QLabel_SetMargin(void* ptr, int vin);
void QLabel_SetMovie(void* ptr, void* movie);
void QLabel_SetMovieDefault(void* ptr, void* movie);
void QLabel_SetNum(void* ptr, int num);
void QLabel_SetNumDefault(void* ptr, int num);
void QLabel_SetNum2(void* ptr, double num);
void QLabel_SetNum2Default(void* ptr, double num);
void QLabel_SetOpenExternalLinks(void* ptr, char open);
void QLabel_SetPicture(void* ptr, void* picture);
void QLabel_SetPictureDefault(void* ptr, void* picture);
void QLabel_SetPixmap(void* ptr, void* vqp);
void QLabel_SetPixmapDefault(void* ptr, void* vqp);
void QLabel_SetScaledContents(void* ptr, char vbo);
void QLabel_SetSelection(void* ptr, int start, int length);
void QLabel_SetText(void* ptr, struct QtWidgets_PackedString vqs);
void QLabel_SetTextDefault(void* ptr, struct QtWidgets_PackedString vqs);
void QLabel_SetTextFormat(void* ptr, long long vqt);
void QLabel_SetTextInteractionFlags(void* ptr, long long flags);
void QLabel_SetWordWrap(void* ptr, char on);
struct QtWidgets_PackedString QLabel_Text(void* ptr);
long long QLabel_TextFormat(void* ptr);
long long QLabel_TextInteractionFlags(void* ptr);
char QLabel_WordWrap(void* ptr);
void QLabel_DestroyQLabel(void* ptr);
void QLabel_DestroyQLabelDefault(void* ptr);
void* QLayout_NewQLayout(void* parent);
void* QLayout_NewQLayout2();
char QLayout_Activate(void* ptr);
void QLayout_AddChildLayout(void* ptr, void* l);
void QLayout_AddChildWidget(void* ptr, void* w);
void QLayout_AddItem(void* ptr, void* item);
void QLayout_AddWidget(void* ptr, void* w);
void* QLayout_AlignmentRect(void* ptr, void* r);
void QLayout_ChildEvent(void* ptr, void* e);
void QLayout_ChildEventDefault(void* ptr, void* e);
void* QLayout_QLayout_ClosestAcceptableSize(void* widget, void* size);
void* QLayout_ContentsMargins(void* ptr);
void* QLayout_ContentsRect(void* ptr);
int QLayout_Count(void* ptr);
long long QLayout_ExpandingDirections(void* ptr);
long long QLayout_ExpandingDirectionsDefault(void* ptr);
void* QLayout_Geometry(void* ptr);
void* QLayout_GeometryDefault(void* ptr);
void QLayout_GetContentsMargins(void* ptr, int left, int top, int right, int bottom);
int QLayout_IndexOf(void* ptr, void* widget);
int QLayout_IndexOfDefault(void* ptr, void* widget);
int QLayout_IndexOf2(void* ptr, void* layoutItem);
char QLayout_IsEmpty(void* ptr);
char QLayout_IsEmptyDefault(void* ptr);
char QLayout_IsEnabled(void* ptr);
void* QLayout_ItemAt(void* ptr, int index);
void* QLayout_MaximumSize(void* ptr);
void* QLayout_MaximumSizeDefault(void* ptr);
void* QLayout_MenuBar(void* ptr);
void* QLayout_MinimumSize(void* ptr);
void* QLayout_MinimumSizeDefault(void* ptr);
void* QLayout_ParentWidget(void* ptr);
void QLayout_RemoveItem(void* ptr, void* item);
void QLayout_RemoveWidget(void* ptr, void* widget);
void* QLayout_ReplaceWidget(void* ptr, void* from, void* to, long long options);
char QLayout_SetAlignment(void* ptr, void* w, long long alignment);
char QLayout_SetAlignment2(void* ptr, void* l, long long alignment);
void QLayout_SetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QLayout_SetContentsMargins2(void* ptr, void* margins);
void QLayout_SetEnabled(void* ptr, char enable);
void QLayout_SetGeometry(void* ptr, void* r);
void QLayout_SetGeometryDefault(void* ptr, void* r);
void QLayout_SetMenuBar(void* ptr, void* widget);
void QLayout_SetSizeConstraint(void* ptr, long long vql);
void QLayout_SetSpacing(void* ptr, int vin);
long long QLayout_SizeConstraint(void* ptr);
int QLayout_Spacing(void* ptr);
void* QLayout_TakeAt(void* ptr, int index);
void QLayout_Update(void* ptr);
void* QLayout___children_atList(void* ptr, int i);
void QLayout___children_setList(void* ptr, void* i);
void* QLayout___children_newList(void* ptr);
void* QLayout___dynamicPropertyNames_atList(void* ptr, int i);
void QLayout___dynamicPropertyNames_setList(void* ptr, void* i);
void* QLayout___dynamicPropertyNames_newList(void* ptr);
void* QLayout___findChildren_atList(void* ptr, int i);
void QLayout___findChildren_setList(void* ptr, void* i);
void* QLayout___findChildren_newList(void* ptr);
void* QLayout___findChildren_atList3(void* ptr, int i);
void QLayout___findChildren_setList3(void* ptr, void* i);
void* QLayout___findChildren_newList3(void* ptr);
void QLayout_ConnectNotify(void* ptr, void* sign);
void QLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QLayout_CustomEvent(void* ptr, void* event);
void QLayout_CustomEventDefault(void* ptr, void* event);
void QLayout_DeleteLater(void* ptr);
void QLayout_DeleteLaterDefault(void* ptr);
void QLayout_DisconnectNotify(void* ptr, void* sign);
void QLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QLayout_Event(void* ptr, void* e);
char QLayout_EventDefault(void* ptr, void* e);
char QLayout_EventFilter(void* ptr, void* watched, void* event);
char QLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLayout_MetaObject(void* ptr);
void* QLayout_MetaObjectDefault(void* ptr);
void QLayout_TimerEvent(void* ptr, void* event);
void QLayout_TimerEventDefault(void* ptr, void* event);
void* QLayout_SizeHint(void* ptr);
void* QLayout_SizeHintDefault(void* ptr);
void* QLayoutItem_NewQLayoutItem(long long alignment);
long long QLayoutItem_Alignment(void* ptr);
long long QLayoutItem_ControlTypes(void* ptr);
long long QLayoutItem_ControlTypesDefault(void* ptr);
long long QLayoutItem_ExpandingDirections(void* ptr);
void* QLayoutItem_Geometry(void* ptr);
char QLayoutItem_HasHeightForWidth(void* ptr);
char QLayoutItem_HasHeightForWidthDefault(void* ptr);
int QLayoutItem_HeightForWidth(void* ptr, int vin);
int QLayoutItem_HeightForWidthDefault(void* ptr, int vin);
void QLayoutItem_Invalidate(void* ptr);
void QLayoutItem_InvalidateDefault(void* ptr);
char QLayoutItem_IsEmpty(void* ptr);
void* QLayoutItem_Layout(void* ptr);
void* QLayoutItem_LayoutDefault(void* ptr);
void* QLayoutItem_MaximumSize(void* ptr);
int QLayoutItem_MinimumHeightForWidth(void* ptr, int w);
int QLayoutItem_MinimumHeightForWidthDefault(void* ptr, int w);
void* QLayoutItem_MinimumSize(void* ptr);
void QLayoutItem_SetAlignment(void* ptr, long long alignment);
void QLayoutItem_SetGeometry(void* ptr, void* r);
void* QLayoutItem_SizeHint(void* ptr);
void* QLayoutItem_SpacerItem(void* ptr);
void* QLayoutItem_SpacerItemDefault(void* ptr);
void* QLayoutItem_Widget(void* ptr);
void* QLayoutItem_WidgetDefault(void* ptr);
void QLayoutItem_DestroyQLayoutItem(void* ptr);
void QLayoutItem_DestroyQLayoutItemDefault(void* ptr);
void* QLineEdit_NewQLineEdit(void* parent);
void* QLineEdit_NewQLineEdit2(struct QtWidgets_PackedString contents, void* parent);
void QLineEdit_AddAction(void* ptr, void* action, long long position);
void* QLineEdit_AddAction2(void* ptr, void* icon, long long position);
long long QLineEdit_Alignment(void* ptr);
void QLineEdit_Backspace(void* ptr);
void QLineEdit_Clear(void* ptr);
void QLineEdit_ClearDefault(void* ptr);
void* QLineEdit_Completer(void* ptr);
void QLineEdit_Copy(void* ptr);
void QLineEdit_CopyDefault(void* ptr);
void* QLineEdit_CreateStandardContextMenu(void* ptr);
void QLineEdit_CursorBackward(void* ptr, char mark, int steps);
void QLineEdit_CursorForward(void* ptr, char mark, int steps);
long long QLineEdit_CursorMoveStyle(void* ptr);
int QLineEdit_CursorPosition(void* ptr);
int QLineEdit_CursorPositionAt(void* ptr, void* pos);
void QLineEdit_ConnectCursorPositionChanged(void* ptr, long long t);
void QLineEdit_DisconnectCursorPositionChanged(void* ptr);
void QLineEdit_CursorPositionChanged(void* ptr, int oldPos, int newPos);
void* QLineEdit_CursorRect(void* ptr);
void QLineEdit_CursorWordBackward(void* ptr, char mark);
void QLineEdit_CursorWordForward(void* ptr, char mark);
void QLineEdit_Cut(void* ptr);
void QLineEdit_CutDefault(void* ptr);
void QLineEdit_Del(void* ptr);
void QLineEdit_Deselect(void* ptr);
struct QtWidgets_PackedString QLineEdit_DisplayText(void* ptr);
char QLineEdit_DragEnabled(void* ptr);
long long QLineEdit_EchoMode(void* ptr);
void QLineEdit_ConnectEditingFinished(void* ptr, long long t);
void QLineEdit_DisconnectEditingFinished(void* ptr);
void QLineEdit_EditingFinished(void* ptr);
void QLineEdit_End(void* ptr, char mark);
char QLineEdit_HasAcceptableInput(void* ptr);
char QLineEdit_HasFrame(void* ptr);
char QLineEdit_HasSelectedText(void* ptr);
void QLineEdit_Home(void* ptr, char mark);
void QLineEdit_InitStyleOption(void* ptr, void* option);
struct QtWidgets_PackedString QLineEdit_InputMask(void* ptr);
void QLineEdit_ConnectInputRejected(void* ptr, long long t);
void QLineEdit_DisconnectInputRejected(void* ptr);
void QLineEdit_InputRejected(void* ptr);
void QLineEdit_Insert(void* ptr, struct QtWidgets_PackedString newText);
char QLineEdit_IsClearButtonEnabled(void* ptr);
char QLineEdit_IsModified(void* ptr);
char QLineEdit_IsReadOnly(void* ptr);
char QLineEdit_IsRedoAvailable(void* ptr);
char QLineEdit_IsUndoAvailable(void* ptr);
int QLineEdit_MaxLength(void* ptr);
void QLineEdit_Paste(void* ptr);
void QLineEdit_PasteDefault(void* ptr);
struct QtWidgets_PackedString QLineEdit_PlaceholderText(void* ptr);
void QLineEdit_Redo(void* ptr);
void QLineEdit_RedoDefault(void* ptr);
void QLineEdit_ConnectReturnPressed(void* ptr, long long t);
void QLineEdit_DisconnectReturnPressed(void* ptr);
void QLineEdit_ReturnPressed(void* ptr);
void QLineEdit_SelectAll(void* ptr);
void QLineEdit_SelectAllDefault(void* ptr);
struct QtWidgets_PackedString QLineEdit_SelectedText(void* ptr);
void QLineEdit_ConnectSelectionChanged(void* ptr, long long t);
void QLineEdit_DisconnectSelectionChanged(void* ptr);
void QLineEdit_SelectionChanged(void* ptr);
int QLineEdit_SelectionEnd(void* ptr);
int QLineEdit_SelectionLength(void* ptr);
int QLineEdit_SelectionStart(void* ptr);
void QLineEdit_SetAlignment(void* ptr, long long flag);
void QLineEdit_SetClearButtonEnabled(void* ptr, char enable);
void QLineEdit_SetCompleter(void* ptr, void* c);
void QLineEdit_SetCursorMoveStyle(void* ptr, long long style);
void QLineEdit_SetCursorPosition(void* ptr, int vin);
void QLineEdit_SetDragEnabled(void* ptr, char b);
void QLineEdit_SetEchoMode(void* ptr, long long vql);
void QLineEdit_SetFrame(void* ptr, char vbo);
void QLineEdit_SetInputMask(void* ptr, struct QtWidgets_PackedString inputMask);
void QLineEdit_SetMaxLength(void* ptr, int vin);
void QLineEdit_SetModified(void* ptr, char vbo);
void QLineEdit_SetPlaceholderText(void* ptr, struct QtWidgets_PackedString vqs);
void QLineEdit_SetReadOnly(void* ptr, char vbo);
void QLineEdit_SetSelection(void* ptr, int start, int length);
void QLineEdit_SetText(void* ptr, struct QtWidgets_PackedString vqs);
void QLineEdit_SetTextDefault(void* ptr, struct QtWidgets_PackedString vqs);
void QLineEdit_SetTextMargins(void* ptr, int left, int top, int right, int bottom);
void QLineEdit_SetTextMargins2(void* ptr, void* margins);
void QLineEdit_SetValidator(void* ptr, void* v);
struct QtWidgets_PackedString QLineEdit_Text(void* ptr);
void QLineEdit_ConnectTextChanged(void* ptr, long long t);
void QLineEdit_DisconnectTextChanged(void* ptr);
void QLineEdit_TextChanged(void* ptr, struct QtWidgets_PackedString text);
void QLineEdit_ConnectTextEdited(void* ptr, long long t);
void QLineEdit_DisconnectTextEdited(void* ptr);
void QLineEdit_TextEdited(void* ptr, struct QtWidgets_PackedString text);
void* QLineEdit_TextMargins(void* ptr);
void QLineEdit_Undo(void* ptr);
void QLineEdit_UndoDefault(void* ptr);
void* QLineEdit_Validator(void* ptr);
void QLineEdit_DestroyQLineEdit(void* ptr);
void QLineEdit_DestroyQLineEditDefault(void* ptr);
void* QListView_NewQListView(void* parent);
int QListView_BatchSize(void* ptr);
void QListView_ClearPropertyFlags(void* ptr);
void QListView_CurrentChanged(void* ptr, void* current, void* previous);
void QListView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QListView_DataChanged(void* ptr, void* topLeft, void* bottomRight, void* roles);
void QListView_DataChangedDefault(void* ptr, void* topLeft, void* bottomRight, void* roles);
long long QListView_Flow(void* ptr);
void* QListView_GridSize(void* ptr);
int QListView_HorizontalOffset(void* ptr);
int QListView_HorizontalOffsetDefault(void* ptr);
void* QListView_IndexAt(void* ptr, void* p);
void* QListView_IndexAtDefault(void* ptr, void* p);
char QListView_IsIndexHidden(void* ptr, void* index);
char QListView_IsIndexHiddenDefault(void* ptr, void* index);
char QListView_IsRowHidden(void* ptr, int row);
char QListView_IsSelectionRectVisible(void* ptr);
char QListView_IsWrapping(void* ptr);
long long QListView_ItemAlignment(void* ptr);
long long QListView_LayoutMode(void* ptr);
int QListView_ModelColumn(void* ptr);
void* QListView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QListView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
long long QListView_Movement(void* ptr);
void* QListView_RectForIndex(void* ptr, void* index);
long long QListView_ResizeMode(void* ptr);
void QListView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QListView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QListView_RowsInserted(void* ptr, void* parent, int start, int end);
void QListView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QListView_ScrollTo(void* ptr, void* index, long long hint);
void QListView_ScrollToDefault(void* ptr, void* index, long long hint);
void QListView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QListView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QListView_SetBatchSize(void* ptr, int batchSize);
void QListView_SetFlow(void* ptr, long long flow);
void QListView_SetGridSize(void* ptr, void* size);
void QListView_SetItemAlignment(void* ptr, long long alignment);
void QListView_SetLayoutMode(void* ptr, long long mode);
void QListView_SetModelColumn(void* ptr, int column);
void QListView_SetMovement(void* ptr, long long movement);
void QListView_SetPositionForIndex(void* ptr, void* position, void* index);
void QListView_SetResizeMode(void* ptr, long long mode);
void QListView_SetRowHidden(void* ptr, int row, char hide);
void QListView_SetSelection(void* ptr, void* rect, long long command);
void QListView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QListView_SetSelectionRectVisible(void* ptr, char show);
void QListView_SetSpacing(void* ptr, int space);
void QListView_SetUniformItemSizes(void* ptr, char enable);
void QListView_SetViewMode(void* ptr, long long mode);
void QListView_SetWordWrap(void* ptr, char on);
void QListView_SetWrapping(void* ptr, char enable);
int QListView_Spacing(void* ptr);
char QListView_UniformItemSizes(void* ptr);
void QListView_UpdateGeometries(void* ptr);
void QListView_UpdateGeometriesDefault(void* ptr);
int QListView_VerticalOffset(void* ptr);
int QListView_VerticalOffsetDefault(void* ptr);
long long QListView_ViewMode(void* ptr);
void* QListView_VisualRect(void* ptr, void* index);
void* QListView_VisualRectDefault(void* ptr, void* index);
void* QListView_VisualRegionForSelection(void* ptr, void* selection);
void* QListView_VisualRegionForSelectionDefault(void* ptr, void* selection);
char QListView_WordWrap(void* ptr);
void QListView_DestroyQListView(void* ptr);
void QListView_DestroyQListViewDefault(void* ptr);
void* QListView___indexesMoved_indexes_atList(void* ptr, int i);
void QListView___indexesMoved_indexes_setList(void* ptr, void* i);
void* QListView___indexesMoved_indexes_newList(void* ptr);
void* QListWidget_NewQListWidget(void* parent);
void QListWidget_AddItem(void* ptr, struct QtWidgets_PackedString label);
void QListWidget_AddItem2(void* ptr, void* item);
void QListWidget_AddItems(void* ptr, struct QtWidgets_PackedString labels);
void QListWidget_Clear(void* ptr);
void QListWidget_ClearDefault(void* ptr);
void QListWidget_ClosePersistentEditor(void* ptr, void* item);
int QListWidget_Count(void* ptr);
void* QListWidget_CurrentItem(void* ptr);
void QListWidget_ConnectCurrentItemChanged(void* ptr, long long t);
void QListWidget_DisconnectCurrentItemChanged(void* ptr);
void QListWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
int QListWidget_CurrentRow(void* ptr);
void QListWidget_ConnectCurrentRowChanged(void* ptr, long long t);
void QListWidget_DisconnectCurrentRowChanged(void* ptr);
void QListWidget_CurrentRowChanged(void* ptr, int currentRow);
void QListWidget_ConnectCurrentTextChanged(void* ptr, long long t);
void QListWidget_DisconnectCurrentTextChanged(void* ptr);
void QListWidget_CurrentTextChanged(void* ptr, struct QtWidgets_PackedString currentText);
char QListWidget_DropMimeData(void* ptr, int index, void* data, long long action);
char QListWidget_DropMimeDataDefault(void* ptr, int index, void* data, long long action);
void QListWidget_EditItem(void* ptr, void* item);
struct QtWidgets_PackedList QListWidget_FindItems(void* ptr, struct QtWidgets_PackedString text, long long flags);
void* QListWidget_IndexFromItem(void* ptr, void* item);
void QListWidget_InsertItem(void* ptr, int row, void* item);
void QListWidget_InsertItem2(void* ptr, int row, struct QtWidgets_PackedString label);
void QListWidget_InsertItems(void* ptr, int row, struct QtWidgets_PackedString labels);
char QListWidget_IsPersistentEditorOpen(void* ptr, void* item);
char QListWidget_IsSortingEnabled(void* ptr);
void* QListWidget_Item(void* ptr, int row);
void QListWidget_ConnectItemActivated(void* ptr, long long t);
void QListWidget_DisconnectItemActivated(void* ptr);
void QListWidget_ItemActivated(void* ptr, void* item);
void* QListWidget_ItemAt(void* ptr, void* p);
void* QListWidget_ItemAt2(void* ptr, int x, int y);
void QListWidget_ConnectItemChanged(void* ptr, long long t);
void QListWidget_DisconnectItemChanged(void* ptr);
void QListWidget_ItemChanged(void* ptr, void* item);
void QListWidget_ConnectItemClicked(void* ptr, long long t);
void QListWidget_DisconnectItemClicked(void* ptr);
void QListWidget_ItemClicked(void* ptr, void* item);
void QListWidget_ConnectItemDoubleClicked(void* ptr, long long t);
void QListWidget_DisconnectItemDoubleClicked(void* ptr);
void QListWidget_ItemDoubleClicked(void* ptr, void* item);
void QListWidget_ConnectItemEntered(void* ptr, long long t);
void QListWidget_DisconnectItemEntered(void* ptr);
void QListWidget_ItemEntered(void* ptr, void* item);
void* QListWidget_ItemFromIndex(void* ptr, void* index);
void QListWidget_ConnectItemPressed(void* ptr, long long t);
void QListWidget_DisconnectItemPressed(void* ptr);
void QListWidget_ItemPressed(void* ptr, void* item);
void QListWidget_ConnectItemSelectionChanged(void* ptr, long long t);
void QListWidget_DisconnectItemSelectionChanged(void* ptr);
void QListWidget_ItemSelectionChanged(void* ptr);
void* QListWidget_ItemWidget(void* ptr, void* item);
struct QtWidgets_PackedList QListWidget_Items(void* ptr, void* data);
void* QListWidget_MimeData(void* ptr, void* items);
void* QListWidget_MimeDataDefault(void* ptr, void* items);
struct QtWidgets_PackedString QListWidget_MimeTypes(void* ptr);
struct QtWidgets_PackedString QListWidget_MimeTypesDefault(void* ptr);
void QListWidget_OpenPersistentEditor(void* ptr, void* item);
void QListWidget_RemoveItemWidget(void* ptr, void* item);
int QListWidget_Row(void* ptr, void* item);
void QListWidget_ScrollToItem(void* ptr, void* item, long long hint);
void QListWidget_ScrollToItemDefault(void* ptr, void* item, long long hint);
struct QtWidgets_PackedList QListWidget_SelectedItems(void* ptr);
void QListWidget_SetCurrentItem(void* ptr, void* item);
void QListWidget_SetCurrentItem2(void* ptr, void* item, long long command);
void QListWidget_SetCurrentRow(void* ptr, int row);
void QListWidget_SetCurrentRow2(void* ptr, int row, long long command);
void QListWidget_SetItemWidget(void* ptr, void* item, void* widget);
void QListWidget_SetSortingEnabled(void* ptr, char enable);
void QListWidget_SortItems(void* ptr, long long order);
long long QListWidget_SupportedDropActions(void* ptr);
long long QListWidget_SupportedDropActionsDefault(void* ptr);
void* QListWidget_TakeItem(void* ptr, int row);
void* QListWidget_VisualItemRect(void* ptr, void* item);
void QListWidget_DestroyQListWidget(void* ptr);
void QListWidget_DestroyQListWidgetDefault(void* ptr);
void* QListWidget___findItems_atList(void* ptr, int i);
void QListWidget___findItems_setList(void* ptr, void* i);
void* QListWidget___findItems_newList(void* ptr);
void* QListWidget___items_atList(void* ptr, int i);
void QListWidget___items_setList(void* ptr, void* i);
void* QListWidget___items_newList(void* ptr);
void* QListWidget___mimeData_items_atList(void* ptr, int i);
void QListWidget___mimeData_items_setList(void* ptr, void* i);
void* QListWidget___mimeData_items_newList(void* ptr);
void* QListWidget___selectedItems_atList(void* ptr, int i);
void QListWidget___selectedItems_setList(void* ptr, void* i);
void* QListWidget___selectedItems_newList(void* ptr);
void* QListWidgetItem_NewQListWidgetItem(void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem2(struct QtWidgets_PackedString text, void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem3(void* icon, struct QtWidgets_PackedString text, void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem4(void* other);
void* QListWidgetItem_Background(void* ptr);
long long QListWidgetItem_CheckState(void* ptr);
void* QListWidgetItem_Clone(void* ptr);
void* QListWidgetItem_CloneDefault(void* ptr);
void* QListWidgetItem_Data(void* ptr, int role);
void* QListWidgetItem_DataDefault(void* ptr, int role);
long long QListWidgetItem_Flags(void* ptr);
void* QListWidgetItem_Font(void* ptr);
void* QListWidgetItem_Foreground(void* ptr);
void* QListWidgetItem_Icon(void* ptr);
char QListWidgetItem_IsHidden(void* ptr);
char QListWidgetItem_IsSelected(void* ptr);
void* QListWidgetItem_ListWidget(void* ptr);
void QListWidgetItem_Read(void* ptr, void* in);
void QListWidgetItem_ReadDefault(void* ptr, void* in);
void QListWidgetItem_SetBackground(void* ptr, void* brush);
void QListWidgetItem_SetCheckState(void* ptr, long long state);
void QListWidgetItem_SetData(void* ptr, int role, void* value);
void QListWidgetItem_SetDataDefault(void* ptr, int role, void* value);
void QListWidgetItem_SetFlags(void* ptr, long long flags);
void QListWidgetItem_SetFont(void* ptr, void* font);
void QListWidgetItem_SetForeground(void* ptr, void* brush);
void QListWidgetItem_SetHidden(void* ptr, char hide);
void QListWidgetItem_SetIcon(void* ptr, void* icon);
void QListWidgetItem_SetSelected(void* ptr, char sele);
void QListWidgetItem_SetSizeHint(void* ptr, void* size);
void QListWidgetItem_SetStatusTip(void* ptr, struct QtWidgets_PackedString statusTip);
void QListWidgetItem_SetText(void* ptr, struct QtWidgets_PackedString text);
void QListWidgetItem_SetTextAlignment(void* ptr, int alignment);
void QListWidgetItem_SetToolTip(void* ptr, struct QtWidgets_PackedString toolTip);
void QListWidgetItem_SetWhatsThis(void* ptr, struct QtWidgets_PackedString whatsThis);
void* QListWidgetItem_SizeHint(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_StatusTip(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_Text(void* ptr);
int QListWidgetItem_TextAlignment(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_ToolTip(void* ptr);
int QListWidgetItem_Type(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_WhatsThis(void* ptr);
void QListWidgetItem_Write(void* ptr, void* out);
void QListWidgetItem_WriteDefault(void* ptr, void* out);
void QListWidgetItem_DestroyQListWidgetItem(void* ptr);
void QListWidgetItem_DestroyQListWidgetItemDefault(void* ptr);
void* QListWidgetItem___dummy_atList(void* ptr, int i);
void QListWidgetItem___dummy_setList(void* ptr, void* i);
void* QListWidgetItem___dummy_newList(void* ptr);
void* QListWidgetItem___setDummy__atList(void* ptr, int i);
void QListWidgetItem___setDummy__setList(void* ptr, void* i);
void* QListWidgetItem___setDummy__newList(void* ptr);
void QMacCocoaViewContainer_DestroyQMacCocoaViewContainer(void* ptr);
void QMacCocoaViewContainer_DestroyQMacCocoaViewContainerDefault(void* ptr);
char QMacNativeWidget_Event(void* ptr, void* ev);
char QMacNativeWidget_EventDefault(void* ptr, void* ev);
void* QMacNativeWidget_SizeHint(void* ptr);
void* QMacNativeWidget_SizeHintDefault(void* ptr);
void QMacNativeWidget_DestroyQMacNativeWidget(void* ptr);
void QMacNativeWidget_DestroyQMacNativeWidgetDefault(void* ptr);
void* QMainWindow_NewQMainWindow(void* parent, long long flags);
void QMainWindow_AddDockWidget(void* ptr, long long area, void* dockwidget);
void QMainWindow_AddDockWidget2(void* ptr, long long area, void* dockwidget, long long orientation);
void QMainWindow_AddToolBar(void* ptr, long long area, void* toolbar);
void QMainWindow_AddToolBar2(void* ptr, void* toolbar);
void* QMainWindow_AddToolBar3(void* ptr, struct QtWidgets_PackedString title);
void QMainWindow_AddToolBarBreak(void* ptr, long long area);
void* QMainWindow_CentralWidget(void* ptr);
long long QMainWindow_Corner(void* ptr, long long corner);
void* QMainWindow_CreatePopupMenu(void* ptr);
void* QMainWindow_CreatePopupMenuDefault(void* ptr);
long long QMainWindow_DockOptions(void* ptr);
long long QMainWindow_DockWidgetArea(void* ptr, void* dockwidget);
char QMainWindow_DocumentMode(void* ptr);
void* QMainWindow_IconSize(void* ptr);
void QMainWindow_ConnectIconSizeChanged(void* ptr, long long t);
void QMainWindow_DisconnectIconSizeChanged(void* ptr);
void QMainWindow_IconSizeChanged(void* ptr, void* iconSize);
void QMainWindow_InsertToolBar(void* ptr, void* before, void* toolbar);
void QMainWindow_InsertToolBarBreak(void* ptr, void* before);
char QMainWindow_IsAnimated(void* ptr);
char QMainWindow_IsDockNestingEnabled(void* ptr);
void* QMainWindow_MenuBar(void* ptr);
void* QMainWindow_MenuWidget(void* ptr);
void QMainWindow_RemoveDockWidget(void* ptr, void* dockwidget);
void QMainWindow_RemoveToolBar(void* ptr, void* toolbar);
void QMainWindow_RemoveToolBarBreak(void* ptr, void* before);
void QMainWindow_ResizeDocks(void* ptr, void* docks, void* sizes, long long orientation);
char QMainWindow_RestoreDockWidget(void* ptr, void* dockwidget);
char QMainWindow_RestoreState(void* ptr, void* state, int version);
void* QMainWindow_SaveState(void* ptr, int version);
void QMainWindow_SetAnimated(void* ptr, char enabled);
void QMainWindow_SetAnimatedDefault(void* ptr, char enabled);
void QMainWindow_SetCentralWidget(void* ptr, void* widget);
void QMainWindow_SetCorner(void* ptr, long long corner, long long area);
void QMainWindow_SetDockNestingEnabled(void* ptr, char enabled);
void QMainWindow_SetDockNestingEnabledDefault(void* ptr, char enabled);
void QMainWindow_SetDockOptions(void* ptr, long long options);
void QMainWindow_SetDocumentMode(void* ptr, char enabled);
void QMainWindow_SetIconSize(void* ptr, void* iconSize);
void QMainWindow_SetMenuBar(void* ptr, void* menuBar);
void QMainWindow_SetMenuWidget(void* ptr, void* menuBar);
void QMainWindow_SetStatusBar(void* ptr, void* statusbar);
void QMainWindow_SetTabPosition(void* ptr, long long areas, long long tabPosition);
void QMainWindow_SetTabShape(void* ptr, long long tabShape);
void QMainWindow_SetToolButtonStyle(void* ptr, long long toolButtonStyle);
void QMainWindow_SetUnifiedTitleAndToolBarOnMac(void* ptr, char set);
void QMainWindow_SetUnifiedTitleAndToolBarOnMacDefault(void* ptr, char set);
void QMainWindow_SplitDockWidget(void* ptr, void* first, void* second, long long orientation);
void* QMainWindow_StatusBar(void* ptr);
long long QMainWindow_TabPosition(void* ptr, long long area);
long long QMainWindow_TabShape(void* ptr);
void QMainWindow_ConnectTabifiedDockWidgetActivated(void* ptr, long long t);
void QMainWindow_DisconnectTabifiedDockWidgetActivated(void* ptr);
void QMainWindow_TabifiedDockWidgetActivated(void* ptr, void* dockWidget);
struct QtWidgets_PackedList QMainWindow_TabifiedDockWidgets(void* ptr, void* dockwidget);
void QMainWindow_TabifyDockWidget(void* ptr, void* first, void* second);
void* QMainWindow_TakeCentralWidget(void* ptr);
long long QMainWindow_ToolBarArea(void* ptr, void* toolbar);
char QMainWindow_ToolBarBreak(void* ptr, void* toolbar);
long long QMainWindow_ToolButtonStyle(void* ptr);
void QMainWindow_ConnectToolButtonStyleChanged(void* ptr, long long t);
void QMainWindow_DisconnectToolButtonStyleChanged(void* ptr);
void QMainWindow_ToolButtonStyleChanged(void* ptr, long long toolButtonStyle);
char QMainWindow_UnifiedTitleAndToolBarOnMac(void* ptr);
void QMainWindow_DestroyQMainWindow(void* ptr);
void QMainWindow_DestroyQMainWindowDefault(void* ptr);
void* QMainWindow___resizeDocks_docks_atList(void* ptr, int i);
void QMainWindow___resizeDocks_docks_setList(void* ptr, void* i);
void* QMainWindow___resizeDocks_docks_newList(void* ptr);
int QMainWindow___resizeDocks_sizes_atList(void* ptr, int i);
void QMainWindow___resizeDocks_sizes_setList(void* ptr, int i);
void* QMainWindow___resizeDocks_sizes_newList(void* ptr);
void* QMainWindow___tabifiedDockWidgets_atList(void* ptr, int i);
void QMainWindow___tabifiedDockWidgets_setList(void* ptr, void* i);
void* QMainWindow___tabifiedDockWidgets_newList(void* ptr);
void* QMdiArea_NewQMdiArea(void* parent);
void QMdiArea_ActivateNextSubWindow(void* ptr);
void QMdiArea_ActivateNextSubWindowDefault(void* ptr);
void QMdiArea_ActivatePreviousSubWindow(void* ptr);
void QMdiArea_ActivatePreviousSubWindowDefault(void* ptr);
long long QMdiArea_ActivationOrder(void* ptr);
void* QMdiArea_ActiveSubWindow(void* ptr);
void* QMdiArea_AddSubWindow(void* ptr, void* widget, long long windowFlags);
void* QMdiArea_Background(void* ptr);
void QMdiArea_CascadeSubWindows(void* ptr);
void QMdiArea_CascadeSubWindowsDefault(void* ptr);
void QMdiArea_CloseActiveSubWindow(void* ptr);
void QMdiArea_CloseActiveSubWindowDefault(void* ptr);
void QMdiArea_CloseAllSubWindows(void* ptr);
void QMdiArea_CloseAllSubWindowsDefault(void* ptr);
void* QMdiArea_CurrentSubWindow(void* ptr);
char QMdiArea_DocumentMode(void* ptr);
void QMdiArea_RemoveSubWindow(void* ptr, void* widget);
void QMdiArea_SetActivationOrder(void* ptr, long long order);
void QMdiArea_SetActiveSubWindow(void* ptr, void* window);
void QMdiArea_SetActiveSubWindowDefault(void* ptr, void* window);
void QMdiArea_SetBackground(void* ptr, void* background);
void QMdiArea_SetDocumentMode(void* ptr, char enabled);
void QMdiArea_SetOption(void* ptr, long long option, char on);
void QMdiArea_SetTabPosition(void* ptr, long long position);
void QMdiArea_SetTabShape(void* ptr, long long shape);
void QMdiArea_SetTabsClosable(void* ptr, char closable);
void QMdiArea_SetTabsMovable(void* ptr, char movable);
void QMdiArea_SetViewMode(void* ptr, long long mode);
void QMdiArea_SetupViewport(void* ptr, void* viewport);
void QMdiArea_SetupViewportDefault(void* ptr, void* viewport);
void QMdiArea_ConnectSubWindowActivated(void* ptr, long long t);
void QMdiArea_DisconnectSubWindowActivated(void* ptr);
void QMdiArea_SubWindowActivated(void* ptr, void* window);
struct QtWidgets_PackedList QMdiArea_SubWindowList(void* ptr, long long order);
long long QMdiArea_TabPosition(void* ptr);
long long QMdiArea_TabShape(void* ptr);
char QMdiArea_TabsClosable(void* ptr);
char QMdiArea_TabsMovable(void* ptr);
char QMdiArea_TestOption(void* ptr, long long option);
void QMdiArea_TileSubWindows(void* ptr);
void QMdiArea_TileSubWindowsDefault(void* ptr);
long long QMdiArea_ViewMode(void* ptr);
void QMdiArea_DestroyQMdiArea(void* ptr);
void QMdiArea_DestroyQMdiAreaDefault(void* ptr);
void* QMdiArea___subWindowList_atList(void* ptr, int i);
void QMdiArea___subWindowList_setList(void* ptr, void* i);
void* QMdiArea___subWindowList_newList(void* ptr);
void* QMdiSubWindow_NewQMdiSubWindow(void* parent, long long flags);
void QMdiSubWindow_ConnectAboutToActivate(void* ptr, long long t);
void QMdiSubWindow_DisconnectAboutToActivate(void* ptr);
void QMdiSubWindow_AboutToActivate(void* ptr);
char QMdiSubWindow_IsShaded(void* ptr);
int QMdiSubWindow_KeyboardPageStep(void* ptr);
int QMdiSubWindow_KeyboardSingleStep(void* ptr);
void* QMdiSubWindow_MdiArea(void* ptr);
void QMdiSubWindow_SetKeyboardPageStep(void* ptr, int step);
void QMdiSubWindow_SetKeyboardSingleStep(void* ptr, int step);
void QMdiSubWindow_SetOption(void* ptr, long long option, char on);
void QMdiSubWindow_SetSystemMenu(void* ptr, void* systemMenu);
void QMdiSubWindow_SetWidget(void* ptr, void* widget);
void QMdiSubWindow_ShowShaded(void* ptr);
void QMdiSubWindow_ShowShadedDefault(void* ptr);
void QMdiSubWindow_ShowSystemMenu(void* ptr);
void QMdiSubWindow_ShowSystemMenuDefault(void* ptr);
void* QMdiSubWindow_SystemMenu(void* ptr);
char QMdiSubWindow_TestOption(void* ptr, long long option);
void* QMdiSubWindow_Widget(void* ptr);
void QMdiSubWindow_ConnectWindowStateChanged(void* ptr, long long t);
void QMdiSubWindow_DisconnectWindowStateChanged(void* ptr);
void QMdiSubWindow_WindowStateChanged(void* ptr, long long oldState, long long newState);
void QMdiSubWindow_DestroyQMdiSubWindow(void* ptr);
void QMdiSubWindow_DestroyQMdiSubWindowDefault(void* ptr);
void* QMenu_NewQMenu(void* parent);
void* QMenu_NewQMenu2(struct QtWidgets_PackedString title, void* parent);
void QMenu_ConnectAboutToHide(void* ptr, long long t);
void QMenu_DisconnectAboutToHide(void* ptr);
void QMenu_AboutToHide(void* ptr);
void QMenu_ConnectAboutToShow(void* ptr, long long t);
void QMenu_DisconnectAboutToShow(void* ptr);
void QMenu_AboutToShow(void* ptr);
void* QMenu_ActionAt(void* ptr, void* pt);
void* QMenu_ActionGeometry(void* ptr, void* act);
void* QMenu_ActiveAction(void* ptr);
void* QMenu_AddAction(void* ptr, struct QtWidgets_PackedString text);
void* QMenu_AddAction2(void* ptr, void* icon, struct QtWidgets_PackedString text);
void* QMenu_AddAction3(void* ptr, struct QtWidgets_PackedString text, void* receiver, char* member, void* shortcut);
void* QMenu_AddAction4(void* ptr, void* icon, struct QtWidgets_PackedString text, void* receiver, char* member, void* shortcut);
void* QMenu_AddMenu(void* ptr, void* menu);
void* QMenu_AddMenu2(void* ptr, struct QtWidgets_PackedString title);
void* QMenu_AddMenu3(void* ptr, void* icon, struct QtWidgets_PackedString title);
void* QMenu_AddSection(void* ptr, struct QtWidgets_PackedString text);
void* QMenu_AddSection2(void* ptr, void* icon, struct QtWidgets_PackedString text);
void* QMenu_AddSeparator(void* ptr);
void QMenu_Clear(void* ptr);
int QMenu_ColumnCount(void* ptr);
void* QMenu_DefaultAction(void* ptr);
void* QMenu_Exec(void* ptr);
void* QMenu_Exec2(void* ptr, void* p, void* action);
void* QMenu_QMenu_Exec3(void* actions, void* pos, void* at, void* parent);
void QMenu_HideTearOffMenu(void* ptr);
void QMenu_ConnectHovered(void* ptr, long long t);
void QMenu_DisconnectHovered(void* ptr);
void QMenu_Hovered(void* ptr, void* action);
void* QMenu_Icon(void* ptr);
void QMenu_InitStyleOption(void* ptr, void* option, void* action);
void* QMenu_InsertMenu(void* ptr, void* before, void* menu);
void* QMenu_InsertSection(void* ptr, void* before, struct QtWidgets_PackedString text);
void* QMenu_InsertSection2(void* ptr, void* before, void* icon, struct QtWidgets_PackedString text);
void* QMenu_InsertSeparator(void* ptr, void* before);
char QMenu_IsEmpty(void* ptr);
char QMenu_IsTearOffEnabled(void* ptr);
char QMenu_IsTearOffMenuVisible(void* ptr);
void* QMenu_MenuAction(void* ptr);
void QMenu_Popup(void* ptr, void* p, void* atAction);
char QMenu_SeparatorsCollapsible(void* ptr);
void QMenu_SetActiveAction(void* ptr, void* act);
void QMenu_SetAsDockMenu(void* ptr);
void QMenu_SetDefaultAction(void* ptr, void* act);
void QMenu_SetIcon(void* ptr, void* icon);
void QMenu_SetSeparatorsCollapsible(void* ptr, char collapse);
void QMenu_SetTearOffEnabled(void* ptr, char vbo);
void QMenu_SetTitle(void* ptr, struct QtWidgets_PackedString title);
void QMenu_SetToolTipsVisible(void* ptr, char visible);
void QMenu_ShowTearOffMenu(void* ptr, void* pos);
void QMenu_ShowTearOffMenu2(void* ptr);
struct QtWidgets_PackedString QMenu_Title(void* ptr);
char QMenu_ToolTipsVisible(void* ptr);
void QMenu_ConnectTriggered(void* ptr, long long t);
void QMenu_DisconnectTriggered(void* ptr);
void QMenu_Triggered(void* ptr, void* action);
void QMenu_DestroyQMenu(void* ptr);
void QMenu_DestroyQMenuDefault(void* ptr);
void* QMenu___exec_actions_atList3(void* ptr, int i);
void QMenu___exec_actions_setList3(void* ptr, void* i);
void* QMenu___exec_actions_newList3(void* ptr);
void* QMenuBar_NewQMenuBar(void* parent);
void* QMenuBar_ActionAt(void* ptr, void* pt);
void* QMenuBar_ActionGeometry(void* ptr, void* act);
void* QMenuBar_ActiveAction(void* ptr);
void* QMenuBar_AddAction(void* ptr, struct QtWidgets_PackedString text);
void* QMenuBar_AddAction2(void* ptr, struct QtWidgets_PackedString text, void* receiver, char* member);
void* QMenuBar_AddMenu(void* ptr, void* menu);
void* QMenuBar_AddMenu2(void* ptr, struct QtWidgets_PackedString title);
void* QMenuBar_AddMenu3(void* ptr, void* icon, struct QtWidgets_PackedString title);
void* QMenuBar_AddSeparator(void* ptr);
void QMenuBar_Clear(void* ptr);
void* QMenuBar_CornerWidget(void* ptr, long long corner);
void QMenuBar_ConnectHovered(void* ptr, long long t);
void QMenuBar_DisconnectHovered(void* ptr);
void QMenuBar_Hovered(void* ptr, void* action);
void QMenuBar_InitStyleOption(void* ptr, void* option, void* action);
void* QMenuBar_InsertMenu(void* ptr, void* before, void* menu);
void* QMenuBar_InsertSeparator(void* ptr, void* before);
char QMenuBar_IsDefaultUp(void* ptr);
char QMenuBar_IsNativeMenuBar(void* ptr);
void QMenuBar_SetActiveAction(void* ptr, void* act);
void QMenuBar_SetCornerWidget(void* ptr, void* widget, long long corner);
void QMenuBar_SetDefaultUp(void* ptr, char vbo);
void QMenuBar_SetNativeMenuBar(void* ptr, char nativeMenuBar);
void QMenuBar_ConnectTriggered(void* ptr, long long t);
void QMenuBar_DisconnectTriggered(void* ptr);
void QMenuBar_Triggered(void* ptr, void* action);
void QMenuBar_DestroyQMenuBar(void* ptr);
void QMenuBar_DestroyQMenuBarDefault(void* ptr);
int QMessageBox_ButtonMask_Type();
void* QMessageBox_NewQMessageBox(void* parent);
void* QMessageBox_NewQMessageBox2(long long icon, struct QtWidgets_PackedString title, struct QtWidgets_PackedString text, long long buttons, void* parent, long long ff);
void QMessageBox_QMessageBox_About(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString text);
void QMessageBox_QMessageBox_AboutQt(void* parent, struct QtWidgets_PackedString title);
void QMessageBox_AddButton(void* ptr, void* button, long long role);
void* QMessageBox_AddButton2(void* ptr, struct QtWidgets_PackedString text, long long role);
void* QMessageBox_AddButton3(void* ptr, long long button);
void* QMessageBox_Button(void* ptr, long long which);
void QMessageBox_ConnectButtonClicked(void* ptr, long long t);
void QMessageBox_DisconnectButtonClicked(void* ptr);
void QMessageBox_ButtonClicked(void* ptr, void* button);
long long QMessageBox_ButtonRole(void* ptr, void* button);
struct QtWidgets_PackedList QMessageBox_Buttons(void* ptr);
void* QMessageBox_CheckBox(void* ptr);
void* QMessageBox_ClickedButton(void* ptr);
long long QMessageBox_QMessageBox_Critical(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString text, long long buttons, long long defaultButton);
void* QMessageBox_DefaultButton(void* ptr);
struct QtWidgets_PackedString QMessageBox_DetailedText(void* ptr);
void* QMessageBox_EscapeButton(void* ptr);
long long QMessageBox_Icon(void* ptr);
void* QMessageBox_IconPixmap(void* ptr);
long long QMessageBox_QMessageBox_Information(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString text, long long buttons, long long defaultButton);
struct QtWidgets_PackedString QMessageBox_InformativeText(void* ptr);
void QMessageBox_Open(void* ptr, void* receiver, char* member);
long long QMessageBox_QMessageBox_Question(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString text, long long buttons, long long defaultButton);
void QMessageBox_RemoveButton(void* ptr, void* button);
void QMessageBox_SetCheckBox(void* ptr, void* cb);
void QMessageBox_SetDefaultButton(void* ptr, void* button);
void QMessageBox_SetDefaultButton2(void* ptr, long long button);
void QMessageBox_SetDetailedText(void* ptr, struct QtWidgets_PackedString text);
void QMessageBox_SetEscapeButton(void* ptr, void* button);
void QMessageBox_SetEscapeButton2(void* ptr, long long button);
void QMessageBox_SetIcon(void* ptr, long long vqm);
void QMessageBox_SetIconPixmap(void* ptr, void* pixmap);
void QMessageBox_SetInformativeText(void* ptr, struct QtWidgets_PackedString text);
void QMessageBox_SetStandardButtons(void* ptr, long long buttons);
void QMessageBox_SetText(void* ptr, struct QtWidgets_PackedString text);
void QMessageBox_SetTextFormat(void* ptr, long long format);
void QMessageBox_SetTextInteractionFlags(void* ptr, long long flags);
void QMessageBox_SetWindowTitle(void* ptr, struct QtWidgets_PackedString title);
long long QMessageBox_StandardButton(void* ptr, void* button);
long long QMessageBox_StandardButtons(void* ptr);
struct QtWidgets_PackedString QMessageBox_Text(void* ptr);
long long QMessageBox_TextFormat(void* ptr);
long long QMessageBox_TextInteractionFlags(void* ptr);
long long QMessageBox_QMessageBox_Warning(void* parent, struct QtWidgets_PackedString title, struct QtWidgets_PackedString text, long long buttons, long long defaultButton);
void QMessageBox_DestroyQMessageBox(void* ptr);
void QMessageBox_DestroyQMessageBoxDefault(void* ptr);
void* QMessageBox___buttons_atList(void* ptr, int i);
void QMessageBox___buttons_setList(void* ptr, void* i);
void* QMessageBox___buttons_newList(void* ptr);
void* QMouseEventTransition_NewQMouseEventTransition(void* sourceState);
void* QMouseEventTransition_NewQMouseEventTransition2(void* object, long long ty, long long button, void* sourceState);
long long QMouseEventTransition_Button(void* ptr);
char QMouseEventTransition_EventTestDefault(void* ptr, void* event);
void* QMouseEventTransition_HitTestPath(void* ptr);
long long QMouseEventTransition_ModifierMask(void* ptr);
void QMouseEventTransition_OnTransitionDefault(void* ptr, void* event);
void QMouseEventTransition_SetButton(void* ptr, long long button);
void QMouseEventTransition_SetHitTestPath(void* ptr, void* path);
void QMouseEventTransition_SetModifierMask(void* ptr, long long modifierMask);
void QMouseEventTransition_DestroyQMouseEventTransition(void* ptr);
void QMouseEventTransition_DestroyQMouseEventTransitionDefault(void* ptr);
void* QMouseEventTransition___animations_atList(void* ptr, int i);
void QMouseEventTransition___animations_setList(void* ptr, void* i);
void* QMouseEventTransition___animations_newList(void* ptr);
void* QMouseEventTransition___setTargetStates_targets_atList(void* ptr, int i);
void QMouseEventTransition___setTargetStates_targets_setList(void* ptr, void* i);
void* QMouseEventTransition___setTargetStates_targets_newList(void* ptr);
void* QMouseEventTransition___targetStates_atList(void* ptr, int i);
void QMouseEventTransition___targetStates_setList(void* ptr, void* i);
void* QMouseEventTransition___targetStates_newList(void* ptr);
void* QMouseEventTransition___children_atList(void* ptr, int i);
void QMouseEventTransition___children_setList(void* ptr, void* i);
void* QMouseEventTransition___children_newList(void* ptr);
void* QMouseEventTransition___dynamicPropertyNames_atList(void* ptr, int i);
void QMouseEventTransition___dynamicPropertyNames_setList(void* ptr, void* i);
void* QMouseEventTransition___dynamicPropertyNames_newList(void* ptr);
void* QMouseEventTransition___findChildren_atList(void* ptr, int i);
void QMouseEventTransition___findChildren_setList(void* ptr, void* i);
void* QMouseEventTransition___findChildren_newList(void* ptr);
void* QMouseEventTransition___findChildren_atList3(void* ptr, int i);
void QMouseEventTransition___findChildren_setList3(void* ptr, void* i);
void* QMouseEventTransition___findChildren_newList3(void* ptr);
char QMouseEventTransition_EventDefault(void* ptr, void* e);
void QMouseEventTransition_ChildEventDefault(void* ptr, void* event);
void QMouseEventTransition_ConnectNotifyDefault(void* ptr, void* sign);
void QMouseEventTransition_CustomEventDefault(void* ptr, void* event);
void QMouseEventTransition_DeleteLaterDefault(void* ptr);
void QMouseEventTransition_DisconnectNotifyDefault(void* ptr, void* sign);
char QMouseEventTransition_EventFilterDefault(void* ptr, void* watched, void* event);
void* QMouseEventTransition_MetaObjectDefault(void* ptr);
void QMouseEventTransition_TimerEventDefault(void* ptr, void* event);
void* QOpenGLWidget_NewQOpenGLWidget(void* parent, long long ff);
void QOpenGLWidget_ConnectAboutToCompose(void* ptr, long long t);
void QOpenGLWidget_DisconnectAboutToCompose(void* ptr);
void QOpenGLWidget_AboutToCompose(void* ptr);
void QOpenGLWidget_ConnectAboutToResize(void* ptr, long long t);
void QOpenGLWidget_DisconnectAboutToResize(void* ptr);
void QOpenGLWidget_AboutToResize(void* ptr);
void* QOpenGLWidget_Context(void* ptr);
unsigned int QOpenGLWidget_DefaultFramebufferObject(void* ptr);
void QOpenGLWidget_DoneCurrent(void* ptr);
void* QOpenGLWidget_Format(void* ptr);
void QOpenGLWidget_ConnectFrameSwapped(void* ptr, long long t);
void QOpenGLWidget_DisconnectFrameSwapped(void* ptr);
void QOpenGLWidget_FrameSwapped(void* ptr);
void* QOpenGLWidget_GrabFramebuffer(void* ptr);
void QOpenGLWidget_InitializeGL(void* ptr);
void QOpenGLWidget_InitializeGLDefault(void* ptr);
char QOpenGLWidget_IsValid(void* ptr);
void QOpenGLWidget_MakeCurrent(void* ptr);
void QOpenGLWidget_PaintGL(void* ptr);
void QOpenGLWidget_PaintGLDefault(void* ptr);
void* QOpenGLWidget_Redirected(void* ptr, void* p);
void* QOpenGLWidget_RedirectedDefault(void* ptr, void* p);
void QOpenGLWidget_ResizeGL(void* ptr, int w, int h);
void QOpenGLWidget_ResizeGLDefault(void* ptr, int w, int h);
void QOpenGLWidget_ConnectResized(void* ptr, long long t);
void QOpenGLWidget_DisconnectResized(void* ptr);
void QOpenGLWidget_Resized(void* ptr);
void QOpenGLWidget_SetFormat(void* ptr, void* format);
void QOpenGLWidget_SetTextureFormat(void* ptr, unsigned int texFormat);
void QOpenGLWidget_SetUpdateBehavior(void* ptr, long long updateBehavior);
unsigned int QOpenGLWidget_TextureFormat(void* ptr);
long long QOpenGLWidget_UpdateBehavior(void* ptr);
void QOpenGLWidget_DestroyQOpenGLWidget(void* ptr);
void QOpenGLWidget_DestroyQOpenGLWidgetDefault(void* ptr);
double QPanGesture_Acceleration(void* ptr);
void* QPanGesture_Delta(void* ptr);
void* QPanGesture_LastOffset(void* ptr);
void* QPanGesture_Offset(void* ptr);
void QPanGesture_SetAcceleration(void* ptr, double value);
void QPanGesture_SetLastOffset(void* ptr, void* value);
void QPanGesture_SetOffset(void* ptr, void* value);
void QPanGesture_DestroyQPanGesture(void* ptr);
void QPanGesture_DestroyQPanGestureDefault(void* ptr);
void* QPinchGesture_CenterPoint(void* ptr);
long long QPinchGesture_ChangeFlags(void* ptr);
void* QPinchGesture_LastCenterPoint(void* ptr);
double QPinchGesture_LastRotationAngle(void* ptr);
double QPinchGesture_LastScaleFactor(void* ptr);
double QPinchGesture_RotationAngle(void* ptr);
double QPinchGesture_ScaleFactor(void* ptr);
void QPinchGesture_SetCenterPoint(void* ptr, void* value);
void QPinchGesture_SetChangeFlags(void* ptr, long long value);
void QPinchGesture_SetLastCenterPoint(void* ptr, void* value);
void QPinchGesture_SetLastRotationAngle(void* ptr, double value);
void QPinchGesture_SetLastScaleFactor(void* ptr, double value);
void QPinchGesture_SetRotationAngle(void* ptr, double value);
void QPinchGesture_SetScaleFactor(void* ptr, double value);
void QPinchGesture_SetStartCenterPoint(void* ptr, void* value);
void QPinchGesture_SetTotalChangeFlags(void* ptr, long long value);
void QPinchGesture_SetTotalRotationAngle(void* ptr, double value);
void QPinchGesture_SetTotalScaleFactor(void* ptr, double value);
void* QPinchGesture_StartCenterPoint(void* ptr);
long long QPinchGesture_TotalChangeFlags(void* ptr);
double QPinchGesture_TotalRotationAngle(void* ptr);
double QPinchGesture_TotalScaleFactor(void* ptr);
void QPinchGesture_DestroyQPinchGesture(void* ptr);
void QPinchGesture_DestroyQPinchGestureDefault(void* ptr);
void* QPlainTextDocumentLayout_NewQPlainTextDocumentLayout(void* document);
void* QPlainTextDocumentLayout_BlockBoundingRect(void* ptr, void* block);
void* QPlainTextDocumentLayout_BlockBoundingRectDefault(void* ptr, void* block);
int QPlainTextDocumentLayout_CursorWidth(void* ptr);
void QPlainTextDocumentLayout_DocumentChanged(void* ptr, int from, int charsRemoved, int charsAdded);
void QPlainTextDocumentLayout_DocumentChangedDefault(void* ptr, int from, int charsRemoved, int charsAdded);
void* QPlainTextDocumentLayout_DocumentSize(void* ptr);
void* QPlainTextDocumentLayout_DocumentSizeDefault(void* ptr);
void QPlainTextDocumentLayout_EnsureBlockLayout(void* ptr, void* block);
void* QPlainTextDocumentLayout_FrameBoundingRect(void* ptr, void* vqt);
void* QPlainTextDocumentLayout_FrameBoundingRectDefault(void* ptr, void* vqt);
int QPlainTextDocumentLayout_HitTest(void* ptr, void* vqp, long long vqt);
int QPlainTextDocumentLayout_HitTestDefault(void* ptr, void* vqp, long long vqt);
int QPlainTextDocumentLayout_PageCount(void* ptr);
int QPlainTextDocumentLayout_PageCountDefault(void* ptr);
void QPlainTextDocumentLayout_RequestUpdate(void* ptr);
void QPlainTextDocumentLayout_SetCursorWidth(void* ptr, int width);
void QPlainTextDocumentLayout_DestroyQPlainTextDocumentLayout(void* ptr);
void QPlainTextDocumentLayout_DestroyQPlainTextDocumentLayoutDefault(void* ptr);
void* QPlainTextDocumentLayout___children_atList(void* ptr, int i);
void QPlainTextDocumentLayout___children_setList(void* ptr, void* i);
void* QPlainTextDocumentLayout___children_newList(void* ptr);
void* QPlainTextDocumentLayout___dynamicPropertyNames_atList(void* ptr, int i);
void QPlainTextDocumentLayout___dynamicPropertyNames_setList(void* ptr, void* i);
void* QPlainTextDocumentLayout___dynamicPropertyNames_newList(void* ptr);
void* QPlainTextDocumentLayout___findChildren_atList(void* ptr, int i);
void QPlainTextDocumentLayout___findChildren_setList(void* ptr, void* i);
void* QPlainTextDocumentLayout___findChildren_newList(void* ptr);
void* QPlainTextDocumentLayout___findChildren_atList3(void* ptr, int i);
void QPlainTextDocumentLayout___findChildren_setList3(void* ptr, void* i);
void* QPlainTextDocumentLayout___findChildren_newList3(void* ptr);
void QPlainTextDocumentLayout_DrawInlineObjectDefault(void* ptr, void* painter, void* rect, void* object, int posInDocument, void* format);
void QPlainTextDocumentLayout_PositionInlineObjectDefault(void* ptr, void* item, int posInDocument, void* format);
void QPlainTextDocumentLayout_ResizeInlineObjectDefault(void* ptr, void* item, int posInDocument, void* format);
void QPlainTextDocumentLayout_ChildEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QPlainTextDocumentLayout_CustomEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_DeleteLaterDefault(void* ptr);
void QPlainTextDocumentLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QPlainTextDocumentLayout_EventDefault(void* ptr, void* e);
char QPlainTextDocumentLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPlainTextDocumentLayout_MetaObjectDefault(void* ptr);
void QPlainTextDocumentLayout_TimerEventDefault(void* ptr, void* event);
void* QPlainTextEdit_NewQPlainTextEdit(void* parent);
void* QPlainTextEdit_NewQPlainTextEdit2(struct QtWidgets_PackedString text, void* parent);
struct QtWidgets_PackedString QPlainTextEdit_AnchorAt(void* ptr, void* pos);
void QPlainTextEdit_AppendHtml(void* ptr, struct QtWidgets_PackedString html);
void QPlainTextEdit_AppendHtmlDefault(void* ptr, struct QtWidgets_PackedString html);
void QPlainTextEdit_AppendPlainText(void* ptr, struct QtWidgets_PackedString text);
void QPlainTextEdit_AppendPlainTextDefault(void* ptr, struct QtWidgets_PackedString text);
char QPlainTextEdit_BackgroundVisible(void* ptr);
void* QPlainTextEdit_BlockBoundingGeometry(void* ptr, void* block);
void* QPlainTextEdit_BlockBoundingRect(void* ptr, void* block);
int QPlainTextEdit_BlockCount(void* ptr);
void QPlainTextEdit_ConnectBlockCountChanged(void* ptr, long long t);
void QPlainTextEdit_DisconnectBlockCountChanged(void* ptr);
void QPlainTextEdit_BlockCountChanged(void* ptr, int newBlockCount);
char QPlainTextEdit_CanInsertFromMimeData(void* ptr, void* source);
char QPlainTextEdit_CanInsertFromMimeDataDefault(void* ptr, void* source);
char QPlainTextEdit_CanPaste(void* ptr);
void QPlainTextEdit_CenterCursor(void* ptr);
void QPlainTextEdit_CenterCursorDefault(void* ptr);
char QPlainTextEdit_CenterOnScroll(void* ptr);
void QPlainTextEdit_Clear(void* ptr);
void QPlainTextEdit_ClearDefault(void* ptr);
void* QPlainTextEdit_ContentOffset(void* ptr);
void QPlainTextEdit_Copy(void* ptr);
void QPlainTextEdit_CopyDefault(void* ptr);
void QPlainTextEdit_ConnectCopyAvailable(void* ptr, long long t);
void QPlainTextEdit_DisconnectCopyAvailable(void* ptr);
void QPlainTextEdit_CopyAvailable(void* ptr, char yes);
void* QPlainTextEdit_CreateMimeDataFromSelection(void* ptr);
void* QPlainTextEdit_CreateMimeDataFromSelectionDefault(void* ptr);
void* QPlainTextEdit_CreateStandardContextMenu(void* ptr);
void* QPlainTextEdit_CreateStandardContextMenu2(void* ptr, void* position);
void* QPlainTextEdit_CurrentCharFormat(void* ptr);
void* QPlainTextEdit_CursorForPosition(void* ptr, void* pos);
void QPlainTextEdit_ConnectCursorPositionChanged(void* ptr, long long t);
void QPlainTextEdit_DisconnectCursorPositionChanged(void* ptr);
void QPlainTextEdit_CursorPositionChanged(void* ptr);
void* QPlainTextEdit_CursorRect(void* ptr, void* cursor);
void* QPlainTextEdit_CursorRect2(void* ptr);
int QPlainTextEdit_CursorWidth(void* ptr);
void QPlainTextEdit_Cut(void* ptr);
void QPlainTextEdit_CutDefault(void* ptr);
void* QPlainTextEdit_Document(void* ptr);
struct QtWidgets_PackedString QPlainTextEdit_DocumentTitle(void* ptr);
void QPlainTextEdit_EnsureCursorVisible(void* ptr);
char QPlainTextEdit_Find(void* ptr, struct QtWidgets_PackedString exp, long long options);
char QPlainTextEdit_Find2(void* ptr, void* exp, long long options);
char QPlainTextEdit_Find3(void* ptr, void* exp, long long options);
void* QPlainTextEdit_FirstVisibleBlock(void* ptr);
void QPlainTextEdit_InsertFromMimeData(void* ptr, void* source);
void QPlainTextEdit_InsertFromMimeDataDefault(void* ptr, void* source);
void QPlainTextEdit_InsertPlainText(void* ptr, struct QtWidgets_PackedString text);
void QPlainTextEdit_InsertPlainTextDefault(void* ptr, struct QtWidgets_PackedString text);
char QPlainTextEdit_IsReadOnly(void* ptr);
char QPlainTextEdit_IsUndoRedoEnabled(void* ptr);
long long QPlainTextEdit_LineWrapMode(void* ptr);
void* QPlainTextEdit_LoadResource(void* ptr, int ty, void* name);
void* QPlainTextEdit_LoadResourceDefault(void* ptr, int ty, void* name);
int QPlainTextEdit_MaximumBlockCount(void* ptr);
void QPlainTextEdit_MergeCurrentCharFormat(void* ptr, void* modifier);
void QPlainTextEdit_ConnectModificationChanged(void* ptr, long long t);
void QPlainTextEdit_DisconnectModificationChanged(void* ptr);
void QPlainTextEdit_ModificationChanged(void* ptr, char changed);
void QPlainTextEdit_MoveCursor(void* ptr, long long operation, long long mode);
char QPlainTextEdit_OverwriteMode(void* ptr);
void QPlainTextEdit_Paste(void* ptr);
void QPlainTextEdit_PasteDefault(void* ptr);
struct QtWidgets_PackedString QPlainTextEdit_PlaceholderText(void* ptr);
void QPlainTextEdit_Print(void* ptr, void* printer);
void QPlainTextEdit_Redo(void* ptr);
void QPlainTextEdit_RedoDefault(void* ptr);
void QPlainTextEdit_ConnectRedoAvailable(void* ptr, long long t);
void QPlainTextEdit_DisconnectRedoAvailable(void* ptr);
void QPlainTextEdit_RedoAvailable(void* ptr, char available);
void QPlainTextEdit_SelectAll(void* ptr);
void QPlainTextEdit_SelectAllDefault(void* ptr);
void QPlainTextEdit_ConnectSelectionChanged(void* ptr, long long t);
void QPlainTextEdit_DisconnectSelectionChanged(void* ptr);
void QPlainTextEdit_SelectionChanged(void* ptr);
void QPlainTextEdit_SetBackgroundVisible(void* ptr, char visible);
void QPlainTextEdit_SetCenterOnScroll(void* ptr, char enabled);
void QPlainTextEdit_SetCurrentCharFormat(void* ptr, void* format);
void QPlainTextEdit_SetCursorWidth(void* ptr, int width);
void QPlainTextEdit_SetDocument(void* ptr, void* document);
void QPlainTextEdit_SetDocumentTitle(void* ptr, struct QtWidgets_PackedString title);
void QPlainTextEdit_SetLineWrapMode(void* ptr, long long mode);
void QPlainTextEdit_SetMaximumBlockCount(void* ptr, int maximum);
void QPlainTextEdit_SetOverwriteMode(void* ptr, char overwrite);
void QPlainTextEdit_SetPlaceholderText(void* ptr, struct QtWidgets_PackedString placeholderText);
void QPlainTextEdit_SetPlainText(void* ptr, struct QtWidgets_PackedString text);
void QPlainTextEdit_SetPlainTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QPlainTextEdit_SetReadOnly(void* ptr, char ro);
void QPlainTextEdit_SetTabChangesFocus(void* ptr, char b);
void QPlainTextEdit_SetTabStopDistance(void* ptr, double distance);
void QPlainTextEdit_SetTabStopWidth(void* ptr, int width);
void QPlainTextEdit_SetTextCursor(void* ptr, void* cursor);
void QPlainTextEdit_SetTextInteractionFlags(void* ptr, long long flags);
void QPlainTextEdit_SetUndoRedoEnabled(void* ptr, char enable);
void QPlainTextEdit_SetWordWrapMode(void* ptr, long long policy);
char QPlainTextEdit_TabChangesFocus(void* ptr);
double QPlainTextEdit_TabStopDistance(void* ptr);
int QPlainTextEdit_TabStopWidth(void* ptr);
void QPlainTextEdit_ConnectTextChanged(void* ptr, long long t);
void QPlainTextEdit_DisconnectTextChanged(void* ptr);
void QPlainTextEdit_TextChanged(void* ptr);
void* QPlainTextEdit_TextCursor(void* ptr);
long long QPlainTextEdit_TextInteractionFlags(void* ptr);
struct QtWidgets_PackedString QPlainTextEdit_ToPlainText(void* ptr);
void QPlainTextEdit_Undo(void* ptr);
void QPlainTextEdit_UndoDefault(void* ptr);
void QPlainTextEdit_ConnectUndoAvailable(void* ptr, long long t);
void QPlainTextEdit_DisconnectUndoAvailable(void* ptr);
void QPlainTextEdit_UndoAvailable(void* ptr, char available);
void QPlainTextEdit_ConnectUpdateRequest(void* ptr, long long t);
void QPlainTextEdit_DisconnectUpdateRequest(void* ptr);
void QPlainTextEdit_UpdateRequest(void* ptr, void* rect, int dy);
long long QPlainTextEdit_WordWrapMode(void* ptr);
void QPlainTextEdit_ZoomIn(void* ptr, int ran);
void QPlainTextEdit_ZoomInDefault(void* ptr, int ran);
void QPlainTextEdit_ZoomOut(void* ptr, int ran);
void QPlainTextEdit_ZoomOutDefault(void* ptr, int ran);
void QPlainTextEdit_DestroyQPlainTextEdit(void* ptr);
void QPlainTextEdit_DestroyQPlainTextEditDefault(void* ptr);
void* QProgressBar_NewQProgressBar(void* parent);
long long QProgressBar_Alignment(void* ptr);
struct QtWidgets_PackedString QProgressBar_Format(void* ptr);
void QProgressBar_InitStyleOption(void* ptr, void* option);
char QProgressBar_InvertedAppearance(void* ptr);
char QProgressBar_IsTextVisible(void* ptr);
int QProgressBar_Maximum(void* ptr);
int QProgressBar_Minimum(void* ptr);
long long QProgressBar_Orientation(void* ptr);
void QProgressBar_Reset(void* ptr);
void QProgressBar_ResetDefault(void* ptr);
void QProgressBar_ResetFormat(void* ptr);
void QProgressBar_SetAlignment(void* ptr, long long alignment);
void QProgressBar_SetFormat(void* ptr, struct QtWidgets_PackedString format);
void QProgressBar_SetInvertedAppearance(void* ptr, char invert);
void QProgressBar_SetMaximum(void* ptr, int maximum);
void QProgressBar_SetMaximumDefault(void* ptr, int maximum);
void QProgressBar_SetMinimum(void* ptr, int minimum);
void QProgressBar_SetMinimumDefault(void* ptr, int minimum);
void QProgressBar_SetOrientation(void* ptr, long long vqt);
void QProgressBar_SetOrientationDefault(void* ptr, long long vqt);
void QProgressBar_SetRange(void* ptr, int minimum, int maximum);
void QProgressBar_SetRangeDefault(void* ptr, int minimum, int maximum);
void QProgressBar_SetTextDirection(void* ptr, long long textDirection);
void QProgressBar_SetTextVisible(void* ptr, char visible);
void QProgressBar_SetValue(void* ptr, int value);
void QProgressBar_SetValueDefault(void* ptr, int value);
struct QtWidgets_PackedString QProgressBar_Text(void* ptr);
struct QtWidgets_PackedString QProgressBar_TextDefault(void* ptr);
long long QProgressBar_TextDirection(void* ptr);
int QProgressBar_Value(void* ptr);
void QProgressBar_ConnectValueChanged(void* ptr, long long t);
void QProgressBar_DisconnectValueChanged(void* ptr);
void QProgressBar_ValueChanged(void* ptr, int value);
void QProgressBar_DestroyQProgressBar(void* ptr);
void QProgressBar_DestroyQProgressBarDefault(void* ptr);
void* QProgressDialog_NewQProgressDialog(void* parent, long long ff);
void* QProgressDialog_NewQProgressDialog2(struct QtWidgets_PackedString labelText, struct QtWidgets_PackedString cancelButtonText, int minimum, int maximum, void* parent, long long ff);
char QProgressDialog_AutoClose(void* ptr);
char QProgressDialog_AutoReset(void* ptr);
void QProgressDialog_Cancel(void* ptr);
void QProgressDialog_CancelDefault(void* ptr);
void QProgressDialog_ConnectCanceled(void* ptr, long long t);
void QProgressDialog_DisconnectCanceled(void* ptr);
void QProgressDialog_Canceled(void* ptr);
void QProgressDialog_ForceShow(void* ptr);
void QProgressDialog_ForceShowDefault(void* ptr);
struct QtWidgets_PackedString QProgressDialog_LabelText(void* ptr);
int QProgressDialog_Maximum(void* ptr);
int QProgressDialog_Minimum(void* ptr);
int QProgressDialog_MinimumDuration(void* ptr);
void QProgressDialog_Open(void* ptr, void* receiver, char* member);
void QProgressDialog_Reset(void* ptr);
void QProgressDialog_ResetDefault(void* ptr);
void QProgressDialog_SetAutoClose(void* ptr, char close);
void QProgressDialog_SetAutoReset(void* ptr, char reset);
void QProgressDialog_SetBar(void* ptr, void* bar);
void QProgressDialog_SetCancelButton(void* ptr, void* cancelButton);
void QProgressDialog_SetCancelButtonText(void* ptr, struct QtWidgets_PackedString cancelButtonText);
void QProgressDialog_SetCancelButtonTextDefault(void* ptr, struct QtWidgets_PackedString cancelButtonText);
void QProgressDialog_SetLabel(void* ptr, void* label);
void QProgressDialog_SetLabelText(void* ptr, struct QtWidgets_PackedString text);
void QProgressDialog_SetLabelTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QProgressDialog_SetMaximum(void* ptr, int maximum);
void QProgressDialog_SetMaximumDefault(void* ptr, int maximum);
void QProgressDialog_SetMinimum(void* ptr, int minimum);
void QProgressDialog_SetMinimumDefault(void* ptr, int minimum);
void QProgressDialog_SetMinimumDuration(void* ptr, int ms);
void QProgressDialog_SetMinimumDurationDefault(void* ptr, int ms);
void QProgressDialog_SetRange(void* ptr, int minimum, int maximum);
void QProgressDialog_SetRangeDefault(void* ptr, int minimum, int maximum);
void QProgressDialog_SetValue(void* ptr, int progress);
void QProgressDialog_SetValueDefault(void* ptr, int progress);
int QProgressDialog_Value(void* ptr);
char QProgressDialog_WasCanceled(void* ptr);
void QProgressDialog_DestroyQProgressDialog(void* ptr);
void QProgressDialog_DestroyQProgressDialogDefault(void* ptr);
void* QProxyStyle_NewQProxyStyle(void* style);
void* QProxyStyle_NewQProxyStyle2(struct QtWidgets_PackedString key);
void* QProxyStyle_BaseStyle(void* ptr);
void QProxyStyle_SetBaseStyle(void* ptr, void* style);
void* QProxyStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget);
void* QProxyStyle_StandardIconDefault(void* ptr, long long standardIcon, void* option, void* widget);
void QProxyStyle_DestroyQProxyStyle(void* ptr);
void QProxyStyle_DestroyQProxyStyleDefault(void* ptr);
void* QPushButton_NewQPushButton(void* parent);
void* QPushButton_NewQPushButton2(struct QtWidgets_PackedString text, void* parent);
void* QPushButton_NewQPushButton3(void* icon, struct QtWidgets_PackedString text, void* parent);
char QPushButton_AutoDefault(void* ptr);
void QPushButton_InitStyleOption(void* ptr, void* option);
char QPushButton_IsDefault(void* ptr);
char QPushButton_IsFlat(void* ptr);
void* QPushButton_Menu(void* ptr);
void QPushButton_PaintEvent(void* ptr, void* vqp);
void QPushButton_PaintEventDefault(void* ptr, void* vqp);
void QPushButton_SetAutoDefault(void* ptr, char vbo);
void QPushButton_SetDefault(void* ptr, char vbo);
void QPushButton_SetFlat(void* ptr, char vbo);
void QPushButton_SetMenu(void* ptr, void* menu);
void QPushButton_ShowMenu(void* ptr);
void QPushButton_ShowMenuDefault(void* ptr);
void QPushButton_DestroyQPushButton(void* ptr);
void QPushButton_DestroyQPushButtonDefault(void* ptr);
void* QRadioButton_NewQRadioButton(void* parent);
void* QRadioButton_NewQRadioButton2(struct QtWidgets_PackedString text, void* parent);
void QRadioButton_InitStyleOption(void* ptr, void* option);
void QRadioButton_PaintEvent(void* ptr, void* vqp);
void QRadioButton_PaintEventDefault(void* ptr, void* vqp);
void QRadioButton_DestroyQRadioButton(void* ptr);
void QRadioButton_DestroyQRadioButtonDefault(void* ptr);
void* QRubberBand_NewQRubberBand(long long s, void* p);
void QRubberBand_InitStyleOption(void* ptr, void* option);
long long QRubberBand_Shape(void* ptr);
void QRubberBand_DestroyQRubberBand(void* ptr);
void QRubberBand_DestroyQRubberBandDefault(void* ptr);
void* QScrollArea_NewQScrollArea(void* parent);
long long QScrollArea_Alignment(void* ptr);
void QScrollArea_EnsureVisible(void* ptr, int x, int y, int xmargin, int ymargin);
void QScrollArea_EnsureWidgetVisible(void* ptr, void* childWidget, int xmargin, int ymargin);
void QScrollArea_SetAlignment(void* ptr, long long vqt);
void QScrollArea_SetWidget(void* ptr, void* widget);
void QScrollArea_SetWidgetResizable(void* ptr, char resizable);
void* QScrollArea_TakeWidget(void* ptr);
void* QScrollArea_Widget(void* ptr);
char QScrollArea_WidgetResizable(void* ptr);
void QScrollArea_DestroyQScrollArea(void* ptr);
void QScrollArea_DestroyQScrollAreaDefault(void* ptr);
void* QScrollBar_NewQScrollBar(void* parent);
void* QScrollBar_NewQScrollBar2(long long orientation, void* parent);
void QScrollBar_InitStyleOption(void* ptr, void* option);
void QScrollBar_DestroyQScrollBar(void* ptr);
void QScrollBar_DestroyQScrollBarDefault(void* ptr);
struct QtWidgets_PackedList QScroller_QScroller_ActiveScrollers();
void QScroller_EnsureVisible(void* ptr, void* rect, double xmargin, double ymargin);
void QScroller_EnsureVisibleDefault(void* ptr, void* rect, double xmargin, double ymargin);
void QScroller_EnsureVisible2(void* ptr, void* rect, double xmargin, double ymargin, int scrollTime);
void QScroller_EnsureVisible2Default(void* ptr, void* rect, double xmargin, double ymargin, int scrollTime);
void* QScroller_FinalPosition(void* ptr);
long long QScroller_QScroller_GrabGesture(void* target, long long scrollGestureType);
long long QScroller_QScroller_GrabbedGesture(void* target);
char QScroller_HandleInput(void* ptr, long long input, void* position, long long timestamp);
char QScroller_QScroller_HasScroller(void* target);
void* QScroller_PixelPerMeter(void* ptr);
void QScroller_ResendPrepareEvent(void* ptr);
void QScroller_ResendPrepareEventDefault(void* ptr);
void QScroller_ScrollTo(void* ptr, void* pos);
void QScroller_ScrollToDefault(void* ptr, void* pos);
void QScroller_ScrollTo2(void* ptr, void* pos, int scrollTime);
void QScroller_ScrollTo2Default(void* ptr, void* pos, int scrollTime);
void* QScroller_QScroller_Scroller(void* target);
void* QScroller_QScroller_Scroller2(void* target);
void* QScroller_ScrollerProperties(void* ptr);
void QScroller_ConnectScrollerPropertiesChanged(void* ptr, long long t);
void QScroller_DisconnectScrollerPropertiesChanged(void* ptr);
void QScroller_ScrollerPropertiesChanged(void* ptr, void* newProperties);
void QScroller_SetScrollerProperties(void* ptr, void* prop);
void QScroller_SetScrollerPropertiesDefault(void* ptr, void* prop);
void QScroller_SetSnapPositionsX(void* ptr, void* positions);
void QScroller_SetSnapPositionsX2(void* ptr, double first, double interval);
void QScroller_SetSnapPositionsY(void* ptr, void* positions);
void QScroller_SetSnapPositionsY2(void* ptr, double first, double interval);
long long QScroller_State(void* ptr);
void QScroller_ConnectStateChanged(void* ptr, long long t);
void QScroller_DisconnectStateChanged(void* ptr);
void QScroller_StateChanged(void* ptr, long long newState);
void QScroller_Stop(void* ptr);
void* QScroller_Target(void* ptr);
void QScroller_QScroller_UngrabGesture(void* target);
void* QScroller_Velocity(void* ptr);
void* QScroller___activeScrollers_atList(void* ptr, int i);
void QScroller___activeScrollers_setList(void* ptr, void* i);
void* QScroller___activeScrollers_newList(void* ptr);
double QScroller___setSnapPositionsX_positions_atList(void* ptr, int i);
void QScroller___setSnapPositionsX_positions_setList(void* ptr, double i);
void* QScroller___setSnapPositionsX_positions_newList(void* ptr);
double QScroller___setSnapPositionsY_positions_atList(void* ptr, int i);
void QScroller___setSnapPositionsY_positions_setList(void* ptr, double i);
void* QScroller___setSnapPositionsY_positions_newList(void* ptr);
void* QScroller___children_atList(void* ptr, int i);
void QScroller___children_setList(void* ptr, void* i);
void* QScroller___children_newList(void* ptr);
void* QScroller___dynamicPropertyNames_atList(void* ptr, int i);
void QScroller___dynamicPropertyNames_setList(void* ptr, void* i);
void* QScroller___dynamicPropertyNames_newList(void* ptr);
void* QScroller___findChildren_atList(void* ptr, int i);
void QScroller___findChildren_setList(void* ptr, void* i);
void* QScroller___findChildren_newList(void* ptr);
void* QScroller___findChildren_atList3(void* ptr, int i);
void QScroller___findChildren_setList3(void* ptr, void* i);
void* QScroller___findChildren_newList3(void* ptr);
void QScroller_ChildEventDefault(void* ptr, void* event);
void QScroller_ConnectNotifyDefault(void* ptr, void* sign);
void QScroller_CustomEventDefault(void* ptr, void* event);
void QScroller_DeleteLaterDefault(void* ptr);
void QScroller_DisconnectNotifyDefault(void* ptr, void* sign);
char QScroller_EventDefault(void* ptr, void* e);
char QScroller_EventFilterDefault(void* ptr, void* watched, void* event);
void* QScroller_MetaObjectDefault(void* ptr);
void QScroller_TimerEventDefault(void* ptr, void* event);
void* QScrollerProperties_NewQScrollerProperties();
void* QScrollerProperties_NewQScrollerProperties2(void* sp);
void* QScrollerProperties_ScrollMetric(void* ptr, long long metric);
void QScrollerProperties_QScrollerProperties_SetDefaultScrollerProperties(void* sp);
void QScrollerProperties_SetScrollMetric(void* ptr, long long metric, void* value);
void QScrollerProperties_QScrollerProperties_UnsetDefaultScrollerProperties();
void QScrollerProperties_DestroyQScrollerProperties(void* ptr);
void QScrollerProperties_DestroyQScrollerPropertiesDefault(void* ptr);
void* QShortcut_NewQShortcut(void* parent);
void* QShortcut_NewQShortcut2(void* key, void* parent, char* member, char* ambiguousMember, long long shortcutContext);
void QShortcut_ConnectActivated(void* ptr, long long t);
void QShortcut_DisconnectActivated(void* ptr);
void QShortcut_Activated(void* ptr);
void QShortcut_ConnectActivatedAmbiguously(void* ptr, long long t);
void QShortcut_DisconnectActivatedAmbiguously(void* ptr);
void QShortcut_ActivatedAmbiguously(void* ptr);
char QShortcut_AutoRepeat(void* ptr);
long long QShortcut_Context(void* ptr);
int QShortcut_Id(void* ptr);
char QShortcut_IsEnabled(void* ptr);
void* QShortcut_Key(void* ptr);
void* QShortcut_ParentWidget(void* ptr);
void QShortcut_SetAutoRepeat(void* ptr, char on);
void QShortcut_SetContext(void* ptr, long long context);
void QShortcut_SetEnabled(void* ptr, char enable);
void QShortcut_SetKey(void* ptr, void* key);
void QShortcut_SetWhatsThis(void* ptr, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QShortcut_WhatsThis(void* ptr);
void QShortcut_DestroyQShortcut(void* ptr);
void QShortcut_DestroyQShortcutDefault(void* ptr);
void* QShortcut___children_atList(void* ptr, int i);
void QShortcut___children_setList(void* ptr, void* i);
void* QShortcut___children_newList(void* ptr);
void* QShortcut___dynamicPropertyNames_atList(void* ptr, int i);
void QShortcut___dynamicPropertyNames_setList(void* ptr, void* i);
void* QShortcut___dynamicPropertyNames_newList(void* ptr);
void* QShortcut___findChildren_atList(void* ptr, int i);
void QShortcut___findChildren_setList(void* ptr, void* i);
void* QShortcut___findChildren_newList(void* ptr);
void* QShortcut___findChildren_atList3(void* ptr, int i);
void QShortcut___findChildren_setList3(void* ptr, void* i);
void* QShortcut___findChildren_newList3(void* ptr);
void QShortcut_ChildEventDefault(void* ptr, void* event);
void QShortcut_ConnectNotifyDefault(void* ptr, void* sign);
void QShortcut_CustomEventDefault(void* ptr, void* event);
void QShortcut_DeleteLaterDefault(void* ptr);
void QShortcut_DisconnectNotifyDefault(void* ptr, void* sign);
char QShortcut_EventDefault(void* ptr, void* e);
char QShortcut_EventFilterDefault(void* ptr, void* watched, void* event);
void* QShortcut_MetaObjectDefault(void* ptr);
void QShortcut_TimerEventDefault(void* ptr, void* event);
void* QSizeGrip_NewQSizeGrip(void* parent);
void QSizeGrip_SetVisible(void* ptr, char visible);
void QSizeGrip_SetVisibleDefault(void* ptr, char visible);
void QSizeGrip_DestroyQSizeGrip(void* ptr);
void QSizeGrip_DestroyQSizeGripDefault(void* ptr);
void* QSizePolicy_NewQSizePolicy();
void* QSizePolicy_NewQSizePolicy2(long long horizontal, long long vertical, long long ty);
long long QSizePolicy_ControlType(void* ptr);
long long QSizePolicy_ExpandingDirections(void* ptr);
char QSizePolicy_HasHeightForWidth(void* ptr);
char QSizePolicy_HasWidthForHeight(void* ptr);
long long QSizePolicy_HorizontalPolicy(void* ptr);
int QSizePolicy_HorizontalStretch(void* ptr);
char QSizePolicy_RetainSizeWhenHidden(void* ptr);
void QSizePolicy_SetControlType(void* ptr, long long ty);
void QSizePolicy_SetHeightForWidth(void* ptr, char dependent);
void QSizePolicy_SetHorizontalPolicy(void* ptr, long long policy);
void QSizePolicy_SetHorizontalStretch(void* ptr, int stretchFactor);
void QSizePolicy_SetRetainSizeWhenHidden(void* ptr, char retainSize);
void QSizePolicy_SetVerticalPolicy(void* ptr, long long policy);
void QSizePolicy_SetVerticalStretch(void* ptr, int stretchFactor);
void QSizePolicy_SetWidthForHeight(void* ptr, char dependent);
void QSizePolicy_Transpose(void* ptr);
void* QSizePolicy_Transposed(void* ptr);
long long QSizePolicy_VerticalPolicy(void* ptr);
int QSizePolicy_VerticalStretch(void* ptr);
void* QSlider_NewQSlider(void* parent);
void* QSlider_NewQSlider2(long long orientation, void* parent);
void QSlider_InitStyleOption(void* ptr, void* option);
void QSlider_SetTickInterval(void* ptr, int ti);
void QSlider_SetTickPosition(void* ptr, long long position);
int QSlider_TickInterval(void* ptr);
long long QSlider_TickPosition(void* ptr);
void QSlider_DestroyQSlider(void* ptr);
void QSlider_DestroyQSliderDefault(void* ptr);
void* QSpacerItem_NewQSpacerItem(int w, int h, long long hPolicy, long long vPolicy);
void QSpacerItem_ChangeSize(void* ptr, int w, int h, long long hPolicy, long long vPolicy);
long long QSpacerItem_ExpandingDirections(void* ptr);
long long QSpacerItem_ExpandingDirectionsDefault(void* ptr);
void* QSpacerItem_Geometry(void* ptr);
void* QSpacerItem_GeometryDefault(void* ptr);
char QSpacerItem_IsEmpty(void* ptr);
char QSpacerItem_IsEmptyDefault(void* ptr);
void* QSpacerItem_MaximumSize(void* ptr);
void* QSpacerItem_MaximumSizeDefault(void* ptr);
void* QSpacerItem_MinimumSize(void* ptr);
void* QSpacerItem_MinimumSizeDefault(void* ptr);
void QSpacerItem_SetGeometry(void* ptr, void* r);
void QSpacerItem_SetGeometryDefault(void* ptr, void* r);
void* QSpacerItem_SizeHint(void* ptr);
void* QSpacerItem_SizeHintDefault(void* ptr);
void* QSpacerItem_SizePolicy(void* ptr);
void QSpacerItem_DestroyQSpacerItem(void* ptr);
void QSpacerItem_DestroyQSpacerItemDefault(void* ptr);
void* QSpinBox_NewQSpinBox(void* parent);
struct QtWidgets_PackedString QSpinBox_CleanText(void* ptr);
int QSpinBox_DisplayIntegerBase(void* ptr);
int QSpinBox_Maximum(void* ptr);
int QSpinBox_Minimum(void* ptr);
struct QtWidgets_PackedString QSpinBox_Prefix(void* ptr);
void QSpinBox_SetDisplayIntegerBase(void* ptr, int base);
void QSpinBox_SetMaximum(void* ptr, int max);
void QSpinBox_SetMinimum(void* ptr, int min);
void QSpinBox_SetPrefix(void* ptr, struct QtWidgets_PackedString prefix);
void QSpinBox_SetRange(void* ptr, int minimum, int maximum);
void QSpinBox_SetSingleStep(void* ptr, int val);
void QSpinBox_SetStepType(void* ptr, long long stepType);
void QSpinBox_SetSuffix(void* ptr, struct QtWidgets_PackedString suffix);
void QSpinBox_SetValue(void* ptr, int val);
void QSpinBox_SetValueDefault(void* ptr, int val);
int QSpinBox_SingleStep(void* ptr);
long long QSpinBox_StepType(void* ptr);
struct QtWidgets_PackedString QSpinBox_Suffix(void* ptr);
void QSpinBox_ConnectTextChanged(void* ptr, long long t);
void QSpinBox_DisconnectTextChanged(void* ptr);
void QSpinBox_TextChanged(void* ptr, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QSpinBox_TextFromValue(void* ptr, int value);
struct QtWidgets_PackedString QSpinBox_TextFromValueDefault(void* ptr, int value);
int QSpinBox_Value(void* ptr);
void QSpinBox_ConnectValueChanged(void* ptr, long long t);
void QSpinBox_DisconnectValueChanged(void* ptr);
void QSpinBox_ValueChanged(void* ptr, int i);
int QSpinBox_ValueFromText(void* ptr, struct QtWidgets_PackedString text);
int QSpinBox_ValueFromTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QSpinBox_DestroyQSpinBox(void* ptr);
void QSpinBox_DestroyQSpinBoxDefault(void* ptr);
void* QSplashScreen_NewQSplashScreen(void* pixmap, long long ff);
void* QSplashScreen_NewQSplashScreen2(void* screen, void* pixmap, long long ff);
void QSplashScreen_ClearMessage(void* ptr);
void QSplashScreen_ClearMessageDefault(void* ptr);
void QSplashScreen_DrawContents(void* ptr, void* painter);
void QSplashScreen_DrawContentsDefault(void* ptr, void* painter);
void QSplashScreen_Finish(void* ptr, void* mainWin);
struct QtWidgets_PackedString QSplashScreen_Message(void* ptr);
void QSplashScreen_ConnectMessageChanged(void* ptr, long long t);
void QSplashScreen_DisconnectMessageChanged(void* ptr);
void QSplashScreen_MessageChanged(void* ptr, struct QtWidgets_PackedString message);
void* QSplashScreen_Pixmap(void* ptr);
void QSplashScreen_Repaint(void* ptr);
void QSplashScreen_SetPixmap(void* ptr, void* pixmap);
void QSplashScreen_ShowMessage(void* ptr, struct QtWidgets_PackedString message, int alignment, void* color);
void QSplashScreen_ShowMessageDefault(void* ptr, struct QtWidgets_PackedString message, int alignment, void* color);
void QSplashScreen_DestroyQSplashScreen(void* ptr);
void QSplashScreen_DestroyQSplashScreenDefault(void* ptr);
void* QSplitter_NewQSplitter(void* parent);
void* QSplitter_NewQSplitter2(long long orientation, void* parent);
void QSplitter_AddWidget(void* ptr, void* widget);
char QSplitter_ChildrenCollapsible(void* ptr);
int QSplitter_ClosestLegalPosition(void* ptr, int pos, int index);
int QSplitter_Count(void* ptr);
void* QSplitter_CreateHandle(void* ptr);
void* QSplitter_CreateHandleDefault(void* ptr);
void QSplitter_GetRange(void* ptr, int index, int min, int max);
void* QSplitter_Handle(void* ptr, int index);
int QSplitter_HandleWidth(void* ptr);
int QSplitter_IndexOf(void* ptr, void* widget);
void QSplitter_InsertWidget(void* ptr, int index, void* widget);
char QSplitter_IsCollapsible(void* ptr, int index);
void QSplitter_MoveSplitter(void* ptr, int pos, int index);
char QSplitter_OpaqueResize(void* ptr);
long long QSplitter_Orientation(void* ptr);
void QSplitter_Refresh(void* ptr);
void* QSplitter_ReplaceWidget(void* ptr, int index, void* widget);
char QSplitter_RestoreState(void* ptr, void* state);
void* QSplitter_SaveState(void* ptr);
void QSplitter_SetChildrenCollapsible(void* ptr, char vbo);
void QSplitter_SetCollapsible(void* ptr, int index, char collapse);
void QSplitter_SetHandleWidth(void* ptr, int vin);
void QSplitter_SetOpaqueResize(void* ptr, char opaque);
void QSplitter_SetOrientation(void* ptr, long long vqt);
void QSplitter_SetRubberBand(void* ptr, int pos);
void QSplitter_SetSizes(void* ptr, void* list);
void QSplitter_SetStretchFactor(void* ptr, int index, int stretch);
struct QtWidgets_PackedList QSplitter_Sizes(void* ptr);
void QSplitter_ConnectSplitterMoved(void* ptr, long long t);
void QSplitter_DisconnectSplitterMoved(void* ptr);
void QSplitter_SplitterMoved(void* ptr, int pos, int index);
void* QSplitter_Widget(void* ptr, int index);
void QSplitter_DestroyQSplitter(void* ptr);
void QSplitter_DestroyQSplitterDefault(void* ptr);
int QSplitter___setSizes_list_atList(void* ptr, int i);
void QSplitter___setSizes_list_setList(void* ptr, int i);
void* QSplitter___setSizes_list_newList(void* ptr);
int QSplitter___sizes_atList(void* ptr, int i);
void QSplitter___sizes_setList(void* ptr, int i);
void* QSplitter___sizes_newList(void* ptr);
void* QSplitterHandle_NewQSplitterHandle(long long orientation, void* parent);
int QSplitterHandle_ClosestLegalPosition(void* ptr, int pos);
void QSplitterHandle_MoveSplitter(void* ptr, int pos);
char QSplitterHandle_OpaqueResize(void* ptr);
long long QSplitterHandle_Orientation(void* ptr);
void QSplitterHandle_SetOrientation(void* ptr, long long orientation);
void* QSplitterHandle_Splitter(void* ptr);
void QSplitterHandle_DestroyQSplitterHandle(void* ptr);
void QSplitterHandle_DestroyQSplitterHandleDefault(void* ptr);
void* QStackedLayout_NewQStackedLayout();
void* QStackedLayout_NewQStackedLayout2(void* parent);
void* QStackedLayout_NewQStackedLayout3(void* parentLayout);
void QStackedLayout_AddItem(void* ptr, void* item);
void QStackedLayout_AddItemDefault(void* ptr, void* item);
int QStackedLayout_AddWidget(void* ptr, void* widget);
int QStackedLayout_Count(void* ptr);
int QStackedLayout_CountDefault(void* ptr);
void QStackedLayout_ConnectCurrentChanged(void* ptr, long long t);
void QStackedLayout_DisconnectCurrentChanged(void* ptr);
void QStackedLayout_CurrentChanged(void* ptr, int index);
int QStackedLayout_CurrentIndex(void* ptr);
void* QStackedLayout_CurrentWidget(void* ptr);
int QStackedLayout_InsertWidget(void* ptr, int index, void* widget);
void* QStackedLayout_ItemAt(void* ptr, int index);
void* QStackedLayout_ItemAtDefault(void* ptr, int index);
void QStackedLayout_SetCurrentIndex(void* ptr, int index);
void QStackedLayout_SetCurrentIndexDefault(void* ptr, int index);
void QStackedLayout_SetCurrentWidget(void* ptr, void* widget);
void QStackedLayout_SetCurrentWidgetDefault(void* ptr, void* widget);
void QStackedLayout_SetStackingMode(void* ptr, long long stackingMode);
void* QStackedLayout_SizeHint(void* ptr);
void* QStackedLayout_SizeHintDefault(void* ptr);
long long QStackedLayout_StackingMode(void* ptr);
void* QStackedLayout_TakeAt(void* ptr, int index);
void* QStackedLayout_TakeAtDefault(void* ptr, int index);
void* QStackedLayout_Widget(void* ptr, int index);
void QStackedLayout_ConnectWidgetRemoved(void* ptr, long long t);
void QStackedLayout_DisconnectWidgetRemoved(void* ptr);
void QStackedLayout_WidgetRemoved(void* ptr, int index);
void QStackedLayout_DestroyQStackedLayout(void* ptr);
void QStackedLayout_DestroyQStackedLayoutDefault(void* ptr);
void* QStackedWidget_NewQStackedWidget(void* parent);
int QStackedWidget_AddWidget(void* ptr, void* widget);
int QStackedWidget_Count(void* ptr);
void QStackedWidget_ConnectCurrentChanged(void* ptr, long long t);
void QStackedWidget_DisconnectCurrentChanged(void* ptr);
void QStackedWidget_CurrentChanged(void* ptr, int index);
int QStackedWidget_CurrentIndex(void* ptr);
void* QStackedWidget_CurrentWidget(void* ptr);
int QStackedWidget_IndexOf(void* ptr, void* widget);
int QStackedWidget_InsertWidget(void* ptr, int index, void* widget);
void QStackedWidget_RemoveWidget(void* ptr, void* widget);
void QStackedWidget_SetCurrentIndex(void* ptr, int index);
void QStackedWidget_SetCurrentIndexDefault(void* ptr, int index);
void QStackedWidget_SetCurrentWidget(void* ptr, void* widget);
void QStackedWidget_SetCurrentWidgetDefault(void* ptr, void* widget);
void* QStackedWidget_Widget(void* ptr, int index);
void QStackedWidget_ConnectWidgetRemoved(void* ptr, long long t);
void QStackedWidget_DisconnectWidgetRemoved(void* ptr);
void QStackedWidget_WidgetRemoved(void* ptr, int index);
void QStackedWidget_DestroyQStackedWidget(void* ptr);
void QStackedWidget_DestroyQStackedWidgetDefault(void* ptr);
void* QStatusBar_NewQStatusBar(void* parent);
void QStatusBar_AddPermanentWidget(void* ptr, void* widget, int stretch);
void QStatusBar_AddWidget(void* ptr, void* widget, int stretch);
void QStatusBar_ClearMessage(void* ptr);
void QStatusBar_ClearMessageDefault(void* ptr);
struct QtWidgets_PackedString QStatusBar_CurrentMessage(void* ptr);
void QStatusBar_HideOrShow(void* ptr);
int QStatusBar_InsertPermanentWidget(void* ptr, int index, void* widget, int stretch);
int QStatusBar_InsertWidget(void* ptr, int index, void* widget, int stretch);
char QStatusBar_IsSizeGripEnabled(void* ptr);
void QStatusBar_ConnectMessageChanged(void* ptr, long long t);
void QStatusBar_DisconnectMessageChanged(void* ptr);
void QStatusBar_MessageChanged(void* ptr, struct QtWidgets_PackedString message);
void QStatusBar_Reformat(void* ptr);
void QStatusBar_RemoveWidget(void* ptr, void* widget);
void QStatusBar_SetSizeGripEnabled(void* ptr, char vbo);
void QStatusBar_ShowMessage(void* ptr, struct QtWidgets_PackedString message, int timeout);
void QStatusBar_ShowMessageDefault(void* ptr, struct QtWidgets_PackedString message, int timeout);
void QStatusBar_DestroyQStatusBar(void* ptr);
void QStatusBar_DestroyQStatusBarDefault(void* ptr);
int QStyle_PM_ToolBarIconSize_Type();
int QStyle_SE_LabelLayoutItem_Type();
void* QStyle_NewQStyle2();
void* QStyle_QStyle_AlignedRect(long long direction, long long alignment, void* size, void* rectangle);
int QStyle_CombinedLayoutSpacing(void* ptr, long long controls1, long long controls2, long long orientation, void* option, void* widget);
void QStyle_DrawComplexControl(void* ptr, long long control, void* option, void* painter, void* widget);
void QStyle_DrawControl(void* ptr, long long element, void* option, void* painter, void* widget);
void QStyle_DrawItemPixmap(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap);
void QStyle_DrawItemPixmapDefault(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap);
void QStyle_DrawItemText(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, struct QtWidgets_PackedString text, long long textRole);
void QStyle_DrawItemTextDefault(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, struct QtWidgets_PackedString text, long long textRole);
void QStyle_DrawPrimitive(void* ptr, long long element, void* option, void* painter, void* widget);
void* QStyle_GeneratedIconPixmap(void* ptr, long long iconMode, void* pixmap, void* option);
long long QStyle_HitTestComplexControl(void* ptr, long long control, void* option, void* position, void* widget);
void* QStyle_ItemPixmapRect(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QStyle_ItemPixmapRectDefault(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QStyle_ItemTextRect(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, struct QtWidgets_PackedString text);
void* QStyle_ItemTextRectDefault(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, struct QtWidgets_PackedString text);
int QStyle_LayoutSpacing(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QStyle_PixelMetric(void* ptr, long long metric, void* option, void* widget);
void QStyle_Polish(void* ptr, void* widget);
void QStyle_PolishDefault(void* ptr, void* widget);
void QStyle_Polish2(void* ptr, void* application);
void QStyle_Polish2Default(void* ptr, void* application);
void QStyle_Polish3(void* ptr, void* palette);
void QStyle_Polish3Default(void* ptr, void* palette);
void* QStyle_Proxy(void* ptr);
void* QStyle_SizeFromContents(void* ptr, long long ty, void* option, void* contentsSize, void* widget);
int QStyle_QStyle_SliderPositionFromValue(int min, int max, int logicalValue, int span, char upsideDown);
int QStyle_QStyle_SliderValueFromPosition(int min, int max, int position, int span, char upsideDown);
void* QStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget);
void* QStyle_StandardPalette(void* ptr);
void* QStyle_StandardPaletteDefault(void* ptr);
int QStyle_StyleHint(void* ptr, long long hint, void* option, void* widget, void* returnData);
void* QStyle_SubControlRect(void* ptr, long long control, void* option, long long subControl, void* widget);
void* QStyle_SubElementRect(void* ptr, long long element, void* option, void* widget);
void QStyle_Unpolish(void* ptr, void* widget);
void QStyle_UnpolishDefault(void* ptr, void* widget);
void QStyle_Unpolish2(void* ptr, void* application);
void QStyle_Unpolish2Default(void* ptr, void* application);
long long QStyle_QStyle_VisualAlignment(long long direction, long long alignment);
void* QStyle_QStyle_VisualPos(long long direction, void* boundingRectangle, void* logicalPosition);
void* QStyle_QStyle_VisualRect(long long direction, void* boundingRectangle, void* logicalRectangle);
void QStyle_DestroyQStyle(void* ptr);
void QStyle_DestroyQStyleDefault(void* ptr);
void* QStyle_StandardPixmap(void* ptr, long long standardIcon, void* option, void* widget);
void* QStyle___children_atList(void* ptr, int i);
void QStyle___children_setList(void* ptr, void* i);
void* QStyle___children_newList(void* ptr);
void* QStyle___dynamicPropertyNames_atList(void* ptr, int i);
void QStyle___dynamicPropertyNames_setList(void* ptr, void* i);
void* QStyle___dynamicPropertyNames_newList(void* ptr);
void* QStyle___findChildren_atList(void* ptr, int i);
void QStyle___findChildren_setList(void* ptr, void* i);
void* QStyle___findChildren_newList(void* ptr);
void* QStyle___findChildren_atList3(void* ptr, int i);
void QStyle___findChildren_setList3(void* ptr, void* i);
void* QStyle___findChildren_newList3(void* ptr);
void QStyle_ChildEventDefault(void* ptr, void* event);
void QStyle_ConnectNotifyDefault(void* ptr, void* sign);
void QStyle_CustomEventDefault(void* ptr, void* event);
void QStyle_DeleteLaterDefault(void* ptr);
void QStyle_DisconnectNotifyDefault(void* ptr, void* sign);
char QStyle_EventDefault(void* ptr, void* e);
char QStyle_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStyle_MetaObjectDefault(void* ptr);
void QStyle_TimerEventDefault(void* ptr, void* event);
void* QStyleFactory_QStyleFactory_Create(struct QtWidgets_PackedString key);
struct QtWidgets_PackedString QStyleFactory_QStyleFactory_Keys();
void* QStyleHintReturn_NewQStyleHintReturn(int version, int ty);
int QStyleHintReturn_Type(void* ptr);
void QStyleHintReturn_SetType(void* ptr, int vin);
int QStyleHintReturn_Version(void* ptr);
void QStyleHintReturn_SetVersion(void* ptr, int vin);
void* QStyleHintReturnMask_NewQStyleHintReturnMask();
void QStyleHintReturnMask_DestroyQStyleHintReturnMask(void* ptr);
void* QStyleHintReturnMask_Region(void* ptr);
void QStyleHintReturnMask_SetRegion(void* ptr, void* vqr);
void* QStyleHintReturnVariant_NewQStyleHintReturnVariant();
void QStyleHintReturnVariant_DestroyQStyleHintReturnVariant(void* ptr);
void* QStyleHintReturnVariant_Variant(void* ptr);
void QStyleHintReturnVariant_SetVariant(void* ptr, void* vqv);
void* QStyleOption_NewQStyleOption(int version, int ty);
void* QStyleOption_NewQStyleOption2(void* other);
void QStyleOption_InitFrom(void* ptr, void* widget);
void QStyleOption_DestroyQStyleOption(void* ptr);
long long QStyleOption_Direction(void* ptr);
void QStyleOption_SetDirection(void* ptr, long long vqt);
void* QStyleOption_FontMetrics(void* ptr);
void QStyleOption_SetFontMetrics(void* ptr, void* vqf);
void* QStyleOption_Palette(void* ptr);
void QStyleOption_SetPalette(void* ptr, void* vqp);
void* QStyleOption_Rect(void* ptr);
void QStyleOption_SetRect(void* ptr, void* vqr);
long long QStyleOption_State(void* ptr);
void QStyleOption_SetState(void* ptr, long long vqs);
void* QStyleOption_StyleObject(void* ptr);
void QStyleOption_SetStyleObject(void* ptr, void* vqo);
int QStyleOption_Type(void* ptr);
void QStyleOption_SetType(void* ptr, int vin);
int QStyleOption_Version(void* ptr);
void QStyleOption_SetVersion(void* ptr, int vin);
void* QStyleOptionButton_NewQStyleOptionButton();
void* QStyleOptionButton_NewQStyleOptionButton2(void* other);
long long QStyleOptionButton_Features(void* ptr);
void QStyleOptionButton_SetFeatures(void* ptr, long long vqs);
void* QStyleOptionButton_Icon(void* ptr);
void QStyleOptionButton_SetIcon(void* ptr, void* vqi);
void* QStyleOptionButton_IconSize(void* ptr);
void QStyleOptionButton_SetIconSize(void* ptr, void* vqs);
struct QtWidgets_PackedString QStyleOptionButton_Text(void* ptr);
void QStyleOptionButton_SetText(void* ptr, struct QtWidgets_PackedString vqs);
void* QStyleOptionComboBox_NewQStyleOptionComboBox();
void* QStyleOptionComboBox_NewQStyleOptionComboBox2(void* other);
void* QStyleOptionComboBox_CurrentIcon(void* ptr);
void QStyleOptionComboBox_SetCurrentIcon(void* ptr, void* vqi);
struct QtWidgets_PackedString QStyleOptionComboBox_CurrentText(void* ptr);
void QStyleOptionComboBox_SetCurrentText(void* ptr, struct QtWidgets_PackedString vqs);
char QStyleOptionComboBox_Editable(void* ptr);
void QStyleOptionComboBox_SetEditable(void* ptr, char vbo);
char QStyleOptionComboBox_Frame(void* ptr);
void QStyleOptionComboBox_SetFrame(void* ptr, char vbo);
void* QStyleOptionComboBox_IconSize(void* ptr);
void QStyleOptionComboBox_SetIconSize(void* ptr, void* vqs);
void* QStyleOptionComboBox_PopupRect(void* ptr);
void QStyleOptionComboBox_SetPopupRect(void* ptr, void* vqr);
void* QStyleOptionComplex_NewQStyleOptionComplex(int version, int ty);
void* QStyleOptionComplex_NewQStyleOptionComplex2(void* other);
long long QStyleOptionComplex_ActiveSubControls(void* ptr);
void QStyleOptionComplex_SetActiveSubControls(void* ptr, long long vqs);
long long QStyleOptionComplex_SubControls(void* ptr);
void QStyleOptionComplex_SetSubControls(void* ptr, long long vqs);
void* QStyleOptionDockWidget_NewQStyleOptionDockWidget();
void* QStyleOptionDockWidget_NewQStyleOptionDockWidget2(void* other);
char QStyleOptionDockWidget_Closable(void* ptr);
void QStyleOptionDockWidget_SetClosable(void* ptr, char vbo);
char QStyleOptionDockWidget_Floatable(void* ptr);
void QStyleOptionDockWidget_SetFloatable(void* ptr, char vbo);
char QStyleOptionDockWidget_Movable(void* ptr);
void QStyleOptionDockWidget_SetMovable(void* ptr, char vbo);
struct QtWidgets_PackedString QStyleOptionDockWidget_Title(void* ptr);
void QStyleOptionDockWidget_SetTitle(void* ptr, struct QtWidgets_PackedString vqs);
void* QStyleOptionFocusRect_NewQStyleOptionFocusRect();
void* QStyleOptionFocusRect_NewQStyleOptionFocusRect2(void* other);
void* QStyleOptionFocusRect_BackgroundColor(void* ptr);
void QStyleOptionFocusRect_SetBackgroundColor(void* ptr, void* vqc);
void* QStyleOptionFrame_NewQStyleOptionFrame();
void* QStyleOptionFrame_NewQStyleOptionFrame2(void* other);
long long QStyleOptionFrame_Features(void* ptr);
void QStyleOptionFrame_SetFeatures(void* ptr, long long vqs);
long long QStyleOptionFrame_FrameShape(void* ptr);
void QStyleOptionFrame_SetFrameShape(void* ptr, long long vqf);
int QStyleOptionFrame_LineWidth(void* ptr);
void QStyleOptionFrame_SetLineWidth(void* ptr, int vin);
int QStyleOptionFrame_MidLineWidth(void* ptr);
void QStyleOptionFrame_SetMidLineWidth(void* ptr, int vin);
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem();
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem2(void* other);
double QStyleOptionGraphicsItem_QStyleOptionGraphicsItem_LevelOfDetailFromTransform(void* worldTransform);
void* QStyleOptionGraphicsItem_ExposedRect(void* ptr);
void QStyleOptionGraphicsItem_SetExposedRect(void* ptr, void* vqr);
void* QStyleOptionGroupBox_NewQStyleOptionGroupBox();
void* QStyleOptionGroupBox_NewQStyleOptionGroupBox2(void* other);
long long QStyleOptionGroupBox_Features(void* ptr);
void QStyleOptionGroupBox_SetFeatures(void* ptr, long long vqs);
int QStyleOptionGroupBox_LineWidth(void* ptr);
void QStyleOptionGroupBox_SetLineWidth(void* ptr, int vin);
int QStyleOptionGroupBox_MidLineWidth(void* ptr);
void QStyleOptionGroupBox_SetMidLineWidth(void* ptr, int vin);
struct QtWidgets_PackedString QStyleOptionGroupBox_Text(void* ptr);
void QStyleOptionGroupBox_SetText(void* ptr, struct QtWidgets_PackedString vqs);
long long QStyleOptionGroupBox_TextAlignment(void* ptr);
void QStyleOptionGroupBox_SetTextAlignment(void* ptr, long long vqt);
void* QStyleOptionGroupBox_TextColor(void* ptr);
void QStyleOptionGroupBox_SetTextColor(void* ptr, void* vqc);
void* QStyleOptionHeader_NewQStyleOptionHeader();
void* QStyleOptionHeader_NewQStyleOptionHeader2(void* other);
void* QStyleOptionHeader_Icon(void* ptr);
void QStyleOptionHeader_SetIcon(void* ptr, void* vqi);
long long QStyleOptionHeader_IconAlignment(void* ptr);
void QStyleOptionHeader_SetIconAlignment(void* ptr, long long vqt);
long long QStyleOptionHeader_Orientation(void* ptr);
void QStyleOptionHeader_SetOrientation(void* ptr, long long vqt);
long long QStyleOptionHeader_Position(void* ptr);
void QStyleOptionHeader_SetPosition(void* ptr, long long vqs);
int QStyleOptionHeader_Section(void* ptr);
void QStyleOptionHeader_SetSection(void* ptr, int vin);
long long QStyleOptionHeader_SelectedPosition(void* ptr);
void QStyleOptionHeader_SetSelectedPosition(void* ptr, long long vqs);
long long QStyleOptionHeader_SortIndicator(void* ptr);
void QStyleOptionHeader_SetSortIndicator(void* ptr, long long vqs);
struct QtWidgets_PackedString QStyleOptionHeader_Text(void* ptr);
void QStyleOptionHeader_SetText(void* ptr, struct QtWidgets_PackedString vqs);
long long QStyleOptionHeader_TextAlignment(void* ptr);
void QStyleOptionHeader_SetTextAlignment(void* ptr, long long vqt);
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem();
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem2(void* other);
long long QStyleOptionMenuItem_CheckType(void* ptr);
void QStyleOptionMenuItem_SetCheckType(void* ptr, long long vqs);
char QStyleOptionMenuItem_Checked(void* ptr);
void QStyleOptionMenuItem_SetChecked(void* ptr, char vbo);
void* QStyleOptionMenuItem_Font(void* ptr);
void QStyleOptionMenuItem_SetFont(void* ptr, void* vqf);
void* QStyleOptionMenuItem_Icon(void* ptr);
void QStyleOptionMenuItem_SetIcon(void* ptr, void* vqi);
int QStyleOptionMenuItem_MaxIconWidth(void* ptr);
void QStyleOptionMenuItem_SetMaxIconWidth(void* ptr, int vin);
char QStyleOptionMenuItem_MenuHasCheckableItems(void* ptr);
void QStyleOptionMenuItem_SetMenuHasCheckableItems(void* ptr, char vbo);
long long QStyleOptionMenuItem_MenuItemType(void* ptr);
void QStyleOptionMenuItem_SetMenuItemType(void* ptr, long long vqs);
void* QStyleOptionMenuItem_MenuRect(void* ptr);
void QStyleOptionMenuItem_SetMenuRect(void* ptr, void* vqr);
int QStyleOptionMenuItem_TabWidth(void* ptr);
void QStyleOptionMenuItem_SetTabWidth(void* ptr, int vin);
struct QtWidgets_PackedString QStyleOptionMenuItem_Text(void* ptr);
void QStyleOptionMenuItem_SetText(void* ptr, struct QtWidgets_PackedString vqs);
void* QStyleOptionProgressBar_NewQStyleOptionProgressBar();
void* QStyleOptionProgressBar_NewQStyleOptionProgressBar2(void* other);
char QStyleOptionProgressBar_BottomToTop(void* ptr);
void QStyleOptionProgressBar_SetBottomToTop(void* ptr, char vbo);
char QStyleOptionProgressBar_InvertedAppearance(void* ptr);
void QStyleOptionProgressBar_SetInvertedAppearance(void* ptr, char vbo);
int QStyleOptionProgressBar_Maximum(void* ptr);
void QStyleOptionProgressBar_SetMaximum(void* ptr, int vin);
int QStyleOptionProgressBar_Minimum(void* ptr);
void QStyleOptionProgressBar_SetMinimum(void* ptr, int vin);
int QStyleOptionProgressBar_Progress(void* ptr);
void QStyleOptionProgressBar_SetProgress(void* ptr, int vin);
struct QtWidgets_PackedString QStyleOptionProgressBar_Text(void* ptr);
void QStyleOptionProgressBar_SetText(void* ptr, struct QtWidgets_PackedString vqs);
long long QStyleOptionProgressBar_TextAlignment(void* ptr);
void QStyleOptionProgressBar_SetTextAlignment(void* ptr, long long vqt);
char QStyleOptionProgressBar_TextVisible(void* ptr);
void QStyleOptionProgressBar_SetTextVisible(void* ptr, char vbo);
void* QStyleOptionRubberBand_NewQStyleOptionRubberBand();
void* QStyleOptionRubberBand_NewQStyleOptionRubberBand2(void* other);
char QStyleOptionRubberBand_Opaque(void* ptr);
void QStyleOptionRubberBand_SetOpaque(void* ptr, char vbo);
long long QStyleOptionRubberBand_Shape(void* ptr);
void QStyleOptionRubberBand_SetShape(void* ptr, long long vqr);
void* QStyleOptionSizeGrip_NewQStyleOptionSizeGrip();
void* QStyleOptionSizeGrip_NewQStyleOptionSizeGrip2(void* other);
long long QStyleOptionSizeGrip_Corner(void* ptr);
void QStyleOptionSizeGrip_SetCorner(void* ptr, long long vqt);
void* QStyleOptionSlider_NewQStyleOptionSlider();
void* QStyleOptionSlider_NewQStyleOptionSlider2(void* other);
char QStyleOptionSlider_DialWrapping(void* ptr);
void QStyleOptionSlider_SetDialWrapping(void* ptr, char vbo);
int QStyleOptionSlider_Maximum(void* ptr);
void QStyleOptionSlider_SetMaximum(void* ptr, int vin);
int QStyleOptionSlider_Minimum(void* ptr);
void QStyleOptionSlider_SetMinimum(void* ptr, int vin);
double QStyleOptionSlider_NotchTarget(void* ptr);
void QStyleOptionSlider_SetNotchTarget(void* ptr, double vqr);
long long QStyleOptionSlider_Orientation(void* ptr);
void QStyleOptionSlider_SetOrientation(void* ptr, long long vqt);
int QStyleOptionSlider_PageStep(void* ptr);
void QStyleOptionSlider_SetPageStep(void* ptr, int vin);
int QStyleOptionSlider_SingleStep(void* ptr);
void QStyleOptionSlider_SetSingleStep(void* ptr, int vin);
int QStyleOptionSlider_SliderPosition(void* ptr);
void QStyleOptionSlider_SetSliderPosition(void* ptr, int vin);
int QStyleOptionSlider_SliderValue(void* ptr);
void QStyleOptionSlider_SetSliderValue(void* ptr, int vin);
int QStyleOptionSlider_TickInterval(void* ptr);
void QStyleOptionSlider_SetTickInterval(void* ptr, int vin);
long long QStyleOptionSlider_TickPosition(void* ptr);
void QStyleOptionSlider_SetTickPosition(void* ptr, long long vqs);
char QStyleOptionSlider_UpsideDown(void* ptr);
void QStyleOptionSlider_SetUpsideDown(void* ptr, char vbo);
void* QStyleOptionSpinBox_NewQStyleOptionSpinBox();
void* QStyleOptionSpinBox_NewQStyleOptionSpinBox2(void* other);
long long QStyleOptionSpinBox_ButtonSymbols(void* ptr);
void QStyleOptionSpinBox_SetButtonSymbols(void* ptr, long long vqa);
char QStyleOptionSpinBox_Frame(void* ptr);
void QStyleOptionSpinBox_SetFrame(void* ptr, char vbo);
long long QStyleOptionSpinBox_StepEnabled(void* ptr);
void QStyleOptionSpinBox_SetStepEnabled(void* ptr, long long vqa);
void* QStyleOptionTab_NewQStyleOptionTab();
void* QStyleOptionTab_NewQStyleOptionTab2(void* other);
long long QStyleOptionTab_CornerWidgets(void* ptr);
void QStyleOptionTab_SetCornerWidgets(void* ptr, long long vqs);
char QStyleOptionTab_DocumentMode(void* ptr);
void QStyleOptionTab_SetDocumentMode(void* ptr, char vbo);
void* QStyleOptionTab_Icon(void* ptr);
void QStyleOptionTab_SetIcon(void* ptr, void* vqi);
void* QStyleOptionTab_IconSize(void* ptr);
void QStyleOptionTab_SetIconSize(void* ptr, void* vqs);
void* QStyleOptionTab_LeftButtonSize(void* ptr);
void QStyleOptionTab_SetLeftButtonSize(void* ptr, void* vqs);
long long QStyleOptionTab_Position(void* ptr);
void QStyleOptionTab_SetPosition(void* ptr, long long vqs);
void* QStyleOptionTab_RightButtonSize(void* ptr);
void QStyleOptionTab_SetRightButtonSize(void* ptr, void* vqs);
int QStyleOptionTab_Row(void* ptr);
void QStyleOptionTab_SetRow(void* ptr, int vin);
long long QStyleOptionTab_SelectedPosition(void* ptr);
void QStyleOptionTab_SetSelectedPosition(void* ptr, long long vqs);
long long QStyleOptionTab_Shape(void* ptr);
void QStyleOptionTab_SetShape(void* ptr, long long vqt);
struct QtWidgets_PackedString QStyleOptionTab_Text(void* ptr);
void QStyleOptionTab_SetText(void* ptr, struct QtWidgets_PackedString vqs);
void* QStyleOptionTabBarBase_NewQStyleOptionTabBarBase();
void* QStyleOptionTabBarBase_NewQStyleOptionTabBarBase2(void* other);
char QStyleOptionTabBarBase_DocumentMode(void* ptr);
void QStyleOptionTabBarBase_SetDocumentMode(void* ptr, char vbo);
void* QStyleOptionTabBarBase_SelectedTabRect(void* ptr);
void QStyleOptionTabBarBase_SetSelectedTabRect(void* ptr, void* vqr);
long long QStyleOptionTabBarBase_Shape(void* ptr);
void QStyleOptionTabBarBase_SetShape(void* ptr, long long vqt);
void* QStyleOptionTabBarBase_TabBarRect(void* ptr);
void QStyleOptionTabBarBase_SetTabBarRect(void* ptr, void* vqr);
void* QStyleOptionTabWidgetFrame_NewQStyleOptionTabWidgetFrame();
void* QStyleOptionTabWidgetFrame_NewQStyleOptionTabWidgetFrame2(void* other);
void* QStyleOptionTabWidgetFrame_LeftCornerWidgetSize(void* ptr);
void QStyleOptionTabWidgetFrame_SetLeftCornerWidgetSize(void* ptr, void* vqs);
int QStyleOptionTabWidgetFrame_LineWidth(void* ptr);
void QStyleOptionTabWidgetFrame_SetLineWidth(void* ptr, int vin);
int QStyleOptionTabWidgetFrame_MidLineWidth(void* ptr);
void QStyleOptionTabWidgetFrame_SetMidLineWidth(void* ptr, int vin);
void* QStyleOptionTabWidgetFrame_RightCornerWidgetSize(void* ptr);
void QStyleOptionTabWidgetFrame_SetRightCornerWidgetSize(void* ptr, void* vqs);
void* QStyleOptionTabWidgetFrame_SelectedTabRect(void* ptr);
void QStyleOptionTabWidgetFrame_SetSelectedTabRect(void* ptr, void* vqr);
long long QStyleOptionTabWidgetFrame_Shape(void* ptr);
void QStyleOptionTabWidgetFrame_SetShape(void* ptr, long long vqt);
void* QStyleOptionTabWidgetFrame_TabBarRect(void* ptr);
void QStyleOptionTabWidgetFrame_SetTabBarRect(void* ptr, void* vqr);
void* QStyleOptionTabWidgetFrame_TabBarSize(void* ptr);
void QStyleOptionTabWidgetFrame_SetTabBarSize(void* ptr, void* vqs);
void* QStyleOptionTitleBar_NewQStyleOptionTitleBar();
void* QStyleOptionTitleBar_NewQStyleOptionTitleBar2(void* other);
void* QStyleOptionTitleBar_Icon(void* ptr);
void QStyleOptionTitleBar_SetIcon(void* ptr, void* vqi);
struct QtWidgets_PackedString QStyleOptionTitleBar_Text(void* ptr);
void QStyleOptionTitleBar_SetText(void* ptr, struct QtWidgets_PackedString vqs);
long long QStyleOptionTitleBar_TitleBarFlags(void* ptr);
void QStyleOptionTitleBar_SetTitleBarFlags(void* ptr, long long vqt);
int QStyleOptionTitleBar_TitleBarState(void* ptr);
void QStyleOptionTitleBar_SetTitleBarState(void* ptr, int vin);
void* QStyleOptionToolBar_NewQStyleOptionToolBar();
void* QStyleOptionToolBar_NewQStyleOptionToolBar2(void* other);
long long QStyleOptionToolBar_Features(void* ptr);
void QStyleOptionToolBar_SetFeatures(void* ptr, long long vqs);
int QStyleOptionToolBar_LineWidth(void* ptr);
void QStyleOptionToolBar_SetLineWidth(void* ptr, int vin);
int QStyleOptionToolBar_MidLineWidth(void* ptr);
void QStyleOptionToolBar_SetMidLineWidth(void* ptr, int vin);
long long QStyleOptionToolBar_PositionOfLine(void* ptr);
void QStyleOptionToolBar_SetPositionOfLine(void* ptr, long long vqs);
long long QStyleOptionToolBar_PositionWithinLine(void* ptr);
void QStyleOptionToolBar_SetPositionWithinLine(void* ptr, long long vqs);
long long QStyleOptionToolBar_ToolBarArea(void* ptr);
void QStyleOptionToolBar_SetToolBarArea(void* ptr, long long vqt);
void* QStyleOptionToolBox_NewQStyleOptionToolBox();
void* QStyleOptionToolBox_NewQStyleOptionToolBox2(void* other);
void* QStyleOptionToolBox_Icon(void* ptr);
void QStyleOptionToolBox_SetIcon(void* ptr, void* vqi);
long long QStyleOptionToolBox_SelectedPosition(void* ptr);
void QStyleOptionToolBox_SetSelectedPosition(void* ptr, long long vqs);
struct QtWidgets_PackedString QStyleOptionToolBox_Text(void* ptr);
void QStyleOptionToolBox_SetText(void* ptr, struct QtWidgets_PackedString vqs);
void* QStyleOptionToolButton_NewQStyleOptionToolButton();
void* QStyleOptionToolButton_NewQStyleOptionToolButton2(void* other);
long long QStyleOptionToolButton_ArrowType(void* ptr);
void QStyleOptionToolButton_SetArrowType(void* ptr, long long vqt);
long long QStyleOptionToolButton_Features(void* ptr);
void QStyleOptionToolButton_SetFeatures(void* ptr, long long vqs);
void* QStyleOptionToolButton_Font(void* ptr);
void QStyleOptionToolButton_SetFont(void* ptr, void* vqf);
void* QStyleOptionToolButton_Icon(void* ptr);
void QStyleOptionToolButton_SetIcon(void* ptr, void* vqi);
void* QStyleOptionToolButton_IconSize(void* ptr);
void QStyleOptionToolButton_SetIconSize(void* ptr, void* vqs);
void* QStyleOptionToolButton_Pos(void* ptr);
void QStyleOptionToolButton_SetPos(void* ptr, void* vqp);
struct QtWidgets_PackedString QStyleOptionToolButton_Text(void* ptr);
void QStyleOptionToolButton_SetText(void* ptr, struct QtWidgets_PackedString vqs);
long long QStyleOptionToolButton_ToolButtonStyle(void* ptr);
void QStyleOptionToolButton_SetToolButtonStyle(void* ptr, long long vqt);
void* QStyleOptionViewItem_NewQStyleOptionViewItem();
void* QStyleOptionViewItem_NewQStyleOptionViewItem2(void* other);
void* QStyleOptionViewItem_BackgroundBrush(void* ptr);
void QStyleOptionViewItem_SetBackgroundBrush(void* ptr, void* vqb);
long long QStyleOptionViewItem_CheckState(void* ptr);
void QStyleOptionViewItem_SetCheckState(void* ptr, long long vqt);
long long QStyleOptionViewItem_DecorationAlignment(void* ptr);
void QStyleOptionViewItem_SetDecorationAlignment(void* ptr, long long vqt);
long long QStyleOptionViewItem_DecorationPosition(void* ptr);
void QStyleOptionViewItem_SetDecorationPosition(void* ptr, long long vqs);
void* QStyleOptionViewItem_DecorationSize(void* ptr);
void QStyleOptionViewItem_SetDecorationSize(void* ptr, void* vqs);
long long QStyleOptionViewItem_DisplayAlignment(void* ptr);
void QStyleOptionViewItem_SetDisplayAlignment(void* ptr, long long vqt);
long long QStyleOptionViewItem_Features(void* ptr);
void QStyleOptionViewItem_SetFeatures(void* ptr, long long vqs);
void* QStyleOptionViewItem_Font(void* ptr);
void QStyleOptionViewItem_SetFont(void* ptr, void* vqf);
void* QStyleOptionViewItem_Icon(void* ptr);
void QStyleOptionViewItem_SetIcon(void* ptr, void* vqi);
void* QStyleOptionViewItem_Index(void* ptr);
void QStyleOptionViewItem_SetIndex(void* ptr, void* vqm);
char QStyleOptionViewItem_ShowDecorationSelected(void* ptr);
void QStyleOptionViewItem_SetShowDecorationSelected(void* ptr, char vbo);
struct QtWidgets_PackedString QStyleOptionViewItem_Text(void* ptr);
void QStyleOptionViewItem_SetText(void* ptr, struct QtWidgets_PackedString vqs);
long long QStyleOptionViewItem_TextElideMode(void* ptr);
void QStyleOptionViewItem_SetTextElideMode(void* ptr, long long vqt);
long long QStyleOptionViewItem_ViewItemPosition(void* ptr);
void QStyleOptionViewItem_SetViewItemPosition(void* ptr, long long vqs);
void* QStylePainter_NewQStylePainter();
void* QStylePainter_NewQStylePainter2(void* widget);
void* QStylePainter_NewQStylePainter3(void* pd, void* widget);
char QStylePainter_Begin(void* ptr, void* widget);
char QStylePainter_Begin2(void* ptr, void* pd, void* widget);
void QStylePainter_DrawComplexControl(void* ptr, long long cc, void* option);
void QStylePainter_DrawControl(void* ptr, long long ce, void* option);
void QStylePainter_DrawItemPixmap(void* ptr, void* rect, int flags, void* pixmap);
void QStylePainter_DrawItemText(void* ptr, void* rect, int flags, void* pal, char enabled, struct QtWidgets_PackedString text, long long textRole);
void QStylePainter_DrawPrimitive(void* ptr, long long pe, void* option);
void* QStylePainter_Style(void* ptr);
void* QStylePainter___drawLines_lines_atList2(void* ptr, int i);
void QStylePainter___drawLines_lines_setList2(void* ptr, void* i);
void* QStylePainter___drawLines_lines_newList2(void* ptr);
void* QStylePainter___drawLines_pointPairs_atList4(void* ptr, int i);
void QStylePainter___drawLines_pointPairs_setList4(void* ptr, void* i);
void* QStylePainter___drawLines_pointPairs_newList4(void* ptr);
void* QStylePainter___drawLines_lines_atList6(void* ptr, int i);
void QStylePainter___drawLines_lines_setList6(void* ptr, void* i);
void* QStylePainter___drawLines_lines_newList6(void* ptr);
void* QStylePainter___drawLines_pointPairs_atList8(void* ptr, int i);
void QStylePainter___drawLines_pointPairs_setList8(void* ptr, void* i);
void* QStylePainter___drawLines_pointPairs_newList8(void* ptr);
void* QStylePainter___drawRects_rectangles_atList2(void* ptr, int i);
void QStylePainter___drawRects_rectangles_setList2(void* ptr, void* i);
void* QStylePainter___drawRects_rectangles_newList2(void* ptr);
void* QStylePainter___drawRects_rectangles_atList4(void* ptr, int i);
void QStylePainter___drawRects_rectangles_setList4(void* ptr, void* i);
void* QStylePainter___drawRects_rectangles_newList4(void* ptr);
void* QStylePlugin_NewQStylePlugin(void* parent);
void* QStylePlugin_Create(void* ptr, struct QtWidgets_PackedString key);
void QStylePlugin_DestroyQStylePlugin(void* ptr);
void QStylePlugin_DestroyQStylePluginDefault(void* ptr);
void* QStylePlugin___children_atList(void* ptr, int i);
void QStylePlugin___children_setList(void* ptr, void* i);
void* QStylePlugin___children_newList(void* ptr);
void* QStylePlugin___dynamicPropertyNames_atList(void* ptr, int i);
void QStylePlugin___dynamicPropertyNames_setList(void* ptr, void* i);
void* QStylePlugin___dynamicPropertyNames_newList(void* ptr);
void* QStylePlugin___findChildren_atList(void* ptr, int i);
void QStylePlugin___findChildren_setList(void* ptr, void* i);
void* QStylePlugin___findChildren_newList(void* ptr);
void* QStylePlugin___findChildren_atList3(void* ptr, int i);
void QStylePlugin___findChildren_setList3(void* ptr, void* i);
void* QStylePlugin___findChildren_newList3(void* ptr);
void QStylePlugin_ChildEventDefault(void* ptr, void* event);
void QStylePlugin_ConnectNotifyDefault(void* ptr, void* sign);
void QStylePlugin_CustomEventDefault(void* ptr, void* event);
void QStylePlugin_DeleteLaterDefault(void* ptr);
void QStylePlugin_DisconnectNotifyDefault(void* ptr, void* sign);
char QStylePlugin_EventDefault(void* ptr, void* e);
char QStylePlugin_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStylePlugin_MetaObjectDefault(void* ptr);
void QStylePlugin_TimerEventDefault(void* ptr, void* event);
void* QStyledItemDelegate_NewQStyledItemDelegate(void* parent);
struct QtWidgets_PackedString QStyledItemDelegate_DisplayText(void* ptr, void* value, void* locale);
struct QtWidgets_PackedString QStyledItemDelegate_DisplayTextDefault(void* ptr, void* value, void* locale);
void QStyledItemDelegate_InitStyleOption(void* ptr, void* option, void* index);
void QStyledItemDelegate_InitStyleOptionDefault(void* ptr, void* option, void* index);
void* QStyledItemDelegate_ItemEditorFactory(void* ptr);
void QStyledItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QStyledItemDelegate_PaintDefault(void* ptr, void* painter, void* option, void* index);
void QStyledItemDelegate_SetItemEditorFactory(void* ptr, void* factory);
void* QStyledItemDelegate_SizeHint(void* ptr, void* option, void* index);
void* QStyledItemDelegate_SizeHintDefault(void* ptr, void* option, void* index);
void QStyledItemDelegate_DestroyQStyledItemDelegate(void* ptr);
void QStyledItemDelegate_DestroyQStyledItemDelegateDefault(void* ptr);
long long QSwipeGesture_HorizontalDirection(void* ptr);
void QSwipeGesture_SetSwipeAngle(void* ptr, double value);
double QSwipeGesture_SwipeAngle(void* ptr);
long long QSwipeGesture_VerticalDirection(void* ptr);
void QSwipeGesture_DestroyQSwipeGesture(void* ptr);
void QSwipeGesture_DestroyQSwipeGestureDefault(void* ptr);
void* QSystemTrayIcon_NewQSystemTrayIcon(void* parent);
void* QSystemTrayIcon_NewQSystemTrayIcon2(void* icon, void* parent);
void QSystemTrayIcon_ConnectActivated(void* ptr, long long t);
void QSystemTrayIcon_DisconnectActivated(void* ptr);
void QSystemTrayIcon_Activated(void* ptr, long long reason);
void* QSystemTrayIcon_ContextMenu(void* ptr);
char QSystemTrayIcon_EventDefault(void* ptr, void* e);
void* QSystemTrayIcon_Geometry(void* ptr);
void QSystemTrayIcon_Hide(void* ptr);
void QSystemTrayIcon_HideDefault(void* ptr);
void* QSystemTrayIcon_Icon(void* ptr);
char QSystemTrayIcon_QSystemTrayIcon_IsSystemTrayAvailable();
char QSystemTrayIcon_IsVisible(void* ptr);
void QSystemTrayIcon_ConnectMessageClicked(void* ptr, long long t);
void QSystemTrayIcon_DisconnectMessageClicked(void* ptr);
void QSystemTrayIcon_MessageClicked(void* ptr);
void QSystemTrayIcon_SetContextMenu(void* ptr, void* menu);
void QSystemTrayIcon_SetIcon(void* ptr, void* icon);
void QSystemTrayIcon_SetToolTip(void* ptr, struct QtWidgets_PackedString tip);
void QSystemTrayIcon_SetVisible(void* ptr, char visible);
void QSystemTrayIcon_SetVisibleDefault(void* ptr, char visible);
void QSystemTrayIcon_Show(void* ptr);
void QSystemTrayIcon_ShowDefault(void* ptr);
void QSystemTrayIcon_ShowMessage(void* ptr, struct QtWidgets_PackedString title, struct QtWidgets_PackedString message, long long icon, int millisecondsTimeoutHint);
void QSystemTrayIcon_ShowMessageDefault(void* ptr, struct QtWidgets_PackedString title, struct QtWidgets_PackedString message, long long icon, int millisecondsTimeoutHint);
void QSystemTrayIcon_ShowMessage2(void* ptr, struct QtWidgets_PackedString title, struct QtWidgets_PackedString message, void* icon, int millisecondsTimeoutHint);
void QSystemTrayIcon_ShowMessage2Default(void* ptr, struct QtWidgets_PackedString title, struct QtWidgets_PackedString message, void* icon, int millisecondsTimeoutHint);
char QSystemTrayIcon_QSystemTrayIcon_SupportsMessages();
struct QtWidgets_PackedString QSystemTrayIcon_ToolTip(void* ptr);
void QSystemTrayIcon_DestroyQSystemTrayIcon(void* ptr);
void QSystemTrayIcon_DestroyQSystemTrayIconDefault(void* ptr);
void* QSystemTrayIcon___children_atList(void* ptr, int i);
void QSystemTrayIcon___children_setList(void* ptr, void* i);
void* QSystemTrayIcon___children_newList(void* ptr);
void* QSystemTrayIcon___dynamicPropertyNames_atList(void* ptr, int i);
void QSystemTrayIcon___dynamicPropertyNames_setList(void* ptr, void* i);
void* QSystemTrayIcon___dynamicPropertyNames_newList(void* ptr);
void* QSystemTrayIcon___findChildren_atList(void* ptr, int i);
void QSystemTrayIcon___findChildren_setList(void* ptr, void* i);
void* QSystemTrayIcon___findChildren_newList(void* ptr);
void* QSystemTrayIcon___findChildren_atList3(void* ptr, int i);
void QSystemTrayIcon___findChildren_setList3(void* ptr, void* i);
void* QSystemTrayIcon___findChildren_newList3(void* ptr);
void QSystemTrayIcon_ChildEventDefault(void* ptr, void* event);
void QSystemTrayIcon_ConnectNotifyDefault(void* ptr, void* sign);
void QSystemTrayIcon_CustomEventDefault(void* ptr, void* event);
void QSystemTrayIcon_DeleteLaterDefault(void* ptr);
void QSystemTrayIcon_DisconnectNotifyDefault(void* ptr, void* sign);
char QSystemTrayIcon_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSystemTrayIcon_MetaObjectDefault(void* ptr);
void QSystemTrayIcon_TimerEventDefault(void* ptr, void* event);
void* QTabBar_NewQTabBar(void* parent);
struct QtWidgets_PackedString QTabBar_AccessibleTabName(void* ptr, int index);
int QTabBar_AddTab(void* ptr, struct QtWidgets_PackedString text);
int QTabBar_AddTab2(void* ptr, void* icon, struct QtWidgets_PackedString text);
char QTabBar_AutoHide(void* ptr);
char QTabBar_ChangeCurrentOnDrag(void* ptr);
int QTabBar_Count(void* ptr);
void QTabBar_ConnectCurrentChanged(void* ptr, long long t);
void QTabBar_DisconnectCurrentChanged(void* ptr);
void QTabBar_CurrentChanged(void* ptr, int index);
int QTabBar_CurrentIndex(void* ptr);
char QTabBar_DocumentMode(void* ptr);
char QTabBar_DrawBase(void* ptr);
long long QTabBar_ElideMode(void* ptr);
char QTabBar_Expanding(void* ptr);
void* QTabBar_IconSize(void* ptr);
void QTabBar_InitStyleOption(void* ptr, void* option, int tabIndex);
int QTabBar_InsertTab(void* ptr, int index, struct QtWidgets_PackedString text);
int QTabBar_InsertTab2(void* ptr, int index, void* icon, struct QtWidgets_PackedString text);
char QTabBar_IsMovable(void* ptr);
char QTabBar_IsTabEnabled(void* ptr, int index);
char QTabBar_IsTabVisible(void* ptr, int index);
void* QTabBar_MinimumTabSizeHint(void* ptr, int index);
void* QTabBar_MinimumTabSizeHintDefault(void* ptr, int index);
void QTabBar_MoveTab(void* ptr, int from, int to);
void QTabBar_RemoveTab(void* ptr, int index);
long long QTabBar_SelectionBehaviorOnRemove(void* ptr);
void QTabBar_SetAccessibleTabName(void* ptr, int index, struct QtWidgets_PackedString name);
void QTabBar_SetAutoHide(void* ptr, char hide);
void QTabBar_SetChangeCurrentOnDrag(void* ptr, char change);
void QTabBar_SetCurrentIndex(void* ptr, int index);
void QTabBar_SetCurrentIndexDefault(void* ptr, int index);
void QTabBar_SetDocumentMode(void* ptr, char set);
void QTabBar_SetDrawBase(void* ptr, char drawTheBase);
void QTabBar_SetElideMode(void* ptr, long long mode);
void QTabBar_SetExpanding(void* ptr, char enabled);
void QTabBar_SetIconSize(void* ptr, void* size);
void QTabBar_SetMovable(void* ptr, char movable);
void QTabBar_SetSelectionBehaviorOnRemove(void* ptr, long long behavior);
void QTabBar_SetShape(void* ptr, long long shape);
void QTabBar_SetTabButton(void* ptr, int index, long long position, void* widget);
void QTabBar_SetTabData(void* ptr, int index, void* data);
void QTabBar_SetTabEnabled(void* ptr, int index, char enabled);
void QTabBar_SetTabIcon(void* ptr, int index, void* icon);
void QTabBar_SetTabText(void* ptr, int index, struct QtWidgets_PackedString text);
void QTabBar_SetTabTextColor(void* ptr, int index, void* color);
void QTabBar_SetTabToolTip(void* ptr, int index, struct QtWidgets_PackedString tip);
void QTabBar_SetTabVisible(void* ptr, int index, char visible);
void QTabBar_SetTabWhatsThis(void* ptr, int index, struct QtWidgets_PackedString text);
void QTabBar_SetTabsClosable(void* ptr, char closable);
void QTabBar_SetUsesScrollButtons(void* ptr, char useButtons);
long long QTabBar_Shape(void* ptr);
int QTabBar_TabAt(void* ptr, void* position);
void QTabBar_ConnectTabBarClicked(void* ptr, long long t);
void QTabBar_DisconnectTabBarClicked(void* ptr);
void QTabBar_TabBarClicked(void* ptr, int index);
void QTabBar_ConnectTabBarDoubleClicked(void* ptr, long long t);
void QTabBar_DisconnectTabBarDoubleClicked(void* ptr);
void QTabBar_TabBarDoubleClicked(void* ptr, int index);
void* QTabBar_TabButton(void* ptr, int index, long long position);
void QTabBar_ConnectTabCloseRequested(void* ptr, long long t);
void QTabBar_DisconnectTabCloseRequested(void* ptr);
void QTabBar_TabCloseRequested(void* ptr, int index);
void* QTabBar_TabData(void* ptr, int index);
void* QTabBar_TabIcon(void* ptr, int index);
void QTabBar_TabInserted(void* ptr, int index);
void QTabBar_TabInsertedDefault(void* ptr, int index);
void QTabBar_TabLayoutChange(void* ptr);
void QTabBar_TabLayoutChangeDefault(void* ptr);
void QTabBar_ConnectTabMoved(void* ptr, long long t);
void QTabBar_DisconnectTabMoved(void* ptr);
void QTabBar_TabMoved(void* ptr, int from, int to);
void* QTabBar_TabRect(void* ptr, int index);
void QTabBar_TabRemoved(void* ptr, int index);
void QTabBar_TabRemovedDefault(void* ptr, int index);
void* QTabBar_TabSizeHint(void* ptr, int index);
void* QTabBar_TabSizeHintDefault(void* ptr, int index);
struct QtWidgets_PackedString QTabBar_TabText(void* ptr, int index);
void* QTabBar_TabTextColor(void* ptr, int index);
struct QtWidgets_PackedString QTabBar_TabToolTip(void* ptr, int index);
struct QtWidgets_PackedString QTabBar_TabWhatsThis(void* ptr, int index);
char QTabBar_TabsClosable(void* ptr);
char QTabBar_UsesScrollButtons(void* ptr);
void QTabBar_DestroyQTabBar(void* ptr);
void QTabBar_DestroyQTabBarDefault(void* ptr);
void* QTabWidget_NewQTabWidget(void* parent);
int QTabWidget_AddTab(void* ptr, void* page, struct QtWidgets_PackedString label);
int QTabWidget_AddTab2(void* ptr, void* page, void* icon, struct QtWidgets_PackedString label);
void QTabWidget_Clear(void* ptr);
void* QTabWidget_CornerWidget(void* ptr, long long corner);
int QTabWidget_Count(void* ptr);
void QTabWidget_ConnectCurrentChanged(void* ptr, long long t);
void QTabWidget_DisconnectCurrentChanged(void* ptr);
void QTabWidget_CurrentChanged(void* ptr, int index);
int QTabWidget_CurrentIndex(void* ptr);
void* QTabWidget_CurrentWidget(void* ptr);
char QTabWidget_DocumentMode(void* ptr);
long long QTabWidget_ElideMode(void* ptr);
void* QTabWidget_IconSize(void* ptr);
int QTabWidget_IndexOf(void* ptr, void* w);
void QTabWidget_InitStyleOption(void* ptr, void* option);
int QTabWidget_InsertTab(void* ptr, int index, void* page, struct QtWidgets_PackedString label);
int QTabWidget_InsertTab2(void* ptr, int index, void* page, void* icon, struct QtWidgets_PackedString label);
char QTabWidget_IsMovable(void* ptr);
char QTabWidget_IsTabEnabled(void* ptr, int index);
char QTabWidget_IsTabVisible(void* ptr, int index);
void QTabWidget_RemoveTab(void* ptr, int index);
void QTabWidget_SetCornerWidget(void* ptr, void* widget, long long corner);
void QTabWidget_SetCurrentIndex(void* ptr, int index);
void QTabWidget_SetCurrentIndexDefault(void* ptr, int index);
void QTabWidget_SetCurrentWidget(void* ptr, void* widget);
void QTabWidget_SetCurrentWidgetDefault(void* ptr, void* widget);
void QTabWidget_SetDocumentMode(void* ptr, char set);
void QTabWidget_SetElideMode(void* ptr, long long mode);
void QTabWidget_SetIconSize(void* ptr, void* size);
void QTabWidget_SetMovable(void* ptr, char movable);
void QTabWidget_SetTabBar(void* ptr, void* tb);
void QTabWidget_SetTabBarAutoHide(void* ptr, char enabled);
void QTabWidget_SetTabEnabled(void* ptr, int index, char enable);
void QTabWidget_SetTabIcon(void* ptr, int index, void* icon);
void QTabWidget_SetTabPosition(void* ptr, long long position);
void QTabWidget_SetTabShape(void* ptr, long long s);
void QTabWidget_SetTabText(void* ptr, int index, struct QtWidgets_PackedString label);
void QTabWidget_SetTabToolTip(void* ptr, int index, struct QtWidgets_PackedString tip);
void QTabWidget_SetTabVisible(void* ptr, int index, char visible);
void QTabWidget_SetTabWhatsThis(void* ptr, int index, struct QtWidgets_PackedString text);
void QTabWidget_SetTabsClosable(void* ptr, char closeable);
void QTabWidget_SetUsesScrollButtons(void* ptr, char useButtons);
void* QTabWidget_TabBar(void* ptr);
char QTabWidget_TabBarAutoHide(void* ptr);
void QTabWidget_ConnectTabBarClicked(void* ptr, long long t);
void QTabWidget_DisconnectTabBarClicked(void* ptr);
void QTabWidget_TabBarClicked(void* ptr, int index);
void QTabWidget_ConnectTabBarDoubleClicked(void* ptr, long long t);
void QTabWidget_DisconnectTabBarDoubleClicked(void* ptr);
void QTabWidget_TabBarDoubleClicked(void* ptr, int index);
void QTabWidget_ConnectTabCloseRequested(void* ptr, long long t);
void QTabWidget_DisconnectTabCloseRequested(void* ptr);
void QTabWidget_TabCloseRequested(void* ptr, int index);
void* QTabWidget_TabIcon(void* ptr, int index);
void QTabWidget_TabInserted(void* ptr, int index);
void QTabWidget_TabInsertedDefault(void* ptr, int index);
long long QTabWidget_TabPosition(void* ptr);
void QTabWidget_TabRemoved(void* ptr, int index);
void QTabWidget_TabRemovedDefault(void* ptr, int index);
long long QTabWidget_TabShape(void* ptr);
struct QtWidgets_PackedString QTabWidget_TabText(void* ptr, int index);
struct QtWidgets_PackedString QTabWidget_TabToolTip(void* ptr, int index);
struct QtWidgets_PackedString QTabWidget_TabWhatsThis(void* ptr, int index);
char QTabWidget_TabsClosable(void* ptr);
char QTabWidget_UsesScrollButtons(void* ptr);
void* QTabWidget_Widget(void* ptr, int index);
void QTabWidget_DestroyQTabWidget(void* ptr);
void QTabWidget_DestroyQTabWidgetDefault(void* ptr);
void* QTableView_NewQTableView(void* parent);
void QTableView_ClearSpans(void* ptr);
int QTableView_ColumnAt(void* ptr, int x);
void QTableView_ColumnCountChanged(void* ptr, int oldCount, int newCount);
void QTableView_ColumnCountChangedDefault(void* ptr, int oldCount, int newCount);
void QTableView_ColumnMoved(void* ptr, int column, int oldIndex, int newIndex);
void QTableView_ColumnMovedDefault(void* ptr, int column, int oldIndex, int newIndex);
void QTableView_ColumnResized(void* ptr, int column, int oldWidth, int newWidth);
void QTableView_ColumnResizedDefault(void* ptr, int column, int oldWidth, int newWidth);
int QTableView_ColumnSpan(void* ptr, int row, int column);
int QTableView_ColumnViewportPosition(void* ptr, int column);
int QTableView_ColumnWidth(void* ptr, int column);
void QTableView_CurrentChanged(void* ptr, void* current, void* previous);
void QTableView_CurrentChangedDefault(void* ptr, void* current, void* previous);
long long QTableView_GridStyle(void* ptr);
void QTableView_HideColumn(void* ptr, int column);
void QTableView_HideColumnDefault(void* ptr, int column);
void QTableView_HideRow(void* ptr, int row);
void QTableView_HideRowDefault(void* ptr, int row);
void* QTableView_HorizontalHeader(void* ptr);
int QTableView_HorizontalOffset(void* ptr);
int QTableView_HorizontalOffsetDefault(void* ptr);
void* QTableView_IndexAt(void* ptr, void* pos);
void* QTableView_IndexAtDefault(void* ptr, void* pos);
char QTableView_IsColumnHidden(void* ptr, int column);
char QTableView_IsCornerButtonEnabled(void* ptr);
char QTableView_IsIndexHidden(void* ptr, void* index);
char QTableView_IsIndexHiddenDefault(void* ptr, void* index);
char QTableView_IsRowHidden(void* ptr, int row);
char QTableView_IsSortingEnabled(void* ptr);
void* QTableView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QTableView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QTableView_ResizeColumnToContents(void* ptr, int column);
void QTableView_ResizeColumnToContentsDefault(void* ptr, int column);
void QTableView_ResizeColumnsToContents(void* ptr);
void QTableView_ResizeColumnsToContentsDefault(void* ptr);
void QTableView_ResizeRowToContents(void* ptr, int row);
void QTableView_ResizeRowToContentsDefault(void* ptr, int row);
void QTableView_ResizeRowsToContents(void* ptr);
void QTableView_ResizeRowsToContentsDefault(void* ptr);
int QTableView_RowAt(void* ptr, int y);
void QTableView_RowCountChanged(void* ptr, int oldCount, int newCount);
void QTableView_RowCountChangedDefault(void* ptr, int oldCount, int newCount);
int QTableView_RowHeight(void* ptr, int row);
void QTableView_RowMoved(void* ptr, int row, int oldIndex, int newIndex);
void QTableView_RowMovedDefault(void* ptr, int row, int oldIndex, int newIndex);
void QTableView_RowResized(void* ptr, int row, int oldHeight, int newHeight);
void QTableView_RowResizedDefault(void* ptr, int row, int oldHeight, int newHeight);
int QTableView_RowSpan(void* ptr, int row, int column);
int QTableView_RowViewportPosition(void* ptr, int row);
void QTableView_SelectColumn(void* ptr, int column);
void QTableView_SelectColumnDefault(void* ptr, int column);
void QTableView_SelectRow(void* ptr, int row);
void QTableView_SelectRowDefault(void* ptr, int row);
void QTableView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QTableView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QTableView_SetColumnHidden(void* ptr, int column, char hide);
void QTableView_SetColumnWidth(void* ptr, int column, int width);
void QTableView_SetCornerButtonEnabled(void* ptr, char enable);
void QTableView_SetGridStyle(void* ptr, long long style);
void QTableView_SetHorizontalHeader(void* ptr, void* header);
void QTableView_SetRootIndex(void* ptr, void* index);
void QTableView_SetRootIndexDefault(void* ptr, void* index);
void QTableView_SetRowHeight(void* ptr, int row, int height);
void QTableView_SetRowHidden(void* ptr, int row, char hide);
void QTableView_SetSelection(void* ptr, void* rect, long long flags);
void QTableView_SetSelectionDefault(void* ptr, void* rect, long long flags);
void QTableView_SetShowGrid(void* ptr, char show);
void QTableView_SetShowGridDefault(void* ptr, char show);
void QTableView_SetSortingEnabled(void* ptr, char enable);
void QTableView_SetSpan(void* ptr, int row, int column, int rowSpanCount, int columnSpanCount);
void QTableView_SetVerticalHeader(void* ptr, void* header);
void QTableView_SetWordWrap(void* ptr, char on);
void QTableView_ShowColumn(void* ptr, int column);
void QTableView_ShowColumnDefault(void* ptr, int column);
char QTableView_ShowGrid(void* ptr);
void QTableView_ShowRow(void* ptr, int row);
void QTableView_ShowRowDefault(void* ptr, int row);
void QTableView_SortByColumn(void* ptr, int column, long long order);
void QTableView_SortByColumnDefault(void* ptr, int column, long long order);
void QTableView_UpdateGeometries(void* ptr);
void QTableView_UpdateGeometriesDefault(void* ptr);
void* QTableView_VerticalHeader(void* ptr);
int QTableView_VerticalOffset(void* ptr);
int QTableView_VerticalOffsetDefault(void* ptr);
char QTableView_WordWrap(void* ptr);
void QTableView_DestroyQTableView(void* ptr);
void QTableView_DestroyQTableViewDefault(void* ptr);
void QTableView_ScrollTo(void* ptr, void* index, long long hint);
void QTableView_ScrollToDefault(void* ptr, void* index, long long hint);
void* QTableView_VisualRect(void* ptr, void* index);
void* QTableView_VisualRectDefault(void* ptr, void* index);
void* QTableView_VisualRegionForSelection(void* ptr, void* selection);
void* QTableView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void* QTableWidget_NewQTableWidget(void* parent);
void* QTableWidget_NewQTableWidget2(int rows, int columns, void* parent);
void QTableWidget_ConnectCellActivated(void* ptr, long long t);
void QTableWidget_DisconnectCellActivated(void* ptr);
void QTableWidget_CellActivated(void* ptr, int row, int column);
void QTableWidget_ConnectCellChanged(void* ptr, long long t);
void QTableWidget_DisconnectCellChanged(void* ptr);
void QTableWidget_CellChanged(void* ptr, int row, int column);
void QTableWidget_ConnectCellClicked(void* ptr, long long t);
void QTableWidget_DisconnectCellClicked(void* ptr);
void QTableWidget_CellClicked(void* ptr, int row, int column);
void QTableWidget_ConnectCellDoubleClicked(void* ptr, long long t);
void QTableWidget_DisconnectCellDoubleClicked(void* ptr);
void QTableWidget_CellDoubleClicked(void* ptr, int row, int column);
void QTableWidget_ConnectCellEntered(void* ptr, long long t);
void QTableWidget_DisconnectCellEntered(void* ptr);
void QTableWidget_CellEntered(void* ptr, int row, int column);
void QTableWidget_ConnectCellPressed(void* ptr, long long t);
void QTableWidget_DisconnectCellPressed(void* ptr);
void QTableWidget_CellPressed(void* ptr, int row, int column);
void* QTableWidget_CellWidget(void* ptr, int row, int column);
void QTableWidget_Clear(void* ptr);
void QTableWidget_ClearDefault(void* ptr);
void QTableWidget_ClearContents(void* ptr);
void QTableWidget_ClearContentsDefault(void* ptr);
void QTableWidget_ClosePersistentEditor(void* ptr, void* item);
int QTableWidget_Column(void* ptr, void* item);
int QTableWidget_ColumnCount(void* ptr);
void QTableWidget_ConnectCurrentCellChanged(void* ptr, long long t);
void QTableWidget_DisconnectCurrentCellChanged(void* ptr);
void QTableWidget_CurrentCellChanged(void* ptr, int currentRow, int currentColumn, int previousRow, int previousColumn);
int QTableWidget_CurrentColumn(void* ptr);
void* QTableWidget_CurrentItem(void* ptr);
void QTableWidget_ConnectCurrentItemChanged(void* ptr, long long t);
void QTableWidget_DisconnectCurrentItemChanged(void* ptr);
void QTableWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
int QTableWidget_CurrentRow(void* ptr);
char QTableWidget_DropMimeData(void* ptr, int row, int column, void* data, long long action);
char QTableWidget_DropMimeDataDefault(void* ptr, int row, int column, void* data, long long action);
void QTableWidget_EditItem(void* ptr, void* item);
struct QtWidgets_PackedList QTableWidget_FindItems(void* ptr, struct QtWidgets_PackedString text, long long flags);
void* QTableWidget_HorizontalHeaderItem(void* ptr, int column);
void* QTableWidget_IndexFromItem(void* ptr, void* item);
void QTableWidget_InsertColumn(void* ptr, int column);
void QTableWidget_InsertColumnDefault(void* ptr, int column);
void QTableWidget_InsertRow(void* ptr, int row);
void QTableWidget_InsertRowDefault(void* ptr, int row);
char QTableWidget_IsPersistentEditorOpen(void* ptr, void* item);
void* QTableWidget_Item(void* ptr, int row, int column);
void QTableWidget_ConnectItemActivated(void* ptr, long long t);
void QTableWidget_DisconnectItemActivated(void* ptr);
void QTableWidget_ItemActivated(void* ptr, void* item);
void* QTableWidget_ItemAt(void* ptr, void* point);
void* QTableWidget_ItemAt2(void* ptr, int ax, int ay);
void QTableWidget_ConnectItemChanged(void* ptr, long long t);
void QTableWidget_DisconnectItemChanged(void* ptr);
void QTableWidget_ItemChanged(void* ptr, void* item);
void QTableWidget_ConnectItemClicked(void* ptr, long long t);
void QTableWidget_DisconnectItemClicked(void* ptr);
void QTableWidget_ItemClicked(void* ptr, void* item);
void QTableWidget_ConnectItemDoubleClicked(void* ptr, long long t);
void QTableWidget_DisconnectItemDoubleClicked(void* ptr);
void QTableWidget_ItemDoubleClicked(void* ptr, void* item);
void QTableWidget_ConnectItemEntered(void* ptr, long long t);
void QTableWidget_DisconnectItemEntered(void* ptr);
void QTableWidget_ItemEntered(void* ptr, void* item);
void* QTableWidget_ItemFromIndex(void* ptr, void* index);
void QTableWidget_ConnectItemPressed(void* ptr, long long t);
void QTableWidget_DisconnectItemPressed(void* ptr);
void QTableWidget_ItemPressed(void* ptr, void* item);
void* QTableWidget_ItemPrototype(void* ptr);
void QTableWidget_ConnectItemSelectionChanged(void* ptr, long long t);
void QTableWidget_DisconnectItemSelectionChanged(void* ptr);
void QTableWidget_ItemSelectionChanged(void* ptr);
struct QtWidgets_PackedList QTableWidget_Items(void* ptr, void* data);
void* QTableWidget_MimeData(void* ptr, void* items);
void* QTableWidget_MimeDataDefault(void* ptr, void* items);
struct QtWidgets_PackedString QTableWidget_MimeTypes(void* ptr);
struct QtWidgets_PackedString QTableWidget_MimeTypesDefault(void* ptr);
void QTableWidget_OpenPersistentEditor(void* ptr, void* item);
void QTableWidget_RemoveCellWidget(void* ptr, int row, int column);
void QTableWidget_RemoveColumn(void* ptr, int column);
void QTableWidget_RemoveColumnDefault(void* ptr, int column);
void QTableWidget_RemoveRow(void* ptr, int row);
void QTableWidget_RemoveRowDefault(void* ptr, int row);
int QTableWidget_Row(void* ptr, void* item);
int QTableWidget_RowCount(void* ptr);
void QTableWidget_ScrollToItem(void* ptr, void* item, long long hint);
void QTableWidget_ScrollToItemDefault(void* ptr, void* item, long long hint);
struct QtWidgets_PackedList QTableWidget_SelectedItems(void* ptr);
struct QtWidgets_PackedList QTableWidget_SelectedRanges(void* ptr);
void QTableWidget_SetCellWidget(void* ptr, int row, int column, void* widget);
void QTableWidget_SetColumnCount(void* ptr, int columns);
void QTableWidget_SetCurrentCell(void* ptr, int row, int column);
void QTableWidget_SetCurrentCell2(void* ptr, int row, int column, long long command);
void QTableWidget_SetCurrentItem(void* ptr, void* item);
void QTableWidget_SetCurrentItem2(void* ptr, void* item, long long command);
void QTableWidget_SetHorizontalHeaderItem(void* ptr, int column, void* item);
void QTableWidget_SetHorizontalHeaderLabels(void* ptr, struct QtWidgets_PackedString labels);
void QTableWidget_SetItem(void* ptr, int row, int column, void* item);
void QTableWidget_SetItemPrototype(void* ptr, void* item);
void QTableWidget_SetRangeSelected(void* ptr, void* ran, char sele);
void QTableWidget_SetRowCount(void* ptr, int rows);
void QTableWidget_SetVerticalHeaderItem(void* ptr, int row, void* item);
void QTableWidget_SetVerticalHeaderLabels(void* ptr, struct QtWidgets_PackedString labels);
void QTableWidget_SortItems(void* ptr, int column, long long order);
long long QTableWidget_SupportedDropActions(void* ptr);
long long QTableWidget_SupportedDropActionsDefault(void* ptr);
void* QTableWidget_TakeHorizontalHeaderItem(void* ptr, int column);
void* QTableWidget_TakeItem(void* ptr, int row, int column);
void* QTableWidget_TakeVerticalHeaderItem(void* ptr, int row);
void* QTableWidget_VerticalHeaderItem(void* ptr, int row);
int QTableWidget_VisualColumn(void* ptr, int logicalColumn);
void* QTableWidget_VisualItemRect(void* ptr, void* item);
int QTableWidget_VisualRow(void* ptr, int logicalRow);
void QTableWidget_DestroyQTableWidget(void* ptr);
void QTableWidget_DestroyQTableWidgetDefault(void* ptr);
void* QTableWidget___findItems_atList(void* ptr, int i);
void QTableWidget___findItems_setList(void* ptr, void* i);
void* QTableWidget___findItems_newList(void* ptr);
void* QTableWidget___items_atList(void* ptr, int i);
void QTableWidget___items_setList(void* ptr, void* i);
void* QTableWidget___items_newList(void* ptr);
void* QTableWidget___mimeData_items_atList(void* ptr, int i);
void QTableWidget___mimeData_items_setList(void* ptr, void* i);
void* QTableWidget___mimeData_items_newList(void* ptr);
void* QTableWidget___selectedItems_atList(void* ptr, int i);
void QTableWidget___selectedItems_setList(void* ptr, void* i);
void* QTableWidget___selectedItems_newList(void* ptr);
void* QTableWidget___selectedRanges_atList(void* ptr, int i);
void QTableWidget___selectedRanges_setList(void* ptr, void* i);
void* QTableWidget___selectedRanges_newList(void* ptr);
void* QTableWidgetItem_NewQTableWidgetItem(int ty);
void* QTableWidgetItem_NewQTableWidgetItem2(struct QtWidgets_PackedString text, int ty);
void* QTableWidgetItem_NewQTableWidgetItem3(void* icon, struct QtWidgets_PackedString text, int ty);
void* QTableWidgetItem_NewQTableWidgetItem4(void* other);
void* QTableWidgetItem_Background(void* ptr);
long long QTableWidgetItem_CheckState(void* ptr);
void* QTableWidgetItem_Clone(void* ptr);
void* QTableWidgetItem_CloneDefault(void* ptr);
int QTableWidgetItem_Column(void* ptr);
void* QTableWidgetItem_Data(void* ptr, int role);
void* QTableWidgetItem_DataDefault(void* ptr, int role);
long long QTableWidgetItem_Flags(void* ptr);
void* QTableWidgetItem_Font(void* ptr);
void* QTableWidgetItem_Foreground(void* ptr);
void* QTableWidgetItem_Icon(void* ptr);
char QTableWidgetItem_IsSelected(void* ptr);
void QTableWidgetItem_Read(void* ptr, void* in);
void QTableWidgetItem_ReadDefault(void* ptr, void* in);
int QTableWidgetItem_Row(void* ptr);
void QTableWidgetItem_SetBackground(void* ptr, void* brush);
void QTableWidgetItem_SetCheckState(void* ptr, long long state);
void QTableWidgetItem_SetData(void* ptr, int role, void* value);
void QTableWidgetItem_SetDataDefault(void* ptr, int role, void* value);
void QTableWidgetItem_SetFlags(void* ptr, long long flags);
void QTableWidgetItem_SetFont(void* ptr, void* font);
void QTableWidgetItem_SetForeground(void* ptr, void* brush);
void QTableWidgetItem_SetIcon(void* ptr, void* icon);
void QTableWidgetItem_SetSelected(void* ptr, char sele);
void QTableWidgetItem_SetSizeHint(void* ptr, void* size);
void QTableWidgetItem_SetStatusTip(void* ptr, struct QtWidgets_PackedString statusTip);
void QTableWidgetItem_SetText(void* ptr, struct QtWidgets_PackedString text);
void QTableWidgetItem_SetTextAlignment(void* ptr, int alignment);
void QTableWidgetItem_SetToolTip(void* ptr, struct QtWidgets_PackedString toolTip);
void QTableWidgetItem_SetWhatsThis(void* ptr, struct QtWidgets_PackedString whatsThis);
void* QTableWidgetItem_SizeHint(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_StatusTip(void* ptr);
void* QTableWidgetItem_TableWidget(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_Text(void* ptr);
int QTableWidgetItem_TextAlignment(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_ToolTip(void* ptr);
int QTableWidgetItem_Type(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_WhatsThis(void* ptr);
void QTableWidgetItem_Write(void* ptr, void* out);
void QTableWidgetItem_WriteDefault(void* ptr, void* out);
void QTableWidgetItem_DestroyQTableWidgetItem(void* ptr);
void QTableWidgetItem_DestroyQTableWidgetItemDefault(void* ptr);
void* QTableWidgetItem___values_newList(void* ptr);
void* QTableWidgetItem___setValues__newList(void* ptr);
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange();
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange2(int top, int left, int bottom, int right);
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange3(void* other);
int QTableWidgetSelectionRange_BottomRow(void* ptr);
int QTableWidgetSelectionRange_ColumnCount(void* ptr);
int QTableWidgetSelectionRange_LeftColumn(void* ptr);
int QTableWidgetSelectionRange_RightColumn(void* ptr);
int QTableWidgetSelectionRange_RowCount(void* ptr);
int QTableWidgetSelectionRange_TopRow(void* ptr);
void QTableWidgetSelectionRange_DestroyQTableWidgetSelectionRange(void* ptr);
void* QTapAndHoldGesture_Position(void* ptr);
void QTapAndHoldGesture_SetPosition(void* ptr, void* pos);
void QTapAndHoldGesture_QTapAndHoldGesture_SetTimeout(int msecs);
int QTapAndHoldGesture_QTapAndHoldGesture_Timeout();
void QTapAndHoldGesture_DestroyQTapAndHoldGesture(void* ptr);
void QTapAndHoldGesture_DestroyQTapAndHoldGestureDefault(void* ptr);
void* QTapGesture_Position(void* ptr);
void QTapGesture_SetPosition(void* ptr, void* pos);
void QTapGesture_DestroyQTapGesture(void* ptr);
void QTapGesture_DestroyQTapGestureDefault(void* ptr);
void* QTextBrowser_NewQTextBrowser(void* parent);
void QTextBrowser_ConnectAnchorClicked(void* ptr, long long t);
void QTextBrowser_DisconnectAnchorClicked(void* ptr);
void QTextBrowser_AnchorClicked(void* ptr, void* link);
void QTextBrowser_Backward(void* ptr);
void QTextBrowser_BackwardDefault(void* ptr);
void QTextBrowser_ConnectBackwardAvailable(void* ptr, long long t);
void QTextBrowser_DisconnectBackwardAvailable(void* ptr);
void QTextBrowser_BackwardAvailable(void* ptr, char available);
int QTextBrowser_BackwardHistoryCount(void* ptr);
void QTextBrowser_ClearHistory(void* ptr);
void QTextBrowser_DoSetSource(void* ptr, void* url, long long ty);
void QTextBrowser_Forward(void* ptr);
void QTextBrowser_ForwardDefault(void* ptr);
void QTextBrowser_ConnectForwardAvailable(void* ptr, long long t);
void QTextBrowser_DisconnectForwardAvailable(void* ptr);
void QTextBrowser_ForwardAvailable(void* ptr, char available);
int QTextBrowser_ForwardHistoryCount(void* ptr);
void QTextBrowser_ConnectHighlighted(void* ptr, long long t);
void QTextBrowser_DisconnectHighlighted(void* ptr);
void QTextBrowser_Highlighted(void* ptr, void* link);
void QTextBrowser_ConnectHistoryChanged(void* ptr, long long t);
void QTextBrowser_DisconnectHistoryChanged(void* ptr);
void QTextBrowser_HistoryChanged(void* ptr);
struct QtWidgets_PackedString QTextBrowser_HistoryTitle(void* ptr, int i);
void* QTextBrowser_HistoryUrl(void* ptr, int i);
void QTextBrowser_Home(void* ptr);
void QTextBrowser_HomeDefault(void* ptr);
char QTextBrowser_IsBackwardAvailable(void* ptr);
char QTextBrowser_IsForwardAvailable(void* ptr);
char QTextBrowser_OpenExternalLinks(void* ptr);
char QTextBrowser_OpenLinks(void* ptr);
void QTextBrowser_Reload(void* ptr);
void QTextBrowser_ReloadDefault(void* ptr);
struct QtWidgets_PackedString QTextBrowser_SearchPaths(void* ptr);
void QTextBrowser_SetOpenExternalLinks(void* ptr, char open);
void QTextBrowser_SetOpenLinks(void* ptr, char open);
void QTextBrowser_SetSearchPaths(void* ptr, struct QtWidgets_PackedString paths);
void QTextBrowser_SetSource(void* ptr, void* name);
void QTextBrowser_SetSourceDefault(void* ptr, void* name);
void QTextBrowser_SetSource2(void* ptr, void* url, long long ty);
void QTextBrowser_SetSource2Default(void* ptr, void* url, long long ty);
void* QTextBrowser_Source(void* ptr);
void QTextBrowser_ConnectSourceChanged(void* ptr, long long t);
void QTextBrowser_DisconnectSourceChanged(void* ptr);
void QTextBrowser_SourceChanged(void* ptr, void* src);
long long QTextBrowser_SourceType(void* ptr);
char QTextBrowser_IsReadOnly(void* ptr);
void QTextBrowser_SetReadOnly(void* ptr, char readOnly);
char QTextBrowser_IsUndoRedoEnabled(void* ptr);
void QTextBrowser_SetUndoRedoEnabled(void* ptr, char undoRedoEnabled);
void* QTextEdit_NewQTextEdit(void* parent);
void* QTextEdit_NewQTextEdit2(struct QtWidgets_PackedString text, void* parent);
char QTextEdit_AcceptRichText(void* ptr);
long long QTextEdit_Alignment(void* ptr);
struct QtWidgets_PackedString QTextEdit_AnchorAt(void* ptr, void* pos);
void QTextEdit_Append(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_AppendDefault(void* ptr, struct QtWidgets_PackedString text);
long long QTextEdit_AutoFormatting(void* ptr);
char QTextEdit_CanInsertFromMimeData(void* ptr, void* source);
char QTextEdit_CanInsertFromMimeDataDefault(void* ptr, void* source);
char QTextEdit_CanPaste(void* ptr);
void QTextEdit_Clear(void* ptr);
void QTextEdit_ClearDefault(void* ptr);
void QTextEdit_Copy(void* ptr);
void QTextEdit_CopyDefault(void* ptr);
void QTextEdit_ConnectCopyAvailable(void* ptr, long long t);
void QTextEdit_DisconnectCopyAvailable(void* ptr);
void QTextEdit_CopyAvailable(void* ptr, char yes);
void* QTextEdit_CreateMimeDataFromSelection(void* ptr);
void* QTextEdit_CreateMimeDataFromSelectionDefault(void* ptr);
void* QTextEdit_CreateStandardContextMenu(void* ptr);
void* QTextEdit_CreateStandardContextMenu2(void* ptr, void* position);
void* QTextEdit_CurrentCharFormat(void* ptr);
void QTextEdit_ConnectCurrentCharFormatChanged(void* ptr, long long t);
void QTextEdit_DisconnectCurrentCharFormatChanged(void* ptr);
void QTextEdit_CurrentCharFormatChanged(void* ptr, void* ff);
void* QTextEdit_CurrentFont(void* ptr);
void* QTextEdit_CursorForPosition(void* ptr, void* pos);
void QTextEdit_ConnectCursorPositionChanged(void* ptr, long long t);
void QTextEdit_DisconnectCursorPositionChanged(void* ptr);
void QTextEdit_CursorPositionChanged(void* ptr);
void* QTextEdit_CursorRect(void* ptr, void* cursor);
void* QTextEdit_CursorRect2(void* ptr);
int QTextEdit_CursorWidth(void* ptr);
void QTextEdit_Cut(void* ptr);
void QTextEdit_CutDefault(void* ptr);
void* QTextEdit_Document(void* ptr);
struct QtWidgets_PackedString QTextEdit_DocumentTitle(void* ptr);
void QTextEdit_EnsureCursorVisible(void* ptr);
char QTextEdit_Find(void* ptr, struct QtWidgets_PackedString exp, long long options);
char QTextEdit_Find2(void* ptr, void* exp, long long options);
char QTextEdit_Find3(void* ptr, void* exp, long long options);
struct QtWidgets_PackedString QTextEdit_FontFamily(void* ptr);
char QTextEdit_FontItalic(void* ptr);
double QTextEdit_FontPointSize(void* ptr);
char QTextEdit_FontUnderline(void* ptr);
int QTextEdit_FontWeight(void* ptr);
void QTextEdit_InsertFromMimeData(void* ptr, void* source);
void QTextEdit_InsertFromMimeDataDefault(void* ptr, void* source);
void QTextEdit_InsertHtml(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_InsertHtmlDefault(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_InsertPlainText(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_InsertPlainTextDefault(void* ptr, struct QtWidgets_PackedString text);
char QTextEdit_IsReadOnly(void* ptr);
char QTextEdit_IsUndoRedoEnabled(void* ptr);
int QTextEdit_LineWrapColumnOrWidth(void* ptr);
long long QTextEdit_LineWrapMode(void* ptr);
void* QTextEdit_LoadResource(void* ptr, int ty, void* name);
void* QTextEdit_LoadResourceDefault(void* ptr, int ty, void* name);
void QTextEdit_MergeCurrentCharFormat(void* ptr, void* modifier);
void QTextEdit_MoveCursor(void* ptr, long long operation, long long mode);
char QTextEdit_OverwriteMode(void* ptr);
void QTextEdit_Paste(void* ptr);
void QTextEdit_PasteDefault(void* ptr);
struct QtWidgets_PackedString QTextEdit_PlaceholderText(void* ptr);
void QTextEdit_Print(void* ptr, void* printer);
void QTextEdit_Redo(void* ptr);
void QTextEdit_RedoDefault(void* ptr);
void QTextEdit_ConnectRedoAvailable(void* ptr, long long t);
void QTextEdit_DisconnectRedoAvailable(void* ptr);
void QTextEdit_RedoAvailable(void* ptr, char available);
void QTextEdit_ScrollToAnchor(void* ptr, struct QtWidgets_PackedString name);
void QTextEdit_ScrollToAnchorDefault(void* ptr, struct QtWidgets_PackedString name);
void QTextEdit_SelectAll(void* ptr);
void QTextEdit_SelectAllDefault(void* ptr);
void QTextEdit_ConnectSelectionChanged(void* ptr, long long t);
void QTextEdit_DisconnectSelectionChanged(void* ptr);
void QTextEdit_SelectionChanged(void* ptr);
void QTextEdit_SetAcceptRichText(void* ptr, char accept);
void QTextEdit_SetAlignment(void* ptr, long long a);
void QTextEdit_SetAlignmentDefault(void* ptr, long long a);
void QTextEdit_SetAutoFormatting(void* ptr, long long features);
void QTextEdit_SetCurrentCharFormat(void* ptr, void* format);
void QTextEdit_SetCurrentFont(void* ptr, void* ff);
void QTextEdit_SetCurrentFontDefault(void* ptr, void* ff);
void QTextEdit_SetCursorWidth(void* ptr, int width);
void QTextEdit_SetDocument(void* ptr, void* document);
void QTextEdit_SetDocumentTitle(void* ptr, struct QtWidgets_PackedString title);
void QTextEdit_SetFontFamily(void* ptr, struct QtWidgets_PackedString fontFamily);
void QTextEdit_SetFontFamilyDefault(void* ptr, struct QtWidgets_PackedString fontFamily);
void QTextEdit_SetFontItalic(void* ptr, char italic);
void QTextEdit_SetFontItalicDefault(void* ptr, char italic);
void QTextEdit_SetFontPointSize(void* ptr, double s);
void QTextEdit_SetFontPointSizeDefault(void* ptr, double s);
void QTextEdit_SetFontUnderline(void* ptr, char underline);
void QTextEdit_SetFontUnderlineDefault(void* ptr, char underline);
void QTextEdit_SetFontWeight(void* ptr, int weight);
void QTextEdit_SetFontWeightDefault(void* ptr, int weight);
void QTextEdit_SetHtml(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_SetHtmlDefault(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_SetLineWrapColumnOrWidth(void* ptr, int w);
void QTextEdit_SetLineWrapMode(void* ptr, long long mode);
void QTextEdit_SetMarkdown(void* ptr, struct QtWidgets_PackedString markdown);
void QTextEdit_SetMarkdownDefault(void* ptr, struct QtWidgets_PackedString markdown);
void QTextEdit_SetOverwriteMode(void* ptr, char overwrite);
void QTextEdit_SetPlaceholderText(void* ptr, struct QtWidgets_PackedString placeholderText);
void QTextEdit_SetPlainText(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_SetPlainTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_SetReadOnly(void* ptr, char ro);
void QTextEdit_SetTabChangesFocus(void* ptr, char b);
void QTextEdit_SetTabStopDistance(void* ptr, double distance);
void QTextEdit_SetTabStopWidth(void* ptr, int width);
void QTextEdit_SetText(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_SetTextDefault(void* ptr, struct QtWidgets_PackedString text);
void QTextEdit_SetTextBackgroundColor(void* ptr, void* c);
void QTextEdit_SetTextBackgroundColorDefault(void* ptr, void* c);
void QTextEdit_SetTextColor(void* ptr, void* c);
void QTextEdit_SetTextColorDefault(void* ptr, void* c);
void QTextEdit_SetTextCursor(void* ptr, void* cursor);
void QTextEdit_SetTextInteractionFlags(void* ptr, long long flags);
void QTextEdit_SetUndoRedoEnabled(void* ptr, char enable);
void QTextEdit_SetWordWrapMode(void* ptr, long long policy);
char QTextEdit_TabChangesFocus(void* ptr);
double QTextEdit_TabStopDistance(void* ptr);
int QTextEdit_TabStopWidth(void* ptr);
void* QTextEdit_TextBackgroundColor(void* ptr);
void QTextEdit_ConnectTextChanged(void* ptr, long long t);
void QTextEdit_DisconnectTextChanged(void* ptr);
void QTextEdit_TextChanged(void* ptr);
void* QTextEdit_TextColor(void* ptr);
void* QTextEdit_TextCursor(void* ptr);
long long QTextEdit_TextInteractionFlags(void* ptr);
struct QtWidgets_PackedString QTextEdit_ToHtml(void* ptr);
struct QtWidgets_PackedString QTextEdit_ToPlainText(void* ptr);
void QTextEdit_Undo(void* ptr);
void QTextEdit_UndoDefault(void* ptr);
void QTextEdit_ConnectUndoAvailable(void* ptr, long long t);
void QTextEdit_DisconnectUndoAvailable(void* ptr);
void QTextEdit_UndoAvailable(void* ptr, char available);
long long QTextEdit_WordWrapMode(void* ptr);
void QTextEdit_ZoomIn(void* ptr, int ran);
void QTextEdit_ZoomInDefault(void* ptr, int ran);
void QTextEdit_ZoomOut(void* ptr, int ran);
void QTextEdit_ZoomOutDefault(void* ptr, int ran);
void QTextEdit_DestroyQTextEdit(void* ptr);
void QTextEdit_DestroyQTextEditDefault(void* ptr);
void* QTileRules_NewQTileRules(long long horizontalRule, long long verticalRule);
void* QTileRules_NewQTileRules2(long long rule);
void* QTimeEdit_NewQTimeEdit(void* parent);
void* QTimeEdit_NewQTimeEdit2(void* ti, void* parent);
void QTimeEdit_DestroyQTimeEdit(void* ptr);
void QTimeEdit_DestroyQTimeEditDefault(void* ptr);
void* QToolBar_NewQToolBar(struct QtWidgets_PackedString title, void* parent);
void* QToolBar_NewQToolBar2(void* parent);
void* QToolBar_ActionAt(void* ptr, void* p);
void* QToolBar_ActionAt2(void* ptr, int x, int y);
void QToolBar_ConnectActionTriggered(void* ptr, long long t);
void QToolBar_DisconnectActionTriggered(void* ptr);
void QToolBar_ActionTriggered(void* ptr, void* action);
void* QToolBar_AddAction(void* ptr, struct QtWidgets_PackedString text);
void* QToolBar_AddAction2(void* ptr, void* icon, struct QtWidgets_PackedString text);
void* QToolBar_AddAction3(void* ptr, struct QtWidgets_PackedString text, void* receiver, char* member);
void* QToolBar_AddAction4(void* ptr, void* icon, struct QtWidgets_PackedString text, void* receiver, char* member);
void* QToolBar_AddSeparator(void* ptr);
void* QToolBar_AddWidget(void* ptr, void* widget);
long long QToolBar_AllowedAreas(void* ptr);
void QToolBar_ConnectAllowedAreasChanged(void* ptr, long long t);
void QToolBar_DisconnectAllowedAreasChanged(void* ptr);
void QToolBar_AllowedAreasChanged(void* ptr, long long allowedAreas);
void QToolBar_Clear(void* ptr);
void* QToolBar_IconSize(void* ptr);
void QToolBar_ConnectIconSizeChanged(void* ptr, long long t);
void QToolBar_DisconnectIconSizeChanged(void* ptr);
void QToolBar_IconSizeChanged(void* ptr, void* iconSize);
void* QToolBar_InsertSeparator(void* ptr, void* before);
void* QToolBar_InsertWidget(void* ptr, void* before, void* widget);
char QToolBar_IsAreaAllowed(void* ptr, long long area);
char QToolBar_IsFloatable(void* ptr);
char QToolBar_IsFloating(void* ptr);
char QToolBar_IsMovable(void* ptr);
void QToolBar_ConnectMovableChanged(void* ptr, long long t);
void QToolBar_DisconnectMovableChanged(void* ptr);
void QToolBar_MovableChanged(void* ptr, char movable);
long long QToolBar_Orientation(void* ptr);
void QToolBar_ConnectOrientationChanged(void* ptr, long long t);
void QToolBar_DisconnectOrientationChanged(void* ptr);
void QToolBar_OrientationChanged(void* ptr, long long orientation);
void QToolBar_SetAllowedAreas(void* ptr, long long areas);
void QToolBar_SetFloatable(void* ptr, char floatable);
void QToolBar_SetIconSize(void* ptr, void* iconSize);
void QToolBar_SetIconSizeDefault(void* ptr, void* iconSize);
void QToolBar_SetMovable(void* ptr, char movable);
void QToolBar_SetOrientation(void* ptr, long long orientation);
void QToolBar_SetToolButtonStyle(void* ptr, long long toolButtonStyle);
void QToolBar_SetToolButtonStyleDefault(void* ptr, long long toolButtonStyle);
void* QToolBar_ToggleViewAction(void* ptr);
long long QToolBar_ToolButtonStyle(void* ptr);
void QToolBar_ConnectToolButtonStyleChanged(void* ptr, long long t);
void QToolBar_DisconnectToolButtonStyleChanged(void* ptr);
void QToolBar_ToolButtonStyleChanged(void* ptr, long long toolButtonStyle);
void QToolBar_ConnectTopLevelChanged(void* ptr, long long t);
void QToolBar_DisconnectTopLevelChanged(void* ptr);
void QToolBar_TopLevelChanged(void* ptr, char topLevel);
void QToolBar_ConnectVisibilityChanged(void* ptr, long long t);
void QToolBar_DisconnectVisibilityChanged(void* ptr);
void QToolBar_VisibilityChanged(void* ptr, char visible);
void* QToolBar_WidgetForAction(void* ptr, void* action);
void QToolBar_DestroyQToolBar(void* ptr);
void QToolBar_DestroyQToolBarDefault(void* ptr);
void* QToolBox_NewQToolBox(void* parent, long long ff);
int QToolBox_AddItem(void* ptr, void* widget, void* iconSet, struct QtWidgets_PackedString text);
int QToolBox_AddItem2(void* ptr, void* w, struct QtWidgets_PackedString text);
int QToolBox_Count(void* ptr);
void QToolBox_ConnectCurrentChanged(void* ptr, long long t);
void QToolBox_DisconnectCurrentChanged(void* ptr);
void QToolBox_CurrentChanged(void* ptr, int index);
int QToolBox_CurrentIndex(void* ptr);
void* QToolBox_CurrentWidget(void* ptr);
int QToolBox_IndexOf(void* ptr, void* widget);
int QToolBox_InsertItem(void* ptr, int index, void* widget, void* icon, struct QtWidgets_PackedString text);
int QToolBox_InsertItem2(void* ptr, int index, void* widget, struct QtWidgets_PackedString text);
char QToolBox_IsItemEnabled(void* ptr, int index);
void* QToolBox_ItemIcon(void* ptr, int index);
void QToolBox_ItemInserted(void* ptr, int index);
void QToolBox_ItemInsertedDefault(void* ptr, int index);
void QToolBox_ItemRemoved(void* ptr, int index);
void QToolBox_ItemRemovedDefault(void* ptr, int index);
struct QtWidgets_PackedString QToolBox_ItemText(void* ptr, int index);
struct QtWidgets_PackedString QToolBox_ItemToolTip(void* ptr, int index);
void QToolBox_RemoveItem(void* ptr, int index);
void QToolBox_SetCurrentIndex(void* ptr, int index);
void QToolBox_SetCurrentIndexDefault(void* ptr, int index);
void QToolBox_SetCurrentWidget(void* ptr, void* widget);
void QToolBox_SetCurrentWidgetDefault(void* ptr, void* widget);
void QToolBox_SetItemEnabled(void* ptr, int index, char enabled);
void QToolBox_SetItemIcon(void* ptr, int index, void* icon);
void QToolBox_SetItemText(void* ptr, int index, struct QtWidgets_PackedString text);
void QToolBox_SetItemToolTip(void* ptr, int index, struct QtWidgets_PackedString toolTip);
void* QToolBox_Widget(void* ptr, int index);
void QToolBox_DestroyQToolBox(void* ptr);
void QToolBox_DestroyQToolBoxDefault(void* ptr);
void* QToolButton_NewQToolButton(void* parent);
long long QToolButton_ArrowType(void* ptr);
char QToolButton_AutoRaise(void* ptr);
void* QToolButton_DefaultAction(void* ptr);
void QToolButton_InitStyleOption(void* ptr, void* option);
void* QToolButton_Menu(void* ptr);
void QToolButton_PaintEvent(void* ptr, void* event);
void QToolButton_PaintEventDefault(void* ptr, void* event);
long long QToolButton_PopupMode(void* ptr);
void QToolButton_SetArrowType(void* ptr, long long ty);
void QToolButton_SetAutoRaise(void* ptr, char enable);
void QToolButton_SetDefaultAction(void* ptr, void* action);
void QToolButton_SetDefaultActionDefault(void* ptr, void* action);
void QToolButton_SetMenu(void* ptr, void* menu);
void QToolButton_SetPopupMode(void* ptr, long long mode);
void QToolButton_SetToolButtonStyle(void* ptr, long long style);
void QToolButton_SetToolButtonStyleDefault(void* ptr, long long style);
void QToolButton_ShowMenu(void* ptr);
void QToolButton_ShowMenuDefault(void* ptr);
long long QToolButton_ToolButtonStyle(void* ptr);
void QToolButton_ConnectTriggered(void* ptr, long long t);
void QToolButton_DisconnectTriggered(void* ptr);
void QToolButton_Triggered(void* ptr, void* action);
void QToolButton_DestroyQToolButton(void* ptr);
void QToolButton_DestroyQToolButtonDefault(void* ptr);
void* QToolTip_QToolTip_Font();
void QToolTip_QToolTip_HideText();
char QToolTip_QToolTip_IsVisible();
void* QToolTip_QToolTip_Palette();
void QToolTip_QToolTip_SetFont(void* font);
void QToolTip_QToolTip_SetPalette(void* palette);
void QToolTip_QToolTip_ShowText(void* pos, struct QtWidgets_PackedString text, void* w, void* rect);
void QToolTip_QToolTip_ShowText2(void* pos, struct QtWidgets_PackedString text, void* w);
void QToolTip_QToolTip_ShowText3(void* pos, struct QtWidgets_PackedString text, void* w, void* rect, int msecDisplayTime);
struct QtWidgets_PackedString QToolTip_QToolTip_Text();
void* QTreeView_NewQTreeView(void* parent);
char QTreeView_AllColumnsShowFocus(void* ptr);
int QTreeView_AutoExpandDelay(void* ptr);
void QTreeView_Collapse(void* ptr, void* index);
void QTreeView_CollapseDefault(void* ptr, void* index);
void QTreeView_CollapseAll(void* ptr);
void QTreeView_CollapseAllDefault(void* ptr);
void QTreeView_ConnectCollapsed(void* ptr, long long t);
void QTreeView_DisconnectCollapsed(void* ptr);
void QTreeView_Collapsed(void* ptr, void* index);
int QTreeView_ColumnAt(void* ptr, int x);
void QTreeView_ColumnCountChanged(void* ptr, int oldCount, int newCount);
void QTreeView_ColumnCountChangedDefault(void* ptr, int oldCount, int newCount);
void QTreeView_ColumnMoved(void* ptr);
void QTreeView_ColumnMovedDefault(void* ptr);
void QTreeView_ColumnResized(void* ptr, int column, int oldSize, int newSize);
void QTreeView_ColumnResizedDefault(void* ptr, int column, int oldSize, int newSize);
int QTreeView_ColumnViewportPosition(void* ptr, int column);
int QTreeView_ColumnWidth(void* ptr, int column);
void QTreeView_CurrentChanged(void* ptr, void* current, void* previous);
void QTreeView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTreeView_DataChanged(void* ptr, void* topLeft, void* bottomRight, void* roles);
void QTreeView_DataChangedDefault(void* ptr, void* topLeft, void* bottomRight, void* roles);
void QTreeView_DrawBranches(void* ptr, void* painter, void* rect, void* index);
void QTreeView_DrawBranchesDefault(void* ptr, void* painter, void* rect, void* index);
void QTreeView_DrawRow(void* ptr, void* painter, void* option, void* index);
void QTreeView_DrawRowDefault(void* ptr, void* painter, void* option, void* index);
void QTreeView_DrawTree(void* ptr, void* painter, void* region);
void QTreeView_Expand(void* ptr, void* index);
void QTreeView_ExpandDefault(void* ptr, void* index);
void QTreeView_ExpandAll(void* ptr);
void QTreeView_ExpandAllDefault(void* ptr);
void QTreeView_ExpandRecursively(void* ptr, void* index, int depth);
void QTreeView_ExpandRecursivelyDefault(void* ptr, void* index, int depth);
void QTreeView_ExpandToDepth(void* ptr, int depth);
void QTreeView_ExpandToDepthDefault(void* ptr, int depth);
void QTreeView_ConnectExpanded(void* ptr, long long t);
void QTreeView_DisconnectExpanded(void* ptr);
void QTreeView_Expanded(void* ptr, void* index);
char QTreeView_ExpandsOnDoubleClick(void* ptr);
void* QTreeView_Header(void* ptr);
void QTreeView_HideColumn(void* ptr, int column);
void QTreeView_HideColumnDefault(void* ptr, int column);
int QTreeView_HorizontalOffset(void* ptr);
int QTreeView_HorizontalOffsetDefault(void* ptr);
int QTreeView_Indentation(void* ptr);
void* QTreeView_IndexAbove(void* ptr, void* index);
void* QTreeView_IndexAt(void* ptr, void* point);
void* QTreeView_IndexAtDefault(void* ptr, void* point);
void* QTreeView_IndexBelow(void* ptr, void* index);
int QTreeView_IndexRowSizeHint(void* ptr, void* index);
char QTreeView_IsAnimated(void* ptr);
char QTreeView_IsColumnHidden(void* ptr, int column);
char QTreeView_IsExpanded(void* ptr, void* index);
char QTreeView_IsFirstColumnSpanned(void* ptr, int row, void* parent);
char QTreeView_IsHeaderHidden(void* ptr);
char QTreeView_IsIndexHidden(void* ptr, void* index);
char QTreeView_IsIndexHiddenDefault(void* ptr, void* index);
char QTreeView_IsRowHidden(void* ptr, int row, void* parent);
char QTreeView_IsSortingEnabled(void* ptr);
char QTreeView_ItemsExpandable(void* ptr);
void* QTreeView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QTreeView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QTreeView_Reset(void* ptr);
void QTreeView_ResetDefault(void* ptr);
void QTreeView_ResetIndentation(void* ptr);
void QTreeView_ResizeColumnToContents(void* ptr, int column);
void QTreeView_ResizeColumnToContentsDefault(void* ptr, int column);
char QTreeView_RootIsDecorated(void* ptr);
int QTreeView_RowHeight(void* ptr, void* index);
void QTreeView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTreeView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_RowsInserted(void* ptr, void* parent, int start, int end);
void QTreeView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_RowsRemoved(void* ptr, void* parent, int start, int end);
void QTreeView_RowsRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_ScrollTo(void* ptr, void* index, long long hint);
void QTreeView_ScrollToDefault(void* ptr, void* index, long long hint);
void QTreeView_SelectAll(void* ptr);
void QTreeView_SelectAllDefault(void* ptr);
void QTreeView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QTreeView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QTreeView_SetAllColumnsShowFocus(void* ptr, char enable);
void QTreeView_SetAnimated(void* ptr, char enable);
void QTreeView_SetAutoExpandDelay(void* ptr, int delay);
void QTreeView_SetColumnHidden(void* ptr, int column, char hide);
void QTreeView_SetColumnWidth(void* ptr, int column, int width);
void QTreeView_SetExpanded(void* ptr, void* index, char expanded);
void QTreeView_SetExpandsOnDoubleClick(void* ptr, char enable);
void QTreeView_SetFirstColumnSpanned(void* ptr, int row, void* parent, char span);
void QTreeView_SetHeader(void* ptr, void* header);
void QTreeView_SetHeaderHidden(void* ptr, char hide);
void QTreeView_SetIndentation(void* ptr, int i);
void QTreeView_SetItemsExpandable(void* ptr, char enable);
void QTreeView_SetRootIndex(void* ptr, void* index);
void QTreeView_SetRootIndexDefault(void* ptr, void* index);
void QTreeView_SetRootIsDecorated(void* ptr, char show);
void QTreeView_SetRowHidden(void* ptr, int row, void* parent, char hide);
void QTreeView_SetSelection(void* ptr, void* rect, long long command);
void QTreeView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QTreeView_SetSortingEnabled(void* ptr, char enable);
void QTreeView_SetTreePosition(void* ptr, int index);
void QTreeView_SetUniformRowHeights(void* ptr, char uniform);
void QTreeView_SetWordWrap(void* ptr, char on);
void QTreeView_ShowColumn(void* ptr, int column);
void QTreeView_ShowColumnDefault(void* ptr, int column);
void QTreeView_SortByColumn(void* ptr, int column, long long order);
void QTreeView_SortByColumnDefault(void* ptr, int column, long long order);
int QTreeView_TreePosition(void* ptr);
char QTreeView_UniformRowHeights(void* ptr);
void QTreeView_UpdateGeometries(void* ptr);
void QTreeView_UpdateGeometriesDefault(void* ptr);
int QTreeView_VerticalOffset(void* ptr);
int QTreeView_VerticalOffsetDefault(void* ptr);
void* QTreeView_VisualRect(void* ptr, void* index);
void* QTreeView_VisualRectDefault(void* ptr, void* index);
void* QTreeView_VisualRegionForSelection(void* ptr, void* selection);
void* QTreeView_VisualRegionForSelectionDefault(void* ptr, void* selection);
char QTreeView_WordWrap(void* ptr);
void QTreeView_DestroyQTreeView(void* ptr);
void QTreeView_DestroyQTreeViewDefault(void* ptr);
void* QTreeWidget_NewQTreeWidget(void* parent);
void QTreeWidget_AddTopLevelItem(void* ptr, void* item);
void QTreeWidget_AddTopLevelItems(void* ptr, void* items);
void QTreeWidget_Clear(void* ptr);
void QTreeWidget_ClearDefault(void* ptr);
void QTreeWidget_ClosePersistentEditor(void* ptr, void* item, int column);
void QTreeWidget_CollapseItem(void* ptr, void* item);
void QTreeWidget_CollapseItemDefault(void* ptr, void* item);
int QTreeWidget_ColumnCount(void* ptr);
int QTreeWidget_CurrentColumn(void* ptr);
void* QTreeWidget_CurrentItem(void* ptr);
void QTreeWidget_ConnectCurrentItemChanged(void* ptr, long long t);
void QTreeWidget_DisconnectCurrentItemChanged(void* ptr);
void QTreeWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
char QTreeWidget_DropMimeData(void* ptr, void* parent, int index, void* data, long long action);
char QTreeWidget_DropMimeDataDefault(void* ptr, void* parent, int index, void* data, long long action);
void QTreeWidget_EditItem(void* ptr, void* item, int column);
void QTreeWidget_ExpandItem(void* ptr, void* item);
void QTreeWidget_ExpandItemDefault(void* ptr, void* item);
struct QtWidgets_PackedList QTreeWidget_FindItems(void* ptr, struct QtWidgets_PackedString text, long long flags, int column);
void* QTreeWidget_HeaderItem(void* ptr);
void* QTreeWidget_IndexFromItem(void* ptr, void* item, int column);
int QTreeWidget_IndexOfTopLevelItem(void* ptr, void* item);
void QTreeWidget_InsertTopLevelItem(void* ptr, int index, void* item);
void QTreeWidget_InsertTopLevelItems(void* ptr, int index, void* items);
void* QTreeWidget_InvisibleRootItem(void* ptr);
char QTreeWidget_IsPersistentEditorOpen(void* ptr, void* item, int column);
void* QTreeWidget_ItemAbove(void* ptr, void* item);
void QTreeWidget_ConnectItemActivated(void* ptr, long long t);
void QTreeWidget_DisconnectItemActivated(void* ptr);
void QTreeWidget_ItemActivated(void* ptr, void* item, int column);
void* QTreeWidget_ItemAt(void* ptr, void* p);
void* QTreeWidget_ItemAt2(void* ptr, int x, int y);
void* QTreeWidget_ItemBelow(void* ptr, void* item);
void QTreeWidget_ConnectItemChanged(void* ptr, long long t);
void QTreeWidget_DisconnectItemChanged(void* ptr);
void QTreeWidget_ItemChanged(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemClicked(void* ptr, long long t);
void QTreeWidget_DisconnectItemClicked(void* ptr);
void QTreeWidget_ItemClicked(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemCollapsed(void* ptr, long long t);
void QTreeWidget_DisconnectItemCollapsed(void* ptr);
void QTreeWidget_ItemCollapsed(void* ptr, void* item);
void QTreeWidget_ConnectItemDoubleClicked(void* ptr, long long t);
void QTreeWidget_DisconnectItemDoubleClicked(void* ptr);
void QTreeWidget_ItemDoubleClicked(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemEntered(void* ptr, long long t);
void QTreeWidget_DisconnectItemEntered(void* ptr);
void QTreeWidget_ItemEntered(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemExpanded(void* ptr, long long t);
void QTreeWidget_DisconnectItemExpanded(void* ptr);
void QTreeWidget_ItemExpanded(void* ptr, void* item);
void* QTreeWidget_ItemFromIndex(void* ptr, void* index);
void QTreeWidget_ConnectItemPressed(void* ptr, long long t);
void QTreeWidget_DisconnectItemPressed(void* ptr);
void QTreeWidget_ItemPressed(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemSelectionChanged(void* ptr, long long t);
void QTreeWidget_DisconnectItemSelectionChanged(void* ptr);
void QTreeWidget_ItemSelectionChanged(void* ptr);
void* QTreeWidget_ItemWidget(void* ptr, void* item, int column);
void* QTreeWidget_MimeData(void* ptr, void* items);
void* QTreeWidget_MimeDataDefault(void* ptr, void* items);
struct QtWidgets_PackedString QTreeWidget_MimeTypes(void* ptr);
struct QtWidgets_PackedString QTreeWidget_MimeTypesDefault(void* ptr);
void QTreeWidget_OpenPersistentEditor(void* ptr, void* item, int column);
void QTreeWidget_RemoveItemWidget(void* ptr, void* item, int column);
void QTreeWidget_ScrollToItem(void* ptr, void* item, long long hint);
void QTreeWidget_ScrollToItemDefault(void* ptr, void* item, long long hint);
struct QtWidgets_PackedList QTreeWidget_SelectedItems(void* ptr);
void QTreeWidget_SetColumnCount(void* ptr, int columns);
void QTreeWidget_SetCurrentItem(void* ptr, void* item);
void QTreeWidget_SetCurrentItem2(void* ptr, void* item, int column);
void QTreeWidget_SetCurrentItem3(void* ptr, void* item, int column, long long command);
void QTreeWidget_SetHeaderItem(void* ptr, void* item);
void QTreeWidget_SetHeaderLabel(void* ptr, struct QtWidgets_PackedString label);
void QTreeWidget_SetHeaderLabels(void* ptr, struct QtWidgets_PackedString labels);
void QTreeWidget_SetItemWidget(void* ptr, void* item, int column, void* widget);
int QTreeWidget_SortColumn(void* ptr);
void QTreeWidget_SortItems(void* ptr, int column, long long order);
long long QTreeWidget_SupportedDropActions(void* ptr);
long long QTreeWidget_SupportedDropActionsDefault(void* ptr);
void* QTreeWidget_TakeTopLevelItem(void* ptr, int index);
void* QTreeWidget_TopLevelItem(void* ptr, int index);
int QTreeWidget_TopLevelItemCount(void* ptr);
void* QTreeWidget_VisualItemRect(void* ptr, void* item);
void QTreeWidget_DestroyQTreeWidget(void* ptr);
void QTreeWidget_DestroyQTreeWidgetDefault(void* ptr);
void* QTreeWidget___addTopLevelItems_items_atList(void* ptr, int i);
void QTreeWidget___addTopLevelItems_items_setList(void* ptr, void* i);
void* QTreeWidget___addTopLevelItems_items_newList(void* ptr);
void* QTreeWidget___findItems_atList(void* ptr, int i);
void QTreeWidget___findItems_setList(void* ptr, void* i);
void* QTreeWidget___findItems_newList(void* ptr);
void* QTreeWidget___insertTopLevelItems_items_atList(void* ptr, int i);
void QTreeWidget___insertTopLevelItems_items_setList(void* ptr, void* i);
void* QTreeWidget___insertTopLevelItems_items_newList(void* ptr);
void* QTreeWidget___items_atList(void* ptr, int i);
void QTreeWidget___items_setList(void* ptr, void* i);
void* QTreeWidget___items_newList(void* ptr);
void* QTreeWidget___mimeData_items_atList(void* ptr, int i);
void QTreeWidget___mimeData_items_setList(void* ptr, void* i);
void* QTreeWidget___mimeData_items_newList(void* ptr);
void* QTreeWidget___selectedItems_atList(void* ptr, int i);
void QTreeWidget___selectedItems_setList(void* ptr, void* i);
void* QTreeWidget___selectedItems_newList(void* ptr);
void* QTreeWidgetItem_NewQTreeWidgetItem(int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem2(struct QtWidgets_PackedString strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem3(void* parent, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem4(void* parent, struct QtWidgets_PackedString strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem5(void* parent, void* preceding, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem6(void* parent, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem7(void* parent, struct QtWidgets_PackedString strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem8(void* parent, void* preceding, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem9(void* other);
void QTreeWidgetItem_AddChild(void* ptr, void* child);
void QTreeWidgetItem_AddChildren(void* ptr, void* children);
void* QTreeWidgetItem_Background(void* ptr, int column);
long long QTreeWidgetItem_CheckState(void* ptr, int column);
void* QTreeWidgetItem_Child(void* ptr, int index);
int QTreeWidgetItem_ChildCount(void* ptr);
long long QTreeWidgetItem_ChildIndicatorPolicy(void* ptr);
void* QTreeWidgetItem_Clone(void* ptr);
void* QTreeWidgetItem_CloneDefault(void* ptr);
int QTreeWidgetItem_ColumnCount(void* ptr);
void* QTreeWidgetItem_Data(void* ptr, int column, int role);
void* QTreeWidgetItem_DataDefault(void* ptr, int column, int role);
void QTreeWidgetItem_EmitDataChanged(void* ptr);
long long QTreeWidgetItem_Flags(void* ptr);
void* QTreeWidgetItem_Font(void* ptr, int column);
void* QTreeWidgetItem_Foreground(void* ptr, int column);
void* QTreeWidgetItem_Icon(void* ptr, int column);
int QTreeWidgetItem_IndexOfChild(void* ptr, void* child);
void QTreeWidgetItem_InsertChild(void* ptr, int index, void* child);
void QTreeWidgetItem_InsertChildren(void* ptr, int index, void* children);
char QTreeWidgetItem_IsDisabled(void* ptr);
char QTreeWidgetItem_IsExpanded(void* ptr);
char QTreeWidgetItem_IsFirstColumnSpanned(void* ptr);
char QTreeWidgetItem_IsHidden(void* ptr);
char QTreeWidgetItem_IsSelected(void* ptr);
void* QTreeWidgetItem_Parent(void* ptr);
void QTreeWidgetItem_Read(void* ptr, void* in);
void QTreeWidgetItem_ReadDefault(void* ptr, void* in);
void QTreeWidgetItem_RemoveChild(void* ptr, void* child);
void QTreeWidgetItem_SetBackground(void* ptr, int column, void* brush);
void QTreeWidgetItem_SetCheckState(void* ptr, int column, long long state);
void QTreeWidgetItem_SetChildIndicatorPolicy(void* ptr, long long policy);
void QTreeWidgetItem_SetData(void* ptr, int column, int role, void* value);
void QTreeWidgetItem_SetDataDefault(void* ptr, int column, int role, void* value);
void QTreeWidgetItem_SetDisabled(void* ptr, char disabled);
void QTreeWidgetItem_SetExpanded(void* ptr, char expand);
void QTreeWidgetItem_SetFirstColumnSpanned(void* ptr, char span);
void QTreeWidgetItem_SetFlags(void* ptr, long long flags);
void QTreeWidgetItem_SetFont(void* ptr, int column, void* font);
void QTreeWidgetItem_SetForeground(void* ptr, int column, void* brush);
void QTreeWidgetItem_SetHidden(void* ptr, char hide);
void QTreeWidgetItem_SetIcon(void* ptr, int column, void* icon);
void QTreeWidgetItem_SetSelected(void* ptr, char sele);
void QTreeWidgetItem_SetSizeHint(void* ptr, int column, void* size);
void QTreeWidgetItem_SetStatusTip(void* ptr, int column, struct QtWidgets_PackedString statusTip);
void QTreeWidgetItem_SetText(void* ptr, int column, struct QtWidgets_PackedString text);
void QTreeWidgetItem_SetTextAlignment(void* ptr, int column, int alignment);
void QTreeWidgetItem_SetToolTip(void* ptr, int column, struct QtWidgets_PackedString toolTip);
void QTreeWidgetItem_SetWhatsThis(void* ptr, int column, struct QtWidgets_PackedString whatsThis);
void* QTreeWidgetItem_SizeHint(void* ptr, int column);
void QTreeWidgetItem_SortChildren(void* ptr, int column, long long order);
struct QtWidgets_PackedString QTreeWidgetItem_StatusTip(void* ptr, int column);
void* QTreeWidgetItem_TakeChild(void* ptr, int index);
struct QtWidgets_PackedList QTreeWidgetItem_TakeChildren(void* ptr);
struct QtWidgets_PackedString QTreeWidgetItem_Text(void* ptr, int column);
int QTreeWidgetItem_TextAlignment(void* ptr, int column);
struct QtWidgets_PackedString QTreeWidgetItem_ToolTip(void* ptr, int column);
void* QTreeWidgetItem_TreeWidget(void* ptr);
int QTreeWidgetItem_Type(void* ptr);
struct QtWidgets_PackedString QTreeWidgetItem_WhatsThis(void* ptr, int column);
void QTreeWidgetItem_Write(void* ptr, void* out);
void QTreeWidgetItem_WriteDefault(void* ptr, void* out);
void QTreeWidgetItem_DestroyQTreeWidgetItem(void* ptr);
void QTreeWidgetItem_DestroyQTreeWidgetItemDefault(void* ptr);
void* QTreeWidgetItem___addChildren_children_atList(void* ptr, int i);
void QTreeWidgetItem___addChildren_children_setList(void* ptr, void* i);
void* QTreeWidgetItem___addChildren_children_newList(void* ptr);
void* QTreeWidgetItem___insertChildren_children_atList(void* ptr, int i);
void QTreeWidgetItem___insertChildren_children_setList(void* ptr, void* i);
void* QTreeWidgetItem___insertChildren_children_newList(void* ptr);
void* QTreeWidgetItem___takeChildren_atList(void* ptr, int i);
void QTreeWidgetItem___takeChildren_setList(void* ptr, void* i);
void* QTreeWidgetItem___takeChildren_newList(void* ptr);
void* QTreeWidgetItem___children_atList(void* ptr, int i);
void QTreeWidgetItem___children_setList(void* ptr, void* i);
void* QTreeWidgetItem___children_newList(void* ptr);
void* QTreeWidgetItem___setChildren__atList(void* ptr, int i);
void QTreeWidgetItem___setChildren__setList(void* ptr, void* i);
void* QTreeWidgetItem___setChildren__newList(void* ptr);
void* QUndoCommand_NewQUndoCommand(void* parent);
void* QUndoCommand_NewQUndoCommand2(struct QtWidgets_PackedString text, void* parent);
struct QtWidgets_PackedString QUndoCommand_ActionText(void* ptr);
void* QUndoCommand_Child(void* ptr, int index);
int QUndoCommand_ChildCount(void* ptr);
int QUndoCommand_Id(void* ptr);
int QUndoCommand_IdDefault(void* ptr);
char QUndoCommand_IsObsolete(void* ptr);
char QUndoCommand_MergeWith(void* ptr, void* command);
char QUndoCommand_MergeWithDefault(void* ptr, void* command);
void QUndoCommand_Redo(void* ptr);
void QUndoCommand_RedoDefault(void* ptr);
void QUndoCommand_SetObsolete(void* ptr, char obsolete);
void QUndoCommand_SetText(void* ptr, struct QtWidgets_PackedString text);
struct QtWidgets_PackedString QUndoCommand_Text(void* ptr);
void QUndoCommand_Undo(void* ptr);
void QUndoCommand_UndoDefault(void* ptr);
void QUndoCommand_DestroyQUndoCommand(void* ptr);
void QUndoCommand_DestroyQUndoCommandDefault(void* ptr);
void* QUndoGroup_NewQUndoGroup(void* parent);
void* QUndoGroup_ActiveStack(void* ptr);
void QUndoGroup_ConnectActiveStackChanged(void* ptr, long long t);
void QUndoGroup_DisconnectActiveStackChanged(void* ptr);
void QUndoGroup_ActiveStackChanged(void* ptr, void* stack);
void QUndoGroup_AddStack(void* ptr, void* stack);
char QUndoGroup_CanRedo(void* ptr);
void QUndoGroup_ConnectCanRedoChanged(void* ptr, long long t);
void QUndoGroup_DisconnectCanRedoChanged(void* ptr);
void QUndoGroup_CanRedoChanged(void* ptr, char canRedo);
char QUndoGroup_CanUndo(void* ptr);
void QUndoGroup_ConnectCanUndoChanged(void* ptr, long long t);
void QUndoGroup_DisconnectCanUndoChanged(void* ptr);
void QUndoGroup_CanUndoChanged(void* ptr, char canUndo);
void QUndoGroup_ConnectCleanChanged(void* ptr, long long t);
void QUndoGroup_DisconnectCleanChanged(void* ptr);
void QUndoGroup_CleanChanged(void* ptr, char clean);
void* QUndoGroup_CreateRedoAction(void* ptr, void* parent, struct QtWidgets_PackedString prefix);
void* QUndoGroup_CreateUndoAction(void* ptr, void* parent, struct QtWidgets_PackedString prefix);
void QUndoGroup_ConnectIndexChanged(void* ptr, long long t);
void QUndoGroup_DisconnectIndexChanged(void* ptr);
void QUndoGroup_IndexChanged(void* ptr, int idx);
char QUndoGroup_IsClean(void* ptr);
void QUndoGroup_Redo(void* ptr);
void QUndoGroup_RedoDefault(void* ptr);
struct QtWidgets_PackedString QUndoGroup_RedoText(void* ptr);
void QUndoGroup_ConnectRedoTextChanged(void* ptr, long long t);
void QUndoGroup_DisconnectRedoTextChanged(void* ptr);
void QUndoGroup_RedoTextChanged(void* ptr, struct QtWidgets_PackedString redoText);
void QUndoGroup_RemoveStack(void* ptr, void* stack);
void QUndoGroup_SetActiveStack(void* ptr, void* stack);
void QUndoGroup_SetActiveStackDefault(void* ptr, void* stack);
struct QtWidgets_PackedList QUndoGroup_Stacks(void* ptr);
void QUndoGroup_Undo(void* ptr);
void QUndoGroup_UndoDefault(void* ptr);
struct QtWidgets_PackedString QUndoGroup_UndoText(void* ptr);
void QUndoGroup_ConnectUndoTextChanged(void* ptr, long long t);
void QUndoGroup_DisconnectUndoTextChanged(void* ptr);
void QUndoGroup_UndoTextChanged(void* ptr, struct QtWidgets_PackedString undoText);
void QUndoGroup_DestroyQUndoGroup(void* ptr);
void QUndoGroup_DestroyQUndoGroupDefault(void* ptr);
void* QUndoGroup___stacks_atList(void* ptr, int i);
void QUndoGroup___stacks_setList(void* ptr, void* i);
void* QUndoGroup___stacks_newList(void* ptr);
void* QUndoGroup___children_atList(void* ptr, int i);
void QUndoGroup___children_setList(void* ptr, void* i);
void* QUndoGroup___children_newList(void* ptr);
void* QUndoGroup___dynamicPropertyNames_atList(void* ptr, int i);
void QUndoGroup___dynamicPropertyNames_setList(void* ptr, void* i);
void* QUndoGroup___dynamicPropertyNames_newList(void* ptr);
void* QUndoGroup___findChildren_atList(void* ptr, int i);
void QUndoGroup___findChildren_setList(void* ptr, void* i);
void* QUndoGroup___findChildren_newList(void* ptr);
void* QUndoGroup___findChildren_atList3(void* ptr, int i);
void QUndoGroup___findChildren_setList3(void* ptr, void* i);
void* QUndoGroup___findChildren_newList3(void* ptr);
void QUndoGroup_ChildEventDefault(void* ptr, void* event);
void QUndoGroup_ConnectNotifyDefault(void* ptr, void* sign);
void QUndoGroup_CustomEventDefault(void* ptr, void* event);
void QUndoGroup_DeleteLaterDefault(void* ptr);
void QUndoGroup_DisconnectNotifyDefault(void* ptr, void* sign);
char QUndoGroup_EventDefault(void* ptr, void* e);
char QUndoGroup_EventFilterDefault(void* ptr, void* watched, void* event);
void* QUndoGroup_MetaObjectDefault(void* ptr);
void QUndoGroup_TimerEventDefault(void* ptr, void* event);
void* QUndoStack_NewQUndoStack(void* parent);
void QUndoStack_BeginMacro(void* ptr, struct QtWidgets_PackedString text);
char QUndoStack_CanRedo(void* ptr);
void QUndoStack_ConnectCanRedoChanged(void* ptr, long long t);
void QUndoStack_DisconnectCanRedoChanged(void* ptr);
void QUndoStack_CanRedoChanged(void* ptr, char canRedo);
char QUndoStack_CanUndo(void* ptr);
void QUndoStack_ConnectCanUndoChanged(void* ptr, long long t);
void QUndoStack_DisconnectCanUndoChanged(void* ptr);
void QUndoStack_CanUndoChanged(void* ptr, char canUndo);
void QUndoStack_ConnectCleanChanged(void* ptr, long long t);
void QUndoStack_DisconnectCleanChanged(void* ptr);
void QUndoStack_CleanChanged(void* ptr, char clean);
int QUndoStack_CleanIndex(void* ptr);
void QUndoStack_Clear(void* ptr);
void* QUndoStack_Command(void* ptr, int index);
int QUndoStack_Count(void* ptr);
void* QUndoStack_CreateRedoAction(void* ptr, void* parent, struct QtWidgets_PackedString prefix);
void* QUndoStack_CreateUndoAction(void* ptr, void* parent, struct QtWidgets_PackedString prefix);
void QUndoStack_EndMacro(void* ptr);
int QUndoStack_Index(void* ptr);
void QUndoStack_ConnectIndexChanged(void* ptr, long long t);
void QUndoStack_DisconnectIndexChanged(void* ptr);
void QUndoStack_IndexChanged(void* ptr, int idx);
char QUndoStack_IsActive(void* ptr);
char QUndoStack_IsClean(void* ptr);
void QUndoStack_Push(void* ptr, void* cmd);
void QUndoStack_Redo(void* ptr);
void QUndoStack_RedoDefault(void* ptr);
struct QtWidgets_PackedString QUndoStack_RedoText(void* ptr);
void QUndoStack_ConnectRedoTextChanged(void* ptr, long long t);
void QUndoStack_DisconnectRedoTextChanged(void* ptr);
void QUndoStack_RedoTextChanged(void* ptr, struct QtWidgets_PackedString redoText);
void QUndoStack_ResetClean(void* ptr);
void QUndoStack_ResetCleanDefault(void* ptr);
void QUndoStack_SetActive(void* ptr, char active);
void QUndoStack_SetActiveDefault(void* ptr, char active);
void QUndoStack_SetClean(void* ptr);
void QUndoStack_SetCleanDefault(void* ptr);
void QUndoStack_SetIndex(void* ptr, int idx);
void QUndoStack_SetIndexDefault(void* ptr, int idx);
void QUndoStack_SetUndoLimit(void* ptr, int limit);
struct QtWidgets_PackedString QUndoStack_Text(void* ptr, int idx);
void QUndoStack_Undo(void* ptr);
void QUndoStack_UndoDefault(void* ptr);
int QUndoStack_UndoLimit(void* ptr);
struct QtWidgets_PackedString QUndoStack_UndoText(void* ptr);
void QUndoStack_ConnectUndoTextChanged(void* ptr, long long t);
void QUndoStack_DisconnectUndoTextChanged(void* ptr);
void QUndoStack_UndoTextChanged(void* ptr, struct QtWidgets_PackedString undoText);
void QUndoStack_DestroyQUndoStack(void* ptr);
void QUndoStack_DestroyQUndoStackDefault(void* ptr);
void* QUndoStack___children_atList(void* ptr, int i);
void QUndoStack___children_setList(void* ptr, void* i);
void* QUndoStack___children_newList(void* ptr);
void* QUndoStack___dynamicPropertyNames_atList(void* ptr, int i);
void QUndoStack___dynamicPropertyNames_setList(void* ptr, void* i);
void* QUndoStack___dynamicPropertyNames_newList(void* ptr);
void* QUndoStack___findChildren_atList(void* ptr, int i);
void QUndoStack___findChildren_setList(void* ptr, void* i);
void* QUndoStack___findChildren_newList(void* ptr);
void* QUndoStack___findChildren_atList3(void* ptr, int i);
void QUndoStack___findChildren_setList3(void* ptr, void* i);
void* QUndoStack___findChildren_newList3(void* ptr);
void QUndoStack_ChildEventDefault(void* ptr, void* event);
void QUndoStack_ConnectNotifyDefault(void* ptr, void* sign);
void QUndoStack_CustomEventDefault(void* ptr, void* event);
void QUndoStack_DeleteLaterDefault(void* ptr);
void QUndoStack_DisconnectNotifyDefault(void* ptr, void* sign);
char QUndoStack_EventDefault(void* ptr, void* e);
char QUndoStack_EventFilterDefault(void* ptr, void* watched, void* event);
void* QUndoStack_MetaObjectDefault(void* ptr);
void QUndoStack_TimerEventDefault(void* ptr, void* event);
void* QUndoView_NewQUndoView(void* parent);
void* QUndoView_NewQUndoView2(void* stack, void* parent);
void* QUndoView_NewQUndoView3(void* group, void* parent);
void* QUndoView_CleanIcon(void* ptr);
struct QtWidgets_PackedString QUndoView_EmptyLabel(void* ptr);
void* QUndoView_Group(void* ptr);
void QUndoView_SetCleanIcon(void* ptr, void* icon);
void QUndoView_SetEmptyLabel(void* ptr, struct QtWidgets_PackedString label);
void QUndoView_SetGroup(void* ptr, void* group);
void QUndoView_SetGroupDefault(void* ptr, void* group);
void QUndoView_SetStack(void* ptr, void* stack);
void QUndoView_SetStackDefault(void* ptr, void* stack);
void* QUndoView_Stack(void* ptr);
void QUndoView_DestroyQUndoView(void* ptr);
void QUndoView_DestroyQUndoViewDefault(void* ptr);
void* QVBoxLayout_NewQVBoxLayout();
void* QVBoxLayout_NewQVBoxLayout2(void* parent);
void QVBoxLayout_DestroyQVBoxLayout(void* ptr);
void QVBoxLayout_DestroyQVBoxLayoutDefault(void* ptr);
void* QWhatsThis_QWhatsThis_CreateAction(void* parent);
void QWhatsThis_QWhatsThis_EnterWhatsThisMode();
void QWhatsThis_QWhatsThis_HideText();
char QWhatsThis_QWhatsThis_InWhatsThisMode();
void QWhatsThis_QWhatsThis_LeaveWhatsThisMode();
void QWhatsThis_QWhatsThis_ShowText(void* pos, struct QtWidgets_PackedString text, void* w);
void* QWidget_NewQWidget(void* parent, long long ff);
char QWidget_AcceptDrops(void* ptr);
struct QtWidgets_PackedString QWidget_AccessibleDescription(void* ptr);
struct QtWidgets_PackedString QWidget_AccessibleName(void* ptr);
void QWidget_ActionEvent(void* ptr, void* event);
void QWidget_ActionEventDefault(void* ptr, void* event);
struct QtWidgets_PackedList QWidget_Actions(void* ptr);
void QWidget_ActivateWindow(void* ptr);
void QWidget_AddAction(void* ptr, void* action);
void QWidget_AddActions(void* ptr, void* actions);
void QWidget_AdjustSize(void* ptr);
char QWidget_AutoFillBackground(void* ptr);
long long QWidget_BackgroundRole(void* ptr);
void* QWidget_BackingStore(void* ptr);
void* QWidget_BaseSize(void* ptr);
void QWidget_ChangeEvent(void* ptr, void* event);
void QWidget_ChangeEventDefault(void* ptr, void* event);
void* QWidget_ChildAt(void* ptr, int x, int y);
void* QWidget_ChildAt2(void* ptr, void* p);
void* QWidget_ChildrenRect(void* ptr);
void* QWidget_ChildrenRegion(void* ptr);
void QWidget_ClearFocus(void* ptr);
void QWidget_ClearMask(void* ptr);
char QWidget_Close(void* ptr);
char QWidget_CloseDefault(void* ptr);
void QWidget_CloseEvent(void* ptr, void* event);
void QWidget_CloseEventDefault(void* ptr, void* event);
void* QWidget_ContentsMargins(void* ptr);
void* QWidget_ContentsRect(void* ptr);
void QWidget_ContextMenuEvent(void* ptr, void* event);
void QWidget_ContextMenuEventDefault(void* ptr, void* event);
long long QWidget_ContextMenuPolicy(void* ptr);
void QWidget_Create(void* ptr, uintptr_t window, char initializeWindow, char destroyOldWindow);
void* QWidget_QWidget_CreateWindowContainer(void* window, void* parent, long long flags);
void* QWidget_Cursor(void* ptr);
void QWidget_ConnectCustomContextMenuRequested(void* ptr, long long t);
void QWidget_DisconnectCustomContextMenuRequested(void* ptr);
void QWidget_CustomContextMenuRequested(void* ptr, void* pos);
void QWidget_Destroy(void* ptr, char destroyWindow, char destroySubWindows);
void QWidget_DragEnterEvent(void* ptr, void* event);
void QWidget_DragEnterEventDefault(void* ptr, void* event);
void QWidget_DragLeaveEvent(void* ptr, void* event);
void QWidget_DragLeaveEventDefault(void* ptr, void* event);
void QWidget_DragMoveEvent(void* ptr, void* event);
void QWidget_DragMoveEventDefault(void* ptr, void* event);
void QWidget_DropEvent(void* ptr, void* event);
void QWidget_DropEventDefault(void* ptr, void* event);
uintptr_t QWidget_EffectiveWinId(void* ptr);
void QWidget_EnsurePolished(void* ptr);
void QWidget_EnterEvent(void* ptr, void* event);
void QWidget_EnterEventDefault(void* ptr, void* event);
char QWidget_Event(void* ptr, void* event);
char QWidget_EventDefault(void* ptr, void* event);
void* QWidget_QWidget_Find(uintptr_t id);
void QWidget_FocusInEvent(void* ptr, void* event);
void QWidget_FocusInEventDefault(void* ptr, void* event);
char QWidget_FocusNextChild(void* ptr);
char QWidget_FocusNextPrevChild(void* ptr, char next);
char QWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QWidget_FocusOutEvent(void* ptr, void* event);
void QWidget_FocusOutEventDefault(void* ptr, void* event);
long long QWidget_FocusPolicy(void* ptr);
char QWidget_FocusPreviousChild(void* ptr);
void* QWidget_FocusProxy(void* ptr);
void* QWidget_FocusWidget(void* ptr);
void* QWidget_Font(void* ptr);
void* QWidget_FontInfo(void* ptr);
void* QWidget_FontMetrics(void* ptr);
long long QWidget_ForegroundRole(void* ptr);
void* QWidget_FrameGeometry(void* ptr);
void* QWidget_FrameSize(void* ptr);
void* QWidget_Geometry(void* ptr);
void* QWidget_Grab(void* ptr, void* rectangle);
void QWidget_GrabGesture(void* ptr, long long gesture, long long flags);
void QWidget_GrabKeyboard(void* ptr);
void QWidget_GrabMouse(void* ptr);
void QWidget_GrabMouse2(void* ptr, void* cursor);
int QWidget_GrabShortcut(void* ptr, void* key, long long context);
void* QWidget_GraphicsEffect(void* ptr);
void* QWidget_GraphicsProxyWidget(void* ptr);
char QWidget_HasEditFocus(void* ptr);
char QWidget_HasFocus(void* ptr);
char QWidget_HasHeightForWidth(void* ptr);
char QWidget_HasHeightForWidthDefault(void* ptr);
char QWidget_HasMouseTracking(void* ptr);
char QWidget_HasTabletTracking(void* ptr);
int QWidget_Height(void* ptr);
int QWidget_HeightForWidth(void* ptr, int w);
int QWidget_HeightForWidthDefault(void* ptr, int w);
void QWidget_Hide(void* ptr);
void QWidget_HideDefault(void* ptr);
void QWidget_HideEvent(void* ptr, void* event);
void QWidget_HideEventDefault(void* ptr, void* event);
void QWidget_InitPainter(void* ptr, void* painter);
void QWidget_InitPainterDefault(void* ptr, void* painter);
void QWidget_InputMethodEvent(void* ptr, void* event);
void QWidget_InputMethodEventDefault(void* ptr, void* event);
long long QWidget_InputMethodHints(void* ptr);
void* QWidget_InputMethodQuery(void* ptr, long long query);
void* QWidget_InputMethodQueryDefault(void* ptr, long long query);
void QWidget_InsertAction(void* ptr, void* before, void* action);
void QWidget_InsertActions(void* ptr, void* before, void* actions);
char QWidget_IsActiveWindow(void* ptr);
char QWidget_IsAncestorOf(void* ptr, void* child);
char QWidget_IsEnabled(void* ptr);
char QWidget_IsEnabledTo(void* ptr, void* ancestor);
char QWidget_IsFullScreen(void* ptr);
char QWidget_IsHidden(void* ptr);
char QWidget_IsMaximized(void* ptr);
char QWidget_IsMinimized(void* ptr);
char QWidget_IsModal(void* ptr);
char QWidget_IsVisible(void* ptr);
char QWidget_IsVisibleTo(void* ptr, void* ancestor);
char QWidget_IsWindow(void* ptr);
char QWidget_IsWindowModified(void* ptr);
void QWidget_KeyPressEvent(void* ptr, void* event);
void QWidget_KeyPressEventDefault(void* ptr, void* event);
void QWidget_KeyReleaseEvent(void* ptr, void* event);
void QWidget_KeyReleaseEventDefault(void* ptr, void* event);
void* QWidget_QWidget_KeyboardGrabber();
void* QWidget_Layout(void* ptr);
long long QWidget_LayoutDirection(void* ptr);
void QWidget_LeaveEvent(void* ptr, void* event);
void QWidget_LeaveEventDefault(void* ptr, void* event);
void* QWidget_Locale(void* ptr);
void QWidget_Lower(void* ptr);
void QWidget_LowerDefault(void* ptr);
void* QWidget_MapFrom(void* ptr, void* parent, void* pos);
void* QWidget_MapFromGlobal(void* ptr, void* pos);
void* QWidget_MapFromParent(void* ptr, void* pos);
void* QWidget_MapTo(void* ptr, void* parent, void* pos);
void* QWidget_MapToGlobal(void* ptr, void* pos);
void* QWidget_MapToParent(void* ptr, void* pos);
void* QWidget_Mask(void* ptr);
int QWidget_MaximumHeight(void* ptr);
void* QWidget_MaximumSize(void* ptr);
int QWidget_MaximumWidth(void* ptr);
int QWidget_Metric(void* ptr, long long m);
int QWidget_MetricDefault(void* ptr, long long m);
int QWidget_MinimumHeight(void* ptr);
void* QWidget_MinimumSize(void* ptr);
void* QWidget_MinimumSizeHint(void* ptr);
void* QWidget_MinimumSizeHintDefault(void* ptr);
int QWidget_MinimumWidth(void* ptr);
void QWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void* QWidget_QWidget_MouseGrabber();
void QWidget_MouseMoveEvent(void* ptr, void* event);
void QWidget_MouseMoveEventDefault(void* ptr, void* event);
void QWidget_MousePressEvent(void* ptr, void* event);
void QWidget_MousePressEventDefault(void* ptr, void* event);
void QWidget_MouseReleaseEvent(void* ptr, void* event);
void QWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QWidget_Move(void* ptr, void* vqp);
void QWidget_Move2(void* ptr, int x, int y);
void QWidget_MoveEvent(void* ptr, void* event);
void QWidget_MoveEventDefault(void* ptr, void* event);
char QWidget_NativeEvent(void* ptr, void* eventType, void* message, long* result);
char QWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long* result);
void* QWidget_NativeParentWidget(void* ptr);
void* QWidget_NextInFocusChain(void* ptr);
void* QWidget_NormalGeometry(void* ptr);
void QWidget_OverrideWindowFlags(void* ptr, long long flags);
void* QWidget_PaintEngine(void* ptr);
void* QWidget_PaintEngineDefault(void* ptr);
void QWidget_PaintEvent(void* ptr, void* event);
void QWidget_PaintEventDefault(void* ptr, void* event);
void* QWidget_Palette(void* ptr);
void* QWidget_ParentWidget(void* ptr);
void* QWidget_Pos(void* ptr);
void* QWidget_PreviousInFocusChain(void* ptr);
void QWidget_Raise(void* ptr);
void QWidget_RaiseDefault(void* ptr);
void* QWidget_Rect(void* ptr);
void QWidget_ReleaseKeyboard(void* ptr);
void QWidget_ReleaseMouse(void* ptr);
void QWidget_ReleaseShortcut(void* ptr, int id);
void QWidget_RemoveAction(void* ptr, void* action);
void QWidget_Render(void* ptr, void* target, void* targetOffset, void* sourceRegion, long long renderFlags);
void QWidget_Render2(void* ptr, void* painter, void* targetOffset, void* sourceRegion, long long renderFlags);
void QWidget_Repaint(void* ptr);
void QWidget_RepaintDefault(void* ptr);
void QWidget_Repaint2(void* ptr, int x, int y, int w, int h);
void QWidget_Repaint3(void* ptr, void* rect);
void QWidget_Repaint4(void* ptr, void* rgn);
void QWidget_Resize(void* ptr, void* vqs);
void QWidget_Resize2(void* ptr, int w, int h);
void QWidget_ResizeEvent(void* ptr, void* event);
void QWidget_ResizeEventDefault(void* ptr, void* event);
char QWidget_RestoreGeometry(void* ptr, void* geometry);
void* QWidget_SaveGeometry(void* ptr);
void* QWidget_Screen(void* ptr);
void QWidget_Scroll(void* ptr, int dx, int dy);
void QWidget_Scroll2(void* ptr, int dx, int dy, void* r);
void QWidget_SetAcceptDrops(void* ptr, char on);
void QWidget_SetAccessibleDescription(void* ptr, struct QtWidgets_PackedString description);
void QWidget_SetAccessibleName(void* ptr, struct QtWidgets_PackedString name);
void QWidget_SetAttribute(void* ptr, long long attribute, char on);
void QWidget_SetAutoFillBackground(void* ptr, char enabled);
void QWidget_SetBackgroundRole(void* ptr, long long role);
void QWidget_SetBaseSize(void* ptr, void* vqs);
void QWidget_SetBaseSize2(void* ptr, int basew, int baseh);
void QWidget_SetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QWidget_SetContentsMargins2(void* ptr, void* margins);
void QWidget_SetContextMenuPolicy(void* ptr, long long policy);
void QWidget_SetCursor(void* ptr, void* vqc);
void QWidget_SetDisabled(void* ptr, char disable);
void QWidget_SetDisabledDefault(void* ptr, char disable);
void QWidget_SetEditFocus(void* ptr, char enable);
void QWidget_SetEnabled(void* ptr, char vbo);
void QWidget_SetEnabledDefault(void* ptr, char vbo);
void QWidget_SetFixedHeight(void* ptr, int h);
void QWidget_SetFixedSize(void* ptr, void* s);
void QWidget_SetFixedSize2(void* ptr, int w, int h);
void QWidget_SetFixedWidth(void* ptr, int w);
void QWidget_SetFocus(void* ptr, long long reason);
void QWidget_SetFocus2(void* ptr);
void QWidget_SetFocus2Default(void* ptr);
void QWidget_SetFocusPolicy(void* ptr, long long policy);
void QWidget_SetFocusProxy(void* ptr, void* w);
void QWidget_SetFont(void* ptr, void* vqf);
void QWidget_SetForegroundRole(void* ptr, long long role);
void QWidget_SetGeometry(void* ptr, void* vqr);
void QWidget_SetGeometry2(void* ptr, int x, int y, int w, int h);
void QWidget_SetGraphicsEffect(void* ptr, void* effect);
void QWidget_SetHidden(void* ptr, char hidden);
void QWidget_SetHiddenDefault(void* ptr, char hidden);
void QWidget_SetInputMethodHints(void* ptr, long long hints);
void QWidget_SetLayout(void* ptr, void* layout);
void QWidget_SetLayoutDirection(void* ptr, long long direction);
void QWidget_SetLocale(void* ptr, void* locale);
void QWidget_SetMask(void* ptr, void* bitmap);
void QWidget_SetMask2(void* ptr, void* region);
void QWidget_SetMaximumHeight(void* ptr, int maxh);
void QWidget_SetMaximumSize(void* ptr, void* vqs);
void QWidget_SetMaximumSize2(void* ptr, int maxw, int maxh);
void QWidget_SetMaximumWidth(void* ptr, int maxw);
void QWidget_SetMinimumHeight(void* ptr, int minh);
void QWidget_SetMinimumSize(void* ptr, void* vqs);
void QWidget_SetMinimumSize2(void* ptr, int minw, int minh);
void QWidget_SetMinimumWidth(void* ptr, int minw);
void QWidget_SetMouseTracking(void* ptr, char enable);
void QWidget_SetPalette(void* ptr, void* vqp);
void QWidget_SetParent(void* ptr, void* parent);
void QWidget_SetParent2(void* ptr, void* parent, long long ff);
void QWidget_SetShortcutAutoRepeat(void* ptr, int id, char enable);
void QWidget_SetShortcutEnabled(void* ptr, int id, char enable);
void QWidget_SetSizeIncrement(void* ptr, void* vqs);
void QWidget_SetSizeIncrement2(void* ptr, int w, int h);
void QWidget_SetSizePolicy(void* ptr, void* vqs);
void QWidget_SetSizePolicy2(void* ptr, long long horizontal, long long vertical);
void QWidget_SetStatusTip(void* ptr, struct QtWidgets_PackedString vqs);
void QWidget_SetStyle(void* ptr, void* style);
void QWidget_SetStyleSheet(void* ptr, struct QtWidgets_PackedString styleSheet);
void QWidget_SetStyleSheetDefault(void* ptr, struct QtWidgets_PackedString styleSheet);
void QWidget_QWidget_SetTabOrder(void* first, void* second);
void QWidget_SetTabletTracking(void* ptr, char enable);
void QWidget_SetToolTip(void* ptr, struct QtWidgets_PackedString vqs);
void QWidget_SetToolTipDuration(void* ptr, int msec);
void QWidget_SetUpdatesEnabled(void* ptr, char enable);
void QWidget_SetVisible(void* ptr, char visible);
void QWidget_SetVisibleDefault(void* ptr, char visible);
void QWidget_SetWhatsThis(void* ptr, struct QtWidgets_PackedString vqs);
void QWidget_SetWindowFilePath(void* ptr, struct QtWidgets_PackedString filePath);
void QWidget_SetWindowFlag(void* ptr, long long flag, char on);
void QWidget_SetWindowFlags(void* ptr, long long ty);
void QWidget_SetWindowIcon(void* ptr, void* icon);
void QWidget_SetWindowIconText(void* ptr, struct QtWidgets_PackedString vqs);
void QWidget_SetWindowModality(void* ptr, long long windowModality);
void QWidget_SetWindowModified(void* ptr, char vbo);
void QWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QWidget_SetWindowOpacity(void* ptr, double level);
void QWidget_SetWindowRole(void* ptr, struct QtWidgets_PackedString role);
void QWidget_SetWindowState(void* ptr, long long windowState);
void QWidget_SetWindowTitle(void* ptr, struct QtWidgets_PackedString vqs);
void QWidget_SetWindowTitleDefault(void* ptr, struct QtWidgets_PackedString vqs);
void QWidget_SetupUi(void* ptr, void* widget);
void QWidget_Show(void* ptr);
void QWidget_ShowDefault(void* ptr);
void QWidget_ShowEvent(void* ptr, void* event);
void QWidget_ShowEventDefault(void* ptr, void* event);
void QWidget_ShowFullScreen(void* ptr);
void QWidget_ShowFullScreenDefault(void* ptr);
void QWidget_ShowMaximized(void* ptr);
void QWidget_ShowMaximizedDefault(void* ptr);
void QWidget_ShowMinimized(void* ptr);
void QWidget_ShowMinimizedDefault(void* ptr);
void QWidget_ShowNormal(void* ptr);
void QWidget_ShowNormalDefault(void* ptr);
void* QWidget_Size(void* ptr);
void* QWidget_SizeHint(void* ptr);
void* QWidget_SizeHintDefault(void* ptr);
void* QWidget_SizeIncrement(void* ptr);
void* QWidget_SizePolicy(void* ptr);
void QWidget_StackUnder(void* ptr, void* w);
struct QtWidgets_PackedString QWidget_StatusTip(void* ptr);
void* QWidget_Style(void* ptr);
struct QtWidgets_PackedString QWidget_StyleSheet(void* ptr);
void QWidget_TabletEvent(void* ptr, void* event);
void QWidget_TabletEventDefault(void* ptr, void* event);
char QWidget_TestAttribute(void* ptr, long long attribute);
struct QtWidgets_PackedString QWidget_ToolTip(void* ptr);
int QWidget_ToolTipDuration(void* ptr);
char QWidget_UnderMouse(void* ptr);
void QWidget_UngrabGesture(void* ptr, long long gesture);
void QWidget_UnsetCursor(void* ptr);
void QWidget_UnsetLayoutDirection(void* ptr);
void QWidget_UnsetLocale(void* ptr);
void QWidget_Update(void* ptr);
void QWidget_UpdateDefault(void* ptr);
void QWidget_Update2(void* ptr, int x, int y, int w, int h);
void QWidget_Update3(void* ptr, void* rect);
void QWidget_Update4(void* ptr, void* rgn);
void QWidget_UpdateGeometry(void* ptr);
void QWidget_UpdateMicroFocus(void* ptr);
void QWidget_UpdateMicroFocusDefault(void* ptr);
char QWidget_UpdatesEnabled(void* ptr);
void* QWidget_VisibleRegion(void* ptr);
struct QtWidgets_PackedString QWidget_WhatsThis(void* ptr);
void QWidget_WheelEvent(void* ptr, void* event);
void QWidget_WheelEventDefault(void* ptr, void* event);
int QWidget_Width(void* ptr);
uintptr_t QWidget_WinId(void* ptr);
void* QWidget_Window(void* ptr);
struct QtWidgets_PackedString QWidget_WindowFilePath(void* ptr);
long long QWidget_WindowFlags(void* ptr);
void* QWidget_WindowHandle(void* ptr);
void* QWidget_WindowIcon(void* ptr);
void QWidget_ConnectWindowIconChanged(void* ptr, long long t);
void QWidget_DisconnectWindowIconChanged(void* ptr);
void QWidget_WindowIconChanged(void* ptr, void* icon);
struct QtWidgets_PackedString QWidget_WindowIconText(void* ptr);
long long QWidget_WindowModality(void* ptr);
double QWidget_WindowOpacity(void* ptr);
struct QtWidgets_PackedString QWidget_WindowRole(void* ptr);
long long QWidget_WindowState(void* ptr);
struct QtWidgets_PackedString QWidget_WindowTitle(void* ptr);
void QWidget_ConnectWindowTitleChanged(void* ptr, long long t);
void QWidget_DisconnectWindowTitleChanged(void* ptr);
void QWidget_WindowTitleChanged(void* ptr, struct QtWidgets_PackedString title);
long long QWidget_WindowType(void* ptr);
int QWidget_X(void* ptr);
int QWidget_Y(void* ptr);
void QWidget_DestroyQWidget(void* ptr);
void QWidget_DestroyQWidgetDefault(void* ptr);
void* QWidget___actions_atList(void* ptr, int i);
void QWidget___actions_setList(void* ptr, void* i);
void* QWidget___actions_newList(void* ptr);
void* QWidget___addActions_actions_atList(void* ptr, int i);
void QWidget___addActions_actions_setList(void* ptr, void* i);
void* QWidget___addActions_actions_newList(void* ptr);
void* QWidget___insertActions_actions_atList(void* ptr, int i);
void QWidget___insertActions_actions_setList(void* ptr, void* i);
void* QWidget___insertActions_actions_newList(void* ptr);
void* QWidget___children_atList(void* ptr, int i);
void QWidget___children_setList(void* ptr, void* i);
void* QWidget___children_newList(void* ptr);
void* QWidget___dynamicPropertyNames_atList(void* ptr, int i);
void QWidget___dynamicPropertyNames_setList(void* ptr, void* i);
void* QWidget___dynamicPropertyNames_newList(void* ptr);
void* QWidget___findChildren_atList(void* ptr, int i);
void QWidget___findChildren_setList(void* ptr, void* i);
void* QWidget___findChildren_newList(void* ptr);
void* QWidget___findChildren_atList3(void* ptr, int i);
void QWidget___findChildren_setList3(void* ptr, void* i);
void* QWidget___findChildren_newList3(void* ptr);
void QWidget_ChildEvent(void* ptr, void* event);
void QWidget_ChildEventDefault(void* ptr, void* event);
void QWidget_ConnectNotify(void* ptr, void* sign);
void QWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QWidget_CustomEvent(void* ptr, void* event);
void QWidget_CustomEventDefault(void* ptr, void* event);
void QWidget_DeleteLater(void* ptr);
void QWidget_DeleteLaterDefault(void* ptr);
void QWidget_DisconnectNotify(void* ptr, void* sign);
void QWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QWidget_EventFilter(void* ptr, void* watched, void* event);
char QWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWidget_MetaObject(void* ptr);
void* QWidget_MetaObjectDefault(void* ptr);
void QWidget_TimerEvent(void* ptr, void* event);
void QWidget_TimerEventDefault(void* ptr, void* event);
void* QWidgetAction_NewQWidgetAction(void* parent);
void* QWidgetAction_CreateWidget(void* ptr, void* parent);
void* QWidgetAction_CreateWidgetDefault(void* ptr, void* parent);
struct QtWidgets_PackedList QWidgetAction_CreatedWidgets(void* ptr);
void* QWidgetAction_DefaultWidget(void* ptr);
void QWidgetAction_DeleteWidget(void* ptr, void* widget);
void QWidgetAction_DeleteWidgetDefault(void* ptr, void* widget);
void QWidgetAction_ReleaseWidget(void* ptr, void* widget);
void* QWidgetAction_RequestWidget(void* ptr, void* parent);
void QWidgetAction_SetDefaultWidget(void* ptr, void* widget);
void QWidgetAction_DestroyQWidgetAction(void* ptr);
void QWidgetAction_DestroyQWidgetActionDefault(void* ptr);
void* QWidgetAction___createdWidgets_atList(void* ptr, int i);
void QWidgetAction___createdWidgets_setList(void* ptr, void* i);
void* QWidgetAction___createdWidgets_newList(void* ptr);
void* QWidgetItem_NewQWidgetItem2(void* widget);
long long QWidgetItem_ExpandingDirections(void* ptr);
long long QWidgetItem_ExpandingDirectionsDefault(void* ptr);
void* QWidgetItem_Geometry(void* ptr);
void* QWidgetItem_GeometryDefault(void* ptr);
char QWidgetItem_IsEmpty(void* ptr);
char QWidgetItem_IsEmptyDefault(void* ptr);
void* QWidgetItem_MaximumSize(void* ptr);
void* QWidgetItem_MaximumSizeDefault(void* ptr);
void* QWidgetItem_MinimumSize(void* ptr);
void* QWidgetItem_MinimumSizeDefault(void* ptr);
void QWidgetItem_SetGeometry(void* ptr, void* rect);
void QWidgetItem_SetGeometryDefault(void* ptr, void* rect);
void* QWidgetItem_SizeHint(void* ptr);
void* QWidgetItem_SizeHintDefault(void* ptr);
void QWidgetItem_DestroyQWidgetItem(void* ptr);
void QWidgetItem_DestroyQWidgetItemDefault(void* ptr);
void* QWizard_NewQWizard(void* parent, long long flags);
int QWizard_AddPage(void* ptr, void* page);
void QWizard_Back(void* ptr);
void QWizard_BackDefault(void* ptr);
void* QWizard_Button(void* ptr, long long which);
struct QtWidgets_PackedString QWizard_ButtonText(void* ptr, long long which);
void QWizard_CleanupPage(void* ptr, int id);
void QWizard_CleanupPageDefault(void* ptr, int id);
int QWizard_CurrentId(void* ptr);
void QWizard_ConnectCurrentIdChanged(void* ptr, long long t);
void QWizard_DisconnectCurrentIdChanged(void* ptr);
void QWizard_CurrentIdChanged(void* ptr, int id);
void* QWizard_CurrentPage(void* ptr);
void QWizard_ConnectCustomButtonClicked(void* ptr, long long t);
void QWizard_DisconnectCustomButtonClicked(void* ptr);
void QWizard_CustomButtonClicked(void* ptr, int which);
void QWizard_Done(void* ptr, int result);
void QWizard_DoneDefault(void* ptr, int result);
void* QWizard_Field(void* ptr, struct QtWidgets_PackedString name);
char QWizard_HasVisitedPage(void* ptr, int id);
void QWizard_ConnectHelpRequested(void* ptr, long long t);
void QWizard_DisconnectHelpRequested(void* ptr);
void QWizard_HelpRequested(void* ptr);
void QWizard_InitializePage(void* ptr, int id);
void QWizard_InitializePageDefault(void* ptr, int id);
void QWizard_Next(void* ptr);
void QWizard_NextDefault(void* ptr);
int QWizard_NextId(void* ptr);
int QWizard_NextIdDefault(void* ptr);
long long QWizard_Options(void* ptr);
void* QWizard_Page(void* ptr, int id);
void QWizard_ConnectPageAdded(void* ptr, long long t);
void QWizard_DisconnectPageAdded(void* ptr);
void QWizard_PageAdded(void* ptr, int id);
struct QtWidgets_PackedList QWizard_PageIds(void* ptr);
void QWizard_ConnectPageRemoved(void* ptr, long long t);
void QWizard_DisconnectPageRemoved(void* ptr);
void QWizard_PageRemoved(void* ptr, int id);
void* QWizard_Pixmap(void* ptr, long long which);
void QWizard_RemovePage(void* ptr, int id);
void QWizard_Restart(void* ptr);
void QWizard_RestartDefault(void* ptr);
void QWizard_SetButton(void* ptr, long long which, void* button);
void QWizard_SetButtonText(void* ptr, long long which, struct QtWidgets_PackedString text);
void QWizard_SetDefaultProperty(void* ptr, char* className, char* property, char* changedSignal);
void QWizard_SetField(void* ptr, struct QtWidgets_PackedString name, void* value);
void QWizard_SetOption(void* ptr, long long option, char on);
void QWizard_SetOptions(void* ptr, long long options);
void QWizard_SetPage(void* ptr, int id, void* page);
void QWizard_SetPixmap(void* ptr, long long which, void* pixmap);
void QWizard_SetSideWidget(void* ptr, void* widget);
void QWizard_SetStartId(void* ptr, int id);
void QWizard_SetSubTitleFormat(void* ptr, long long format);
void QWizard_SetTitleFormat(void* ptr, long long format);
void QWizard_SetWizardStyle(void* ptr, long long style);
void* QWizard_SideWidget(void* ptr);
int QWizard_StartId(void* ptr);
long long QWizard_SubTitleFormat(void* ptr);
char QWizard_TestOption(void* ptr, long long option);
long long QWizard_TitleFormat(void* ptr);
char QWizard_ValidateCurrentPage(void* ptr);
char QWizard_ValidateCurrentPageDefault(void* ptr);
struct QtWidgets_PackedList QWizard_VisitedIds(void* ptr);
long long QWizard_WizardStyle(void* ptr);
void QWizard_DestroyQWizard(void* ptr);
void QWizard_DestroyQWizardDefault(void* ptr);
int QWizard___pageIds_atList(void* ptr, int i);
void QWizard___pageIds_setList(void* ptr, int i);
void* QWizard___pageIds_newList(void* ptr);
int QWizard___visitedIds_atList(void* ptr, int i);
void QWizard___visitedIds_setList(void* ptr, int i);
void* QWizard___visitedIds_newList(void* ptr);
int QWizard___visitedPages_atList(void* ptr, int i);
void QWizard___visitedPages_setList(void* ptr, int i);
void* QWizard___visitedPages_newList(void* ptr);
void* QWizardPage_NewQWizardPage(void* parent);
struct QtWidgets_PackedString QWizardPage_ButtonText(void* ptr, long long which);
void QWizardPage_CleanupPage(void* ptr);
void QWizardPage_CleanupPageDefault(void* ptr);
void QWizardPage_ConnectCompleteChanged(void* ptr, long long t);
void QWizardPage_DisconnectCompleteChanged(void* ptr);
void QWizardPage_CompleteChanged(void* ptr);
void* QWizardPage_Field(void* ptr, struct QtWidgets_PackedString name);
void QWizardPage_InitializePage(void* ptr);
void QWizardPage_InitializePageDefault(void* ptr);
char QWizardPage_IsCommitPage(void* ptr);
char QWizardPage_IsComplete(void* ptr);
char QWizardPage_IsCompleteDefault(void* ptr);
char QWizardPage_IsFinalPage(void* ptr);
int QWizardPage_NextId(void* ptr);
int QWizardPage_NextIdDefault(void* ptr);
void* QWizardPage_Pixmap(void* ptr, long long which);
void QWizardPage_RegisterField(void* ptr, struct QtWidgets_PackedString name, void* widget, char* property, char* changedSignal);
void QWizardPage_SetButtonText(void* ptr, long long which, struct QtWidgets_PackedString text);
void QWizardPage_SetCommitPage(void* ptr, char commitPage);
void QWizardPage_SetField(void* ptr, struct QtWidgets_PackedString name, void* value);
void QWizardPage_SetFinalPage(void* ptr, char finalPage);
void QWizardPage_SetPixmap(void* ptr, long long which, void* pixmap);
void QWizardPage_SetSubTitle(void* ptr, struct QtWidgets_PackedString subTitle);
void QWizardPage_SetTitle(void* ptr, struct QtWidgets_PackedString title);
struct QtWidgets_PackedString QWizardPage_SubTitle(void* ptr);
struct QtWidgets_PackedString QWizardPage_Title(void* ptr);
char QWizardPage_ValidatePage(void* ptr);
char QWizardPage_ValidatePageDefault(void* ptr);
void* QWizardPage_Wizard(void* ptr);
void QWizardPage_DestroyQWizardPage(void* ptr);
void QWizardPage_DestroyQWizardPageDefault(void* ptr);

#ifdef __cplusplus
}
#endif

#endif